<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="/blog/" rel="alternate" type="text/html" /><updated>2020-01-29T11:32:26-05:00</updated><id>/blog/feed.xml</id><title type="html">Ed Burns Blog</title><subtitle>Ed Burns blogs here, mostly about Java and software, but sometimes about other random things.
</subtitle><entry><title type="html">Flow for developing regular expressions (regex) of moderate complexity</title><link href="/blog/2020/01/29/regex-development-flow.html" rel="alternate" type="text/html" title="Flow for developing regular expressions (regex) of moderate complexity" /><published>2020-01-29T10:40:00-05:00</published><updated>2020-01-29T10:40:00-05:00</updated><id>/blog/2020/01/29/regex-development-flow</id><content type="html" xml:base="/blog/2020/01/29/regex-development-flow.html">&lt;p&gt;I recently had to add a feature to the UI for the &lt;a href=&quot;https://azuremarketplace.microsoft.com/en-us/marketplace/apps?search=weblogic%2012.2.1.3&amp;amp;page=1&quot;&gt;Azure Marketplace
Offers for Oracle WebLogic
Server&lt;/a&gt;.
The UI for marketplace entries is written in JSON.  As I stated in &lt;a href=&quot;/blog/2020/01/25/arm-development-faster-iteration-time.html&quot;&gt;my
previous post&lt;/a&gt;, JSON is an awful
choice for a DSL for deploying things to Azure.  It is also an awful
choice for declaring a wizard-style UI, but at least the particular use case of &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/azure-resource-manager/managed-applications/create-uidefinition-overview&quot;&gt;building the UI for an Azure Marketplace offer&lt;/a&gt; allows easy &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/azure-resource-manager/managed-applications/microsoft-common-textbox#remarks&quot;&gt;incorporation of regular expressions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This post shows a technique for iteratively developing a moderately
complex regular expression (regex).&lt;/p&gt;

&lt;p&gt;In my case, I want a regex that validates that a string is a comma
separated list of numbers or hyphen separated numbers.  The list must
have no whitespace and not have a trailing comma.  For example,
&lt;code class=&quot;highlighter-rouge&quot;&gt;80,443,7001,7002,8000-8100&lt;/code&gt; is valid while
&lt;code class=&quot;highlighter-rouge&quot;&gt;80,443,7001,7002,8000-8100,&lt;/code&gt; is not.&lt;/p&gt;

&lt;p&gt;Spoiler: here is the final regex.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;^((([0-9]+-[0-9]+)|([0-9]+))[,]?)+[^,]$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I developed this moderately complex regex using this process.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Use &lt;a href=&quot;https://regexr.com/&quot;&gt;https://regexr.com/&lt;/a&gt; to iteratively develop.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Write an English language statement of the regex: “I want a regex
that validates that a string is a comma separated list of numbers or
hyphen separated numbers.  The list must have no whitespace and not have
a trailing comma.”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Decompose the English into its parts.&lt;/p&gt;

    &lt;p&gt;a. no whitespace&lt;/p&gt;

    &lt;p&gt;b. numbers&lt;/p&gt;

    &lt;p&gt;c. hyphen separated numbers&lt;/p&gt;

    &lt;p&gt;d. comma separated list&lt;/p&gt;

    &lt;p&gt;e. not have a trailing comma&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Write a regex for each part.&lt;/p&gt;

    &lt;p&gt;a. &lt;code class=&quot;highlighter-rouge&quot;&gt;no whitespace&lt;/code&gt;.  You get this for free with regex by not putting
   any whitespace in the regex.&lt;/p&gt;

    &lt;p&gt;b. &lt;code class=&quot;highlighter-rouge&quot;&gt;numbers&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;^([0-9]+)$&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;c. &lt;code class=&quot;highlighter-rouge&quot;&gt;hyphen separated numbers&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;^([0-9]+-[0-9]+)$&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;d. &lt;code class=&quot;highlighter-rouge&quot;&gt;comma separated list&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;^((.*)[,]?)+$&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;e. &lt;code class=&quot;highlighter-rouge&quot;&gt;not have a trailing comma&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;^(.*)[^,]$&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Combine the parts in a way that works.  Here it was vitally important to make correct use of 
parenthesis (“capturing groups” in regex lingo), and the “or” operator &lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;.&lt;/p&gt;

    &lt;p&gt;Using the parts above, a pseudo regex looks like:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;^(((c.)|(b.))d.)d.'e$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;I used “d.” and “d.’” (d and d prime) in my pseudo regex because the
comma separated list needed to be expressed that way.  Also note that
“a.” is met by the absence of any whitespace in the regex, so it is
not present in the regex itself.&lt;/p&gt;

    &lt;p&gt;Carefully making the necessary substitutions, the following
unreadable mess is a regex that matches a bunch of number ranges or
numbers, separated by commas, disallowing a trailing comma.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;^((([0-9]+-[0-9]+)|([0-9]+))[,]?)+[^,]$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This expression successfully validates strings like &lt;code class=&quot;highlighter-rouge&quot;&gt;80,443,7001,7002,8000-8100&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Developing a moderately complex regular expression is easier when you break it down and iteratively develop each part using &lt;a href=&quot;https://regexr.com/&quot;&gt;https://regexr.com/&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/gskinner_team&quot;&gt;gskinner&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;addendum&quot;&gt;Addendum&lt;/h2&gt;

&lt;p&gt;If you need your regexs as part of an azure &lt;code class=&quot;highlighter-rouge&quot;&gt;createUiDefinition.json&lt;/code&gt;,
save time by testing the whole thing using the &lt;a href=&quot;https://portal.azure.com/?feature.customPortal=false#blade/Microsoft_Azure_CreateUIDef/SandboxBlade&quot;&gt;Create UI Definition
Sandbox&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">I recently had to add a feature to the UI for the Azure Marketplace Offers for Oracle WebLogic Server. The UI for marketplace entries is written in JSON. As I stated in my previous post, JSON is an awful choice for a DSL for deploying things to Azure. It is also an awful choice for declaring a wizard-style UI, but at least the particular use case of building the UI for an Azure Marketplace offer allows easy incorporation of regular expressions.</summary></entry><entry><title type="html">Tips for faster iteration times developing ARM templates</title><link href="/blog/2020/01/25/arm-development-faster-iteration-time.html" rel="alternate" type="text/html" title="Tips for faster iteration times developing ARM templates" /><published>2020-01-25T14:40:00-05:00</published><updated>2020-01-25T14:40:00-05:00</updated><id>/blog/2020/01/25/arm-development-faster-iteration-time</id><content type="html" xml:base="/blog/2020/01/25/arm-development-faster-iteration-time.html">&lt;p&gt;If you found your way to this post and your first reaction is 
“&lt;a href=&quot;https://www.urbandictionary.com/define.php?term=Thank%20you%20Captain%20Obvious&quot;&gt;well duh&lt;/a&gt;”,
please leave a comment, because I’d love to know how you came upon your
knowledge which caused you to respond this way.  This was hard-won knowledge
for me, but I suspect I’m missing out on some fundamental bit of
training in the art of efficient ARM template development.&lt;/p&gt;

&lt;p&gt;An ARM template encodes instructions that the &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/&quot;&gt;Azure Resource
Manager&lt;/a&gt;
executes which result in some stuff being deployed to Azure.  As such,
an ARM template is a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;DSL&lt;/a&gt; for the
domain of Azure.  Unfortunately, as DSLs go, it’s awful.  It’s a bigass
JSON file, with all of the pitfalls that entails, such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;It’s a challenge to manage complexity.  Things can spiral out of
control very quickly unless you are very disciplined while authoring.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The instructions in an ARM template execute over time, in a sequence,
imperatively, but JSON is absolutely not an imperative syntax.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It’s very easy to make stupid mistakes at authoring time.  You can
opt-in to using &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/use-vs-code-to-create-template&quot;&gt;some
tooling&lt;/a&gt;
to catch some stupid mistakes at authoring time, but a proper DSL
would do a better job of it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You &lt;a href=&quot;https://github.com/Azure/azure-resource-manager-schemas/issues/851&quot;&gt;can’t even put comments in there&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a DSL for Azure, I think Terraform may be a better fit.  Indeed
&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/terraform/terraform-overview&quot;&gt;Terraform is well supported by
Azure&lt;/a&gt;,
but you can’t use it when authoring for the Azure marketplace.  Accept
JSON and move on.  Here are some tips to ease your acceptance.&lt;/p&gt;

&lt;h2 id=&quot;accept-json&quot;&gt;Accept JSON&lt;/h2&gt;

&lt;p&gt;This blog post shares some tips I’ve developed to get faster development
cycle times when iteratively developing ARM templates.  The cycle looks
like this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Get your &lt;code class=&quot;highlighter-rouge&quot;&gt;mainTemplate.json&lt;/code&gt; somehow.  Write it yourself, export it
from the Azure portal, start with a quickstart, etc.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Deploy it to Azure with the Azure CLI.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Look at what happened.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I want to minimize the time between steps 2 and 3.&lt;/p&gt;

&lt;h2 id=&quot;tips-for-step-1&quot;&gt;Tips for step 1&lt;/h2&gt;

&lt;h3 id=&quot;use-the-export-template-feature-as-a-jump-start&quot;&gt;Use the “export template” feature as a jump start&lt;/h3&gt;

&lt;p&gt;Create the system you want to have in the portal, then use the 
&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/export-template-portal&quot;&gt;export template&lt;/a&gt; 
feature of the portal to download the ARM template JSON file.  You may
want to do this for each big chunk of functionality in your system, then
stitch them together.  Iterate at the command line using the technique
in the next tip.&lt;/p&gt;

&lt;h3 id=&quot;start-with-one-of-the-templates-from-azure-quickstart-templates&quot;&gt;Start with one of the templates from &lt;code class=&quot;highlighter-rouge&quot;&gt;azure-quickstart-templates&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;My extremely helpful colleague &lt;a href=&quot;https://github.com/bmoore-msft&quot;&gt;Brian
Moore&lt;/a&gt; leads a team that curates this
&lt;a href=&quot;https://github.com/Azure/azure-quickstart-templates&quot;&gt;vast resource of
templates&lt;/a&gt;, and
&lt;a href=&quot;https://github.com/Azure/azure-quickstart-templates/tree/master/test/arm-ttk&quot;&gt;tests for
templates&lt;/a&gt;.
The templates are organized by the kind of thing you want to deploy to
Azure.  For example, here is one for &lt;a href=&quot;https://github.com/Azure/azure-quickstart-templates/tree/master/101-application-gateway-waf&quot;&gt;Azure Application
Gateway&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;tips-for-step-2&quot;&gt;Tips for step 2&lt;/h2&gt;

&lt;h3 id=&quot;always-use-the---debug-argument-to-commands-for-which-you-need-to-iterate--like-this&quot;&gt;Always use the &lt;code class=&quot;highlighter-rouge&quot;&gt;--debug&lt;/code&gt; argument to commands for which you need to iterate.  Like this&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;az group deployment create --debug --resource-group ejb012405c --parameters @20200124-dd-1052162-gateway-parameters.json --template-file arm-oraclelinux-wls-cluster/arm-oraclelinux-wls-cluster/src/main/arm/mainTemplate.json &amp;gt; azure.out 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This also causes the output to be redirected to a file, in the
background, capturing stdout and stderr.&lt;/p&gt;

&lt;h3 id=&quot;a-tale-of-two-tails&quot;&gt;A tale of two tails&lt;/h3&gt;

&lt;p&gt;Use some tails to observe the output as the command runs.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Grep through the outfile for some low frequency string.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tail -f azure.out | grep &quot;INFO: Accepted&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In a separate terminal window, just tail the output for everything,
so you can see if the command simply failed.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tail -f azure.out
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;extract-the-properties-template--json-object-from-azureout-so-you-can-interpret-column-offsets-correctly&quot;&gt;Extract the &lt;code class=&quot;highlighter-rouge&quot;&gt;{&quot;properties&quot;: {&quot;template&quot;: &lt;/code&gt; JSON object from &lt;code class=&quot;highlighter-rouge&quot;&gt;azure.out&lt;/code&gt;, so you can interpret column offsets correctly&lt;/h3&gt;

&lt;p&gt;The template you pass to &lt;code class=&quot;highlighter-rouge&quot;&gt;az group deployment create&lt;/code&gt; will have all
formatting removed before Azure sees it, so when Azure gives you error
messages, they are usually expressed like “error on line 1 column
60299”.  You need to translate that to “line N” in your human readable
JSON.  If you save aside the &lt;code class=&quot;highlighter-rouge&quot;&gt;{&quot;properties&quot;: {&quot;template&quot;: &lt;/code&gt; JSON object
from the &lt;code class=&quot;highlighter-rouge&quot;&gt;azure.out&lt;/code&gt; file, you can seek to that column, and then derive
where the error is in your human readable JSON file.&lt;/p&gt;

&lt;h3 id=&quot;even-though-you-ultimately-need-to-produce-maintemplatejson-iterate-with-smaller-disjoint-files&quot;&gt;Even though you ultimately need to produce &lt;code class=&quot;highlighter-rouge&quot;&gt;mainTemplate.json&lt;/code&gt; iterate with smaller, disjoint files&lt;/h3&gt;

&lt;p&gt;If you are building a template that ultimately deploys an entire
datacenter, such as with an &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/marketplace/marketplace-solution-templates&quot;&gt;Azure
Application&lt;/a&gt;
you should consider breaking the template into smaller nested templates,
as described in &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/linked-templates&quot;&gt;Using linked and nested templates when deploying Azure
resources&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Developing ARM templates can be very frustrating, especilaly if you are
used to the rapid compile-edit-debug cycle that many actual programming
languages offer.&lt;/p&gt;</content><author><name></name></author><summary type="html">If you found your way to this post and your first reaction is “well duh”, please leave a comment, because I’d love to know how you came upon your knowledge which caused you to respond this way. This was hard-won knowledge for me, but I suspect I’m missing out on some fundamental bit of training in the art of efficient ARM template development.</summary></entry><entry><title type="html">How to Check if Something in Azure Marketplace is Available in Azure Stack</title><link href="/blog/2020/01/09/azure-stack-vs-azure-marketplace.html" rel="alternate" type="text/html" title="How to Check if Something in Azure Marketplace is Available in Azure Stack" /><published>2020-01-09T15:00:00-05:00</published><updated>2020-01-09T15:00:00-05:00</updated><id>/blog/2020/01/09/azure-stack-vs-azure-marketplace</id><content type="html" xml:base="/blog/2020/01/09/azure-stack-vs-azure-marketplace.html">&lt;p&gt;I was recently asked if the &lt;a href=&quot;https://devblogs.microsoft.com/java/java-ee-on-azure-with-weblogic-and-linux-virtual-machines/&quot;&gt;WebLogic on Azure Virtual
Machines&lt;/a&gt;
Azure Marketplace Offers were available on &lt;a href=&quot;https://azure.microsoft.com/en-us/overview/azure-stack/&quot;&gt;Azure
Stack&lt;/a&gt;.  I was
told the best way to discover this was to look at &lt;a href=&quot;https://docs.microsoft.com/en-us/azure-stack/operator/azure-stack-marketplace-azure-items?view=azs-1910&quot;&gt;Azure Marketplace
items available for Azure
Stack&lt;/a&gt;.
Apparently this page is updated via syndication from Azure Marketplace,
but I don’t know exactly how.&lt;/p&gt;

&lt;p&gt;To answer the question: as of this writing, no, the offers are not
available in Azure Stack.&lt;/p&gt;</content><author><name></name></author><summary type="html">I was recently asked if the WebLogic on Azure Virtual Machines Azure Marketplace Offers were available on Azure Stack. I was told the best way to discover this was to look at Azure Marketplace items available for Azure Stack. Apparently this page is updated via syndication from Azure Marketplace, but I don’t know exactly how.</summary></entry><entry><title type="html">JVM-CON 2019 Anatole Tresch: How Not To Build An App</title><link href="/blog/2019/11/25/jvm-con-anatole.html" rel="alternate" type="text/html" title="JVM-CON 2019 Anatole Tresch: How Not To Build An App" /><published>2019-11-25T04:30:00-05:00</published><updated>2019-11-25T04:30:00-05:00</updated><id>/blog/2019/11/25/jvm-con-anatole</id><content type="html" xml:base="/blog/2019/11/25/jvm-con-anatole.html">&lt;p&gt;Raw Notes from Anatole Tresch’s session&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/20191125-anatole.jpg&quot; alt=&quot;Anatole Tresch&quot; title=&quot;Anatole Tresch&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The talk took several aspects of building enterprise software and for
each aspect Anatole shared some bad things, aka anti-patterns from his
experience.  It was delivered as a “question/answer” framework.  The
questions resonated with developers.&lt;/p&gt;

&lt;h2 id=&quot;management&quot;&gt;Management&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Unrealstic deployment expectations, that ignore and even insult the
engineers working on the deployment.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q: &lt;code class=&quot;highlighter-rouge&quot;&gt;Can't we just build a private cluster in the public cloud&lt;/code&gt;?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q: &lt;code class=&quot;highlighter-rouge&quot;&gt;Where's Benni today&lt;/code&gt;: Not on this project any more.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Not good management of human responsibilities.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-human-factor&quot;&gt;The Human Factor&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Good employees are…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Good managers are…&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;try-not-to-laugh-challenge&quot;&gt;Try not to laugh challenge…&lt;/h3&gt;

&lt;p&gt;Building on the meme from YouTube.&lt;/p&gt;

&lt;p&gt;Some actual code examples.&lt;/p&gt;

&lt;h2 id=&quot;the-system&quot;&gt;The System&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Listed the runtime SLA requirements for a system.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;architecture&quot;&gt;Architecture&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;modern Browser based&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Java&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Performance better than fat client system&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Functions as a blueprint for other applications&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;architecture-decisions&quot;&gt;Architecture decisions&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;The decisions made during the development.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;reality-check&quot;&gt;Reality check&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Some problems encountered&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Spring Boot likes Tomcat standalone, does not behave exactly the same when in JBoss&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Application monitoring doesn’t work that way&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Redundant and incompatible security mechanisms&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;One monolithic build for whole project&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;Can’t separate the generalized artifacts and the original application&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Stateless&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;Caused high complexity in the UI&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Duplication of backend logic on the business-tier.  For example: value objects.&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Choice to use subversion&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;Quality and stability problem&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Huge merge problems&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Ended up building the git workflow anyway.&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Database&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;Database version not under control of project team&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Problems with unrelated runtime changes&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Backend&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;Complex OSGi based installation&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Not scalable 5 parallel users on one instance.  Too expensive.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Took a couple weeks to get the back end updated to a new version&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;img src=&quot;/blog/assets/20191125-anatole-01.jpg&quot; alt=&quot;backend&quot; title=&quot;backend&quot; /&gt;&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Raw Notes from Anatole Tresch’s session</summary></entry><entry><title type="html">JVM-CON 2019 Picks</title><link href="/blog/2019/11/20/jvm-con-picks.html" rel="alternate" type="text/html" title="JVM-CON 2019 Picks" /><published>2019-11-20T05:37:00-05:00</published><updated>2019-11-20T05:37:00-05:00</updated><id>/blog/2019/11/20/jvm-con-picks</id><content type="html" xml:base="/blog/2019/11/20/jvm-con-picks.html">&lt;p&gt;I am very blessed to have the opportunity to give keynotes at the two
premiere Java conferences in Germany this year,
&lt;a href=&quot;https://www.javaland.eu/de/home/news/details/?tx_news_pi1%5Bnews%5D=1898&amp;amp;tx_news_pi1%5Bcontroller%5D=News&amp;amp;tx_news_pi1%5Baction%5D=detail&amp;amp;cHash=50964b6ba343f83b9eb803af1df039b5&quot;&gt;JavaLand&lt;/a&gt;
and &lt;a href=&quot;https://www.jvm-con.de/speakers/#/speaker/6825-ed-burns&quot;&gt;JVM-CON&lt;/a&gt;.
Of course another amazing blessing is that the former was as an Oracle
employee and the latter as Microsoft, but both of them are about Java.&lt;/p&gt;

&lt;p&gt;After reviewing the program, here are my picks.&lt;/p&gt;

&lt;h3 id=&quot;monday-25-november-2019&quot;&gt;Monday 25 November 2019&lt;/h3&gt;

&lt;p&gt;Workshop Day&lt;/p&gt;

&lt;h4 id=&quot;0900---1300--ballsall-b--altanwendungen-wieder-testbar-machen-daniel-kräer&quot;&gt;09:00 - 13:00 | Ballsall B | Altanwendungen wieder testbar machen &lt;a href=&quot;https://www.jvm-con.de/programm/#/talk/altanwendungen-wieder-testbar-machen&quot;&gt;Daniel Kräer&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;As a contributor to old apps, and the testing thereof, I am happy to see
a talk about how to continue to test them.  I wonder if the Cactus tests
I wrote for JSF in 2004 will still work?&lt;/p&gt;

&lt;h4 id=&quot;1400---1800--ballsall-a--jee-microservices-mit-quarkus-eine-einführung-dirk-weil&quot;&gt;14:00 - 18:00 | Ballsall A | JEE-Microservices mit Quarkus eine Einführung &lt;a href=&quot;https://www.jvm-con.de/programm/#/talk/jee-microservices-mit-quarkus-eine-einfuhrung&quot;&gt;Dirk Weil&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;While I would rather see Jakarta EE as the future of Enterprise Java, it
seems Quarkus has a fair amount of buzz, RedHat sponsored or otherwise.
This one is worth a look in.&lt;/p&gt;

&lt;h3 id=&quot;tuesday-26-november-2019&quot;&gt;Tuesday 26 November 2019&lt;/h3&gt;

&lt;h4 id=&quot;1030---1130--tie--ballsall-a-b--anatole-tresch-nicholas-frankel-respectively&quot;&gt;10:30 - 11:30 | Tie | Ballsall A, B | Anatole Tresch, Nicholas Frankel (respectively)&lt;/h4&gt;

&lt;p&gt;Both are great speakers with wealth of real-world application
knowledge.  Really, you can’t go wrong with either in this timeslot.&lt;/p&gt;

&lt;h4 id=&quot;1140---1240--ballsall-a--the-need-for-speed--data-streaming-in-the-cloud-with-kafka-frank-pientka&quot;&gt;11:40 - 12:40 | Ballsall A | The need for speed  Data streaming in the Cloud with Kafka &lt;a href=&quot;https://www.jvm-con.de/programm/#/talk/the-need-for-speed-data-streaming-in-the-cloud-with-kafka&quot;&gt;Frank Pientka&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Kafka is one of those things everyone should know.  Take 60 minutes and
listen to Frank about it.&lt;/p&gt;

&lt;h4 id=&quot;1400---1500--ballsall-b--e-health-und-e-government-aber-sicher-mit-java-werner-keil&quot;&gt;14:00 - 15:00 | Ballsall B | E-Health und E-Government, aber „sicher” mit Java &lt;a href=&quot;https://www.jvm-con.de/programm/#/talk/n-n&quot;&gt;Werner Keil&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Werner has been around this block a few times and it is worthwhile
hearing his insights.&lt;/p&gt;

&lt;h4 id=&quot;1510---1610--ballsall-a--jakarta-ee--past-present-and-future-christian-kaltepoth&quot;&gt;15:10 - 16:10 | Ballsall A | Jakarta EE  Past, Present and Future &lt;a href=&quot;https://www.jvm-con.de/programm/#/talk/jakarta-ee-past-present-and-future&quot;&gt;Christian Kaltepoth&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Christian has stuck with Jakarta EE for a long time, with MVC and
JAX-RS.  I have a stake in seeing Java EE succeed, so I am biased in its
favor.  But I can objectively say that Christian is well qualified to
give this important talk.&lt;/p&gt;

&lt;h4 id=&quot;1645---1745--ballsall-a---reacting-to-the-future-of-application-architecture-grace-jansen&quot;&gt;16:45 - 17:45 | Ballsall A |  Reacting to the future of application architecture &lt;a href=&quot;https://www.jvm-con.de/programm/#/talk/reacting-to-the-future-of-application-architecture&quot;&gt;Grace Jansen&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;This abstract is very high level, but I am interested in hearing a fresh
take on this high level topic.&lt;/p&gt;

&lt;h4 id=&quot;1755---1900--ballsall-b--graalvm-in-practice-at-the-dutch-national-police-running-r-from-scala-in-spring-boot-2-nathan-perdijk&quot;&gt;17:55 - 19:00 | Ballsall B | GraalVM in practice at the Dutch National Police: running R from Scala in Spring Boot 2 &lt;a href=&quot;https://www.jvm-con.de/programm/#/talk/graalvm-in-practice-at-the-dutch-national-police-running-r-from-scala-in-spring-boot-2&quot;&gt;Nathan Perdijk&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;The Dutch government have long been at the forefront of using enterprise
Java.  Yes really.  I remember when they were using lots of JSF.  Heck,
they maybe still are.  It works well, right?  Anyhow, I see the trend
continues with Graal.  Good for them.  The Cops from the Low Countries
are hip to the high tech.&lt;/p&gt;

&lt;h4 id=&quot;1930---2130--ballsall-b--nightsession-ein-tag-in-der-ux-hölle-armin-reuter&quot;&gt;19:30 - 21:30 | Ballsall B | Nightsession: Ein Tag in der UX-Hölle &lt;a href=&quot;https://www.jvm-con.de/programm/#/talk/nightsession-tba&quot;&gt;Armin Reuter&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;As someone who bears responsibility for some UX Hölle of my own, I want
to see this one.&lt;/p&gt;

&lt;h3 id=&quot;wednesday-27-november-2019&quot;&gt;Wednesday 27 November 2019&lt;/h3&gt;

&lt;h4 id=&quot;0900---1700--raum-dom-iii--hands-on-cloud-native-java-with-microprofile-emily-jiang&quot;&gt;09:00 - 17:00 | Raum Dom I+II | Hands-on cloud-native Java with MicroProfile &lt;a href=&quot;https://www.jvm-con.de/programm/#/talk/full-day-workshop-hands-on-cloud-native-java-with-microprofile&quot;&gt;Emily Jiang&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;I am working on a cloud native Java thing at Microsoft.  If will be good
to get Emily’s take.&lt;/p&gt;</content><author><name></name></author><summary type="html">I am very blessed to have the opportunity to give keynotes at the two premiere Java conferences in Germany this year, JavaLand and JVM-CON. Of course another amazing blessing is that the former was as an Oracle employee and the latter as Microsoft, but both of them are about Java.</summary></entry><entry><title type="html">How to use quickly extract text from an image with Microsoft OneNote</title><link href="/blog/2019/11/05/windows-extract-text-from-image.html" rel="alternate" type="text/html" title="How to use quickly extract text from an image with Microsoft OneNote" /><published>2019-11-05T10:15:00-05:00</published><updated>2019-11-05T10:15:00-05:00</updated><id>/blog/2019/11/05/windows-extract-text-from-image</id><content type="html" xml:base="/blog/2019/11/05/windows-extract-text-from-image.html">&lt;p&gt;I frequently use the extract text feature on my Samsung Galaxy Note 9
phone and recently asked myself, “hey, I wonder if I can do this on
Windows also?”  Of course you can.  Here’s how I do it.  Perhaps there’s
an easier way.  If so, please let me know in the comments.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Use snipping tool to grab the text you want to extract.  For example,&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/assets/20191105-text-to-capture-01.png&quot; alt=&quot;text to capture&quot; title=&quot;text to capture&quot; /&gt;&lt;/p&gt;

    &lt;p&gt; 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
 &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Open OneNote and drag the image to a scratch page.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Context-click the image and choose “Copy Text from Picture”&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/assets/20191105-text-to-capture-02.png&quot; alt=&quot;Copy text from picture&quot; title=&quot;Copy text from picture&quot; /&gt;&lt;/p&gt;

    &lt;p&gt; 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
  &lt;br /&gt;
 
 
 
 
 &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The text is in your clipboard:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Oracle WebLogic Server 12.2.1.3 
Cluster 
Oracle WebLogic Server 12.2.1.3 
Dynamic Cluster 
Oracle WebLogic Server 12.2.1.3 
Single Node 
Oracle WebLogic Server 12.2.1.3 
With Admin Server 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">I frequently use the extract text feature on my Samsung Galaxy Note 9 phone and recently asked myself, “hey, I wonder if I can do this on Windows also?” Of course you can. Here’s how I do it. Perhaps there’s an easier way. If so, please let me know in the comments.</summary></entry><entry><title type="html">How to use Microsoft OneDrive when your mac HD is Case Sensitive</title><link href="/blog/2019/10/16/macos-case-sensitive-onedrive-workaround.html" rel="alternate" type="text/html" title="How to use Microsoft OneDrive when your mac HD is Case Sensitive" /><published>2019-10-16T10:15:00-04:00</published><updated>2019-10-16T10:15:00-04:00</updated><id>/blog/2019/10/16/macos-case-sensitive-onedrive-workaround</id><content type="html" xml:base="/blog/2019/10/16/macos-case-sensitive-onedrive-workaround.html">&lt;h2 id=&quot;how-to-use-microsoft-onedrive-when-your-mac-hd-is-case-sensitive&quot;&gt;How to use Microsoft OneDrive when your mac HD is Case Sensitive&lt;/h2&gt;

&lt;p&gt;As a Unix user since 1990 I know that file systems should be case
sensitive.  So whenever I get a new Mac, I make sure to set it up with
a case sensitive filesystem.  After doing this with my Microsoft
supplied Mac, I was a bit surprised to learn that the Microsoft
OneDrive macOS client does not allow you to place your OneDrive folder
on a case sensitive volume, nor on an external volume.&lt;/p&gt;

&lt;p&gt;No worries!&lt;/p&gt;

&lt;p&gt;I was able to create an APFS case insensitive volume internal and put
the OneDrive folder there.&lt;/p&gt;

&lt;h3 id=&quot;part-1-create-the-volume&quot;&gt;Part 1: Create the Volume&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Start Disk Utility&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the left navigation pane, context click (right click) &lt;code class=&quot;highlighter-rouge&quot;&gt;Macintosh
HD - Data&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Choose “Add APFS Volume…”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For Name choose &lt;code class=&quot;highlighter-rouge&quot;&gt;OneDrive&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For Format choose APFS or APFS (Encrypted).  I chose Encrypted for
added security.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/assets/apfs-volume.png&quot; alt=&quot;APFS volume&quot; title=&quot;APFS volume&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click “Size Options…”.  Choose an appropriate size.  I chose 2GB
for Reserve and Quota Size.  Click OK.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click “Add”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click “Done”.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;part-2-connect-onedrive&quot;&gt;Part 2: Connect OneDrive&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;When you start OneDrive on the Mac, it should prompt you to “Set up
One Drive”.  Go through the login procedures, which may include two
factor authentication.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When you get to the “This Is Your OneDrive Folder” page, click
“Change Location”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the file browser that pops up, choose “OneDrive” then click
“Choose this locatin”, as shown here.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/assets/onedrive-choose-location.png&quot; alt=&quot;OneDrive Choose Location&quot; title=&quot;OneDrive Choose Location&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click “Next” then click “Next”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Then click “Open my OneDrive Folder”.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">How to use Microsoft OneDrive when your mac HD is Case Sensitive</summary></entry><entry><title type="html">Using Java EE? Want to explore Azure? Free POC from Reza and I</title><link href="/blog/2019/10/02/javaee-on-azure-free-poc-with-microsoft.html" rel="alternate" type="text/html" title="Using Java EE? Want to explore Azure? Free POC from Reza and I" /><published>2019-10-02T13:36:00-04:00</published><updated>2019-10-02T13:36:00-04:00</updated><id>/blog/2019/10/02/javaee-on-azure-free-poc-with-microsoft</id><content type="html" xml:base="/blog/2019/10/02/javaee-on-azure-free-poc-with-microsoft.html">&lt;p&gt;I’ve been very busy bringing Java EE to Azure since I joined Microsoft this June.  I have devoted a fair chunk of that time to learning Azure fundamentals, &lt;a href=&quot;https://blogs.microsoft.com/blog/2019/08/19/microsoft-acquires-jclarity-to-help-optimize-java-workloads-on-azure/&quot;&gt;getting to know the broader Java team&lt;/a&gt;, building the team, partnering with Oracle, and working with my Program Manager Reza Rahman to help identify and develop customers interested in Java EE on Azure.  This last point is the subject of this blog post.&lt;/p&gt;

&lt;h3 id=&quot;announcing-free-gratis-high-touch-proof-of-concept-for-migrating-your-j2eejava-ee-software-to-azure&quot;&gt;Announcing: Free (Gratis) High-Touch Proof of Concept for Migrating your J2EE/Java EE Software to Azure&lt;/h3&gt;

&lt;p&gt;If you’re running Java EE or J2EE in your enterprise and you want to
explore migrating that software to Azure, we want to hear from you!
More than that, we want to help you.&lt;br /&gt;
&lt;a href=&quot;https://microsoft.qualtrics.com/jfe/form/SV_0OCM4TNkiQC4scJ&quot;&gt;Fill out this survey&lt;/a&gt; and
we’ll get in touch to help build a POC of your software running on Azure.  No strings attached.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://microsoft.qualtrics.com/jfe/form/SV_0OCM4TNkiQC4scJ&quot;&gt;&lt;img src=&quot;/blog/assets/20191002-free-poc.PNG&quot; alt=&quot;Free POC&quot; title=&quot;Free POC&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;update-weblogic-server-on-azure-iaas&quot;&gt;Update WebLogic Server on Azure IaaS&lt;/h3&gt;

&lt;p&gt;Back in July, I documented the state of WLS on Azure &lt;a href=&quot;https://aka.ms/NISTSays&quot;&gt;IaaS&lt;/a&gt; in a &lt;a href=&quot;/blog/2019/07/07/wls-azure-marketplace.html&quot;&gt;blog post&lt;/a&gt;.  I’m happy to say that we have made great progress since then in partnership with Oracle to update the offer, which you can read more about in Jacob Thomas’s post on &lt;a href=&quot;https://blogs.oracle.com/weblogicserver/oracle-weblogic-server-on-microsoft-azure-iaas&quot;&gt;the WebLogic Blog&lt;/a&gt;.  Here is a video walk through of the IaaS offer for WLS.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/m7evI4lObcI&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Please click on the “Contact Me” link if you want to be notified when
the templates become available.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://aka.ms/azurewls&quot;&gt;&lt;img src=&quot;/blog/assets/20191002-wls-contactme.PNG&quot; alt=&quot;contact me&quot; title=&quot;contact me&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 &lt;/p&gt;</content><author><name></name></author><summary type="html">I’ve been very busy bringing Java EE to Azure since I joined Microsoft this June. I have devoted a fair chunk of that time to learning Azure fundamentals, getting to know the broader Java team, building the team, partnering with Oracle, and working with my Program Manager Reza Rahman to help identify and develop customers interested in Java EE on Azure. This last point is the subject of this blog post.</summary></entry><entry><title type="html">General Notes on Security Training</title><link href="/blog/2019/09/27/security-training-public-general-notes.html" rel="alternate" type="text/html" title="General Notes on Security Training" /><published>2019-09-27T10:54:00-04:00</published><updated>2019-09-27T10:54:00-04:00</updated><id>/blog/2019/09/27/security-training-public-general-notes</id><content type="html" xml:base="/blog/2019/09/27/security-training-public-general-notes.html">&lt;p&gt;I took the security training today.  Here are some general notes.  Notes
with a classification higher than Public are on my internal blog.&lt;/p&gt;

&lt;p&gt;Data Classification: Public&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;I mean this in the best way possible, because I do believe that baby
boomers have poisoned the future with their entitlement for all of us,
but wow, this is very millenial.  The course providers worked hard and
successfully to make it engaging to people with little tolerance for
dry content.  And who likes dry content?  For example:&lt;/p&gt;

    &lt;p&gt;“That’s true for rashes and customer data.”&lt;/p&gt;

    &lt;p&gt;“You look like a lawyer in a 90’s movie”.  Hey now.  That’s a bit ageist. :)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It is also patronizing.  “We’re going to have a little quiz, which I
know you’re going to great on, because we’re going to give you all the
answers.”  Is this necessary?&lt;/p&gt;

    &lt;p&gt;“Focus on the kitty.”  “What would the kitty do?”&lt;/p&gt;

    &lt;p&gt;When I think of my iGen kids taking this course, I feel it is talking
down to them.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.vox.com/policy-and-politics/2018/7/16/17575940/russian-election-hack-democrats-trump-putin-diagram&quot;&gt;Phishing helped give us Trump&lt;/a&gt;.
Recognizing it is important, so I am glad this training exists.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I still don’t like it when they refer to slashes as “whacks”.  “whack
whack reportitnow”?  Is this more millenialism?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I like the ctrl-alt-n keyboard shortcut.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This was a great use for my treadmill desk.  &lt;img src=&quot;/blog/assets/20190625-treadmill-desk.jpg&quot; alt=&quot;treadmill desk&quot; title=&quot;treadmill desk&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">I took the security training today. Here are some general notes. Notes with a classification higher than Public are on my internal blog.</summary></entry><entry><title type="html">How to add audio to a video in ‘Photos for Windows 10’</title><link href="/blog/2019/09/26/windows-10-photos-add-audio-to-video.html" rel="alternate" type="text/html" title="How to add audio to a video in 'Photos for Windows 10'" /><published>2019-09-26T17:00:00-04:00</published><updated>2019-09-26T17:00:00-04:00</updated><id>/blog/2019/09/26/windows-10-photos-add-audio-to-video</id><content type="html" xml:base="/blog/2019/09/26/windows-10-photos-add-audio-to-video.html">&lt;h2 id=&quot;how-to-add-audio-to-a-video-in-photos-for-windows-10&quot;&gt;How to add audio to a video in “Photos for Windows 10”.&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Start Photos&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click Video Projects&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click “Custom audio” in the top right of the window, Between
“Background music” and “Sync to OneDrive”.-&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Set the “in” marker in the timeline where you want the audio to start.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You may need to work with the audio before you add it.  I used these
steps.&lt;/p&gt;

    &lt;p&gt;a. The audio file in my case was a narration I recorded using Windows
   10 Voice Recorder.  This gives you files in &lt;code class=&quot;highlighter-rouge&quot;&gt;.m4a&lt;/code&gt; format.&lt;/p&gt;

    &lt;p&gt;b. I wanted to trim the file so I had to convert it to WAV so I could
   edit it with Audacity.&lt;/p&gt;

    &lt;p&gt;c. I installed ffmpeg for windows from
   &lt;a href=&quot;https://lame.buanzo.org/#lamewindl&quot;&gt;https://lame.buanzo.org/#lamewindl&lt;/a&gt;.
   This gives you &lt;code class=&quot;highlighter-rouge&quot;&gt;ffmpeg.exe&lt;/code&gt; which you can use from the command
   prompt.&lt;/p&gt;

    &lt;p&gt;d. CD to the directory containing the &lt;code class=&quot;highlighter-rouge&quot;&gt;.m4a&lt;/code&gt; file.&lt;/p&gt;

    &lt;p&gt;e. Convert it like this: &lt;code class=&quot;highlighter-rouge&quot;&gt;C:\PROGRA~2\FFMPEG~1\ffmpeg.exe -i input.m4a output.wav&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click “Add audio file”, select the &lt;code class=&quot;highlighter-rouge&quot;&gt;output.wav&lt;/code&gt; file in the file
browser, click ok, click Done.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click “Finish video” and select a place to save the file.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">How to add audio to a video in “Photos for Windows 10”.</summary></entry></feed>