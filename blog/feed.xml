<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.0">Jekyll</generator><link href="/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="/blog/" rel="alternate" type="text/html" /><updated>2017-05-01T13:30:44-04:00</updated><id>/blog/</id><title type="html">Ed Burns Blog</title><subtitle>Ed Burns blogs here, mostly about Java and software, but sometimes about other random things.
</subtitle><entry><title type="html">Goto Chicago 2017 Jennifer Peepas</title><link href="/blog/2017/05/01/goto-jennifer-peepas.html" rel="alternate" type="text/html" title="Goto Chicago 2017 Jennifer Peepas" /><published>2017-05-01T13:00:00-04:00</published><updated>2017-05-01T13:00:00-04:00</updated><id>/blog/2017/05/01/goto-jennifer-peepas</id><content type="html" xml:base="/blog/2017/05/01/goto-jennifer-peepas.html">&lt;p&gt;Teaches people to collaborate to make art.&lt;/p&gt;

&lt;p&gt;We grew up labeled as smart which is good, but sometimes people
forget to teach us things because they assume you already know it or can
  look it up yourself.&lt;/p&gt;

&lt;p&gt;CaptainAwkward.com is about learning or re-learning stuff we think we
&quot;should&quot; know, no shame about it.&lt;/p&gt;

&lt;h2&gt;Anecdata&lt;/h2&gt;

&lt;p&gt;People tell me their work feedback woes.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Managers&lt;/b&gt;: having to conform to HR feedback processes that are
  overly brittle.  Or, the converse, there is no process.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Creators/Developers&lt;/b&gt;: &quot;Looks good to me&quot;.  This means they
  haven't had time to look at the work.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Peer reviewers&lt;/b&gt;: some people can't take any criticism.  Some
  people are too nitpicky.  &lt;/p&gt;

&lt;h2&gt;Dealing with Feedback&lt;/h2&gt;

&lt;p&gt;How she does feedback with her students.  Listed the steps.&lt;/p&gt;

&lt;p&gt;Ask the creators why do feedback?  Make the work better.&lt;/p&gt;

&lt;p&gt;Actually, the secret is an emotional component.  Actually, there is
significant benefit to the reviewers in how they create their own
  work.&lt;/p&gt;

&lt;p&gt;You see your own work differently when you see how others respond to
  it.&lt;/p&gt;

&lt;h2&gt;How to do Feedback Better&lt;/h2&gt;

&lt;p&gt;Liz Lerman's Critical Response Process.&lt;/p&gt;

&lt;p&gt;1. View the work.  Work speaks for itself.&lt;/p&gt;

&lt;p&gt;2. Audience describe what you observe without assigning a value
  judgement.&lt;/p&gt;

&lt;p&gt;3. Audience talks about what's working&lt;/p&gt;

&lt;p&gt;4. Creator: ask advance prepared questions &lt;/p&gt;

&lt;p&gt;5. Audience: identify things that aren't working, with the author's
  consent.&lt;/p&gt;

&lt;p&gt;This process forces people to slow down the process and look at the
  big picture before diving into the details.&lt;/p&gt;

&lt;h2&gt;Good Practices&lt;/h2&gt;

&lt;p&gt;Critique sessions happen at regular intervals, with advance notice,
  and a firm start and end time.  It's not a pop quiz.&lt;/p&gt;

&lt;p&gt;Structure and ground rules are agreed-upon and transparent.&lt;/p&gt;

&lt;p&gt;Can be in-person meeting or online discussion.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;No multitasking during the review.  No hiding in your
    phone.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Have one person be responsible for facilitating the discussion.&lt;/p&gt;

&lt;p&gt;Creators my introduce the work but not apologize for it.  Nobody
  wants your shame spiral.&lt;/p&gt;

&lt;p&gt;After work is presented, facilitator can give participants a few
  minutes to write down/type up their thoughts before anyone speaks.&lt;/p&gt;

&lt;p&gt;If you're the creator, use those minutes when everyone is writing to
  generate and organize questions you have for the audience.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;The goal of the session is to generate the todo list to carry the
    project forward.&lt;/b&gt;&lt;/p&gt;

&lt;h2&gt;If you are giving feedback...&lt;/h2&gt;

&lt;p&gt;If you could only five three notes, what would they be?&lt;/p&gt;

&lt;p&gt;Focus on the work, and not the person or their individual performance
  or abilities.&lt;/p&gt;

&lt;p&gt;Avoid, &quot;That won't work because...&quot;.  Instead, as them why they are
doing it that way.  Try to stay focused on the future, what needs to
  happen next.&lt;/p&gt;

&lt;p&gt;If you raise a problem, try to also propose a solution.&lt;/p&gt;

&lt;p&gt;Facilitators make it safe for people to say, &quot;I don't know&quot;.&lt;/p&gt;

&lt;p&gt;Is it true, is it necessary, is it kind.&lt;/p&gt;

&lt;h2&gt;What if it really stinks&lt;/h2&gt;

&lt;p&gt;Be brief, direct, and specific.&lt;/p&gt;

&lt;p&gt;Shame and blame are performance killers.&lt;/p&gt;

&lt;h2&gt;If you're receiving feedback&lt;/h2&gt;

&lt;p&gt;Write it all down.  Write it down even if you disagree.&lt;/p&gt;

&lt;p&gt;If you feel yourself getting flustered or defensive, cut yourself
  slack, but also, stop talking.&lt;/p&gt;

&lt;h2&gt;If you're the moderator&lt;/h2&gt;

&lt;p&gt;Keep the discussion on time.&lt;/p&gt;

&lt;p&gt;Amplifying the good quesions is a better strategy, than tamping down
  on the negative one.&lt;/p&gt;

&lt;p&gt;Aftercare for Creators&lt;/p&gt;

&lt;p&gt;After the session, take a break.  Then refine the comments.
  Prioritize the feedback, do the easy stuff first.&lt;/p&gt;

&lt;p&gt;If you need to discard the feedback item, you can make a better
  argument for doing so if you show you considered it.&lt;/p&gt;

&lt;p&gt;Good feeedback doesn't just happen.  It needs a structure.&lt;/p&gt;

&lt;p&gt;The best possible outcome from a response session is for the maker to
  want to back to work.  Liz Lerman&lt;/p&gt;

&lt;p&gt;Thorough feedback is a gift of time and attention.  It's an
investment in the projects you make and in your development as a
creator.&lt;/p&gt;</content><author><name></name></author><summary type="html">Teaches people to collaborate to make art.</summary></entry><entry><title type="html">Goto Chicago 2017 Martin Fowler</title><link href="/blog/2017/05/01/goto-martin-fowler.html" rel="alternate" type="text/html" title="Goto Chicago 2017 Martin Fowler" /><published>2017-05-01T10:00:00-04:00</published><updated>2017-05-01T10:00:00-04:00</updated><id>/blog/2017/05/01/goto-martin-fowler</id><content type="html" xml:base="/blog/2017/05/01/goto-martin-fowler.html">&lt;p&gt;Martin Fowler.&lt;/p&gt;

&lt;p&gt;Event Driven Architectures.  What do people mean by it?  Common
  theme: something called an event.  But really it's more open ended.&lt;/p&gt;

&lt;p&gt;Thoughtworks internal conference in Denver.  &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=aweV9FLTZkU&quot;&gt;Video&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;I. Event Notification&lt;/h2&gt;

&lt;h3&gt;1. Event Notification: Dealing with subsystem coupling&lt;/h3&gt;

&lt;p&gt;Turns things inside out and allows systems to be decoupled.&lt;/p&gt;

&lt;p&gt;This pattern applies in at the macro (subsystems) and micro level
  (text fields).&lt;/p&gt;

&lt;h3&gt;2. Objectification of time: The event itself being a first class
thingamajig.&lt;/h3&gt;

&lt;p&gt;Encapsulates the time aspect nicely.  Objectifies the thing.&lt;/p&gt;

&lt;p&gt;Events and commands.  What's the difference?  The naming things.&lt;/p&gt;

&lt;p&gt;Events: something happened.  Commands: do something.&lt;/p&gt;

&lt;p&gt;If you don't separate these things conceptually, it leads to
  reasoning problems.&lt;/p&gt;

&lt;h3&gt;3. Scale: Allows adding new throughput boosters without changing the architecture&lt;/h3&gt;

&lt;p&gt;A downside: no statement of overall behavior.  Because it is not
  imperative, the only way to understand is to observe the running it.&lt;/p&gt;

&lt;h2&gt;II. Event-carried State Transfer&lt;/h2&gt;

&lt;p&gt;It's not always possible to keep everything inside the event.  Or,
deciding how much information to put in the event.  Can I put so much in
there so the systems don't need to communicate directly.  Events: cause
followon queries&lt;/p&gt;

&lt;p&gt;a. Each subsystem keeps its data local.  b. each event has enough to
  allow the local data to be updated and kept in sync.&lt;/p&gt;

&lt;p&gt;But now you have the consistency problem.&lt;/p&gt;

&lt;h2&gt;III. Event Sourcing&lt;/h2&gt;

&lt;p&gt;Bring in the logs.  Test: If at any time, you can blow away the
  current state, and replay the log, and you get back the same state.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Did a poll, &quot;who uses this&quot; was alarmed at the result.  Resorted
    to observing that an SCM is an example of this.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the banking world, an accounting ledger is the perfect example of
  this.&lt;/p&gt;

&lt;p&gt;It's a combination of every single change, plus snapshots.&lt;/p&gt;

&lt;p&gt;Some benefits: debugging is nicer.  You can make copies.  Can keep
your system itself entirely in memory.  Gave the famous lmax
  example.&lt;/p&gt;

&lt;h2&gt;Some downsides&lt;/h2&gt;

&lt;p&gt;Unfamiliar, External Systems, &lt;code&gt;Event schema&lt;/code&gt; (JSON to the
  rescue?), Identifiers&lt;/p&gt;

&lt;p&gt;Slip ups: trouble with event sourcing.  Felt he had to do twice as
much work.  People conflate asynchrony with event sourcing.  It doesn't
have to be.  It does add a lot of complexity.  (How do you do event
sourcing without adding asynchrony?  Locking?)  Trouble with versioning
events.  Easy refactoring: change the name of a function.  How do you
get all the callsites?  Advice: Don't have any business logic between
  your event and its storage.&lt;/p&gt;

&lt;h2&gt;IV. CQRS&lt;/h2&gt;

&lt;p&gt;Separate the components that read and write from your store.  You
only ever write using the command thing.  You only ever read from the
  query system.&lt;/p&gt;

&lt;p&gt;You have to be wary of this pattern.  People seem to get in trouble
with this pattern.  &quot;My sense is that it really has to be deep down in
the toolbag to pull this one out.&quot;  He's been talking about having
reporting databases for years; that's CQRS too.  Pure CQRS is the &quot;only
  ever write using the command thing.&quot;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://martinfowler.com/articles/201701-event-driven.html&quot;&gt;original article.&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Martin Fowler.</summary></entry><entry><title type="html">GOTO Chicago 2017 Picks</title><link href="/blog/2017/04/19/goto-chicago-picks.html" rel="alternate" type="text/html" title="GOTO Chicago 2017 Picks" /><published>2017-04-19T19:00:00-04:00</published><updated>2017-04-19T19:00:00-04:00</updated><id>/blog/2017/04/19/goto-chicago-picks</id><content type="html" xml:base="/blog/2017/04/19/goto-chicago-picks.html">&lt;p&gt;I am very blessed with the opportunity to be speaking at this
years &lt;a href=&quot;https://gotochgo.com/2017/schedule&quot;&gt;GOTO Chicago 2017&lt;/a&gt;
conference.  I will be dusting off the old Rockstar Programmers talk and
refreshing it up with some new interviews.  Ahead of the conference I want
  to share my conference picks.&lt;/p&gt;

&lt;h2&gt;Monday &amp;mdash; Conference Day One&lt;/h2&gt;

	&lt;ul&gt;

	  &lt;li&gt;&lt;p&gt;09:15  Zurich Ballroom &lt;a href=&quot;https://gotochgo.com/2017/sessions/47&quot;&gt;Software Design in the 21st Century&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;Martin Fowler is one of the enduring luminaries in our
            very quick changing field.  To stay as consistently
            influential as he has, for as long as he has is a great
            indicator that he is the real deal.  His abstract is
            sufficiently high level that he could pretty much go
            anywhere with it, so I'm curious to see the specific under
            the general.&lt;/p&gt;

          &lt;/li&gt;

	  &lt;li&gt;&lt;p&gt;10:35 Zurich
	  EFG &lt;a href=&quot;https://gotochgo.com/2017/sessions/62&quot;&gt;Patterns
	  of Effective Teams&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;My talk is on the people track and I've long been a fan
            of &lt;a href=&quot;https://twitter.com/tastapod&quot;&gt;Dan North&lt;/a&gt;.  In
            fact, I quoted heavily, with attribution, from
            his &lt;a href=&quot;https://www.youtube.com/watch?v=Bw1dgUS27uE&quot;&gt;The
            Browser is Dead&lt;/a&gt; talk in some of my own talks.  Dan will
            be covering so character attributes of effective teams.
            That's right up my alley.&lt;/p&gt;

          &lt;/li&gt;

	  &lt;li&gt;&lt;p&gt;11:40 Zurich AFG &lt;a href=&quot;https://gotochgo.com/2017/sessions/63&quot;&gt;Give and Take: Handling Constructive Criticism and Creative Conflict Like A Pro&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;I'm so glad to see this topic being addressed.  While the
            notion of &quot;failing fast&quot; is now seen as a good thing, I find
            at the individual level people still have a hard time with
            the particular manifestation of failure known as
            constructive
            criticism.  &lt;a href=&quot;https://captainawkward.com/&quot;&gt;Jennifer
            Peepas&lt;/a&gt; has a very diverse background full of things not
            commonly seen at IT conferences.  This should be great.&lt;/p&gt;

          &lt;/li&gt;

	  &lt;li&gt;&lt;p&gt;13:30 Zurich ABCD &lt;a href=&quot;https://gotochgo.com/2017/sessions/44&quot;&gt;Troubleshooting Tiered Tragedy: A Peek Into Failure&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;Say what you will about monoliths, at least your logs are
            all in one place and there is no need for complex
            aggregation systems.  Massively distributed systems are now
            much more widespread, so it's a good idea to understand how
            to not give up the failure fidelity at the same
            time.  &lt;a href=&quot;https://twitter.com/DarkAndNerdy&quot;&gt;Jeff
            Smith&lt;/a&gt; will literally break it down for us.&lt;/p&gt;

          &lt;/li&gt;
          
	  &lt;li&gt;&lt;p&gt;My session is in this slot, 14:35 in Zurich EFG.  I am
	  reprising my Secrets of the Rock Star Programmers talk based
	  on the book for which this website was built.  If I wasn't
	  giving the talk, I'd probably be
	  at &lt;a href=&quot;https://gotochgo.com/2017/sessions/51&quot;&gt;Brian Ray's
	  Cognitive from the Engineering perspective&lt;/a&gt;.  Deloitte is a
	  global consulting powerhouse, so I want to see what they are
	      doing with all this machine learning stuff.&lt;/p&gt; &lt;/li&gt;

	  &lt;li&gt;&lt;p&gt;16:45 Vevey 12 &lt;a href=&quot;https://gotochgo.com/2017/sessions/54&quot;&gt;Javaloution! (How I learned to stop worrying and play Jenga! with the entire software industry. What could possibly go wrong?”)&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;Naturally I need to check out my
            colleague &lt;a href=&quot;https://twitter.com/gsaab&quot;&gt;Georges
            Saab&lt;/a&gt;'s session about the experience of bringing Jigsaw
            to the world.  I've seen from the inside how hard it is to
            evolve a developer platform in my work
            on &lt;a href=&quot;https://twitter.com/jsf_spec&quot;&gt;JSF&lt;/a&gt;.  Doing it
            with all of Java is much more complicated.&lt;/p&gt;

          &lt;/li&gt;

	&lt;/ul&gt;

        &lt;h2&gt;Tuesday &amp;mdash; Conference Day Two&lt;/h2&gt;

	&lt;ul&gt;

	  &lt;li&gt;&lt;p&gt;09:15 Zurich Ballroom &lt;a href=&quot;https://gotochgo.com/2017/sessions/86&quot;&gt;Debugging under fire: Keeping your head when systems have lost their mind&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;I never had the pleasure of working with Bryan Cantrill
            during our overlapping time at Sun, but I gather he can be a
            polarizing figure.  He's certainly had a wild ride of it
            with node.js and I'm sure he has some gripping stories to
            tell, which I look forward to hearing.&lt;/p&gt;

          &lt;/li&gt;


	  &lt;li&gt;&lt;p&gt;10:35 St. Galen 3 &lt;a href=&quot;https://gotochgo.com/2017/sessions/164&quot;&gt;Old Geeks Yell At Cloud&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;I still use XEmacs to read my email, so I get the whole
            curmudgeon thing.  I've been
            following &lt;a href=&quot;https://twitter.com/bridgetkromhout&quot;&gt;Bridget
            Kromhout&lt;/a&gt; for a while so I look forward to seeing her
            sessions.&lt;/p&gt;

          &lt;/li&gt;

	  &lt;li&gt;&lt;p&gt;11:40 Vevey 34 &lt;a href=&quot;https://gotochgo.com/2017/sessions/72&quot;&gt;We can’t have a progressive web without embracing it&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;&lt;a href=&quot;https://twitter.com/codepo8&quot;&gt;Chris Heilmann&lt;/a&gt;
            has a few things in common with my old
            pal &lt;a href=&quot;https://twitter.com/cwilso&quot;&gt;Chris Wilson&lt;/a&gt;:
            they have similar twitter hairstyles, they are both named
            Chris, and the both had something to do with browsers at
            Microsoft.  Let's see what he has to say about the state of
            the web.&lt;/p&gt;

          &lt;/li&gt;

	  &lt;li&gt;&lt;p&gt;13:30 Zurich EFG &lt;a href=&quot;https://gotochgo.com/2017/sessions/76&quot;&gt;Developers _are_ Researchers - Improve the work you love with Research Driven Development&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;I love the premise of this talk.  It's so meta.  Let's
            apply research techniques to how we do our jobs.&lt;/p&gt;
          &lt;/li&gt;

	  &lt;li&gt;&lt;p&gt;14:35 Zurich ABCD &lt;a href=&quot;https://gotochgo.com/2017/sessions/79&quot;&gt;Effective Microservices in a Data-Centric World&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;&lt;a href=&quot;https://twitter.com/randyshoup&quot;&gt;Randy Shoup&lt;/a&gt;
            is doing Microservices at StitchFix.  Knowing how things are
            going at GILT, I think this should be a fun talk.  Plus, I
            want to see how well dressed he is.&lt;/p&gt;

          &lt;/li&gt;

	  &lt;li&gt;&lt;p&gt;15:40 Vevey 34 &lt;a href=&quot;https://gotochgo.com/2017/sessions/64&quot;&gt;Making the web frameworks titans feel tiny&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;Taking away deficiencies in web frameworks is something
            in which I have a keen interest.  Let's see
            what &lt;a href=&quot;https://twitter.com/Martndemus&quot;&gt;Marten
            Schilstra&lt;/a&gt; has to say.&lt;/p&gt;
            
          &lt;/li&gt;

          &lt;li&gt;&lt;p&gt;16:45 Zurich ABCD &lt;a href=&quot;https://gotochgo.com/2017/sessions/85&quot;&gt;One journey, many paths: A pragmatic guide for migrating to microservices&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;I've been thinking a lot about monoliths and
            microservices lately.  It's always good to have a fresh
            perspective on this hot topic of our
            times.  &lt;a href=&quot;https://twitter.com/zhamakd&quot;&gt;Zhamak
            Dehghani&lt;/a&gt; is in a great position to offer it.&lt;/p&gt;

          &lt;/li&gt;

	  &lt;li&gt;&lt;p&gt;18:00 Zurich Ballroom &lt;a href=&quot;https://gotochgo.com/2017/sessions/32&quot;&gt;Closing Keynote: Meeting resistance and moving forward&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;I had the chance to meet Linda Rising at Jazoon 2007 or
            so and she is a fascinating person and engaging speaker.  A
            great way to close this conference.&lt;/p&gt;

          &lt;/li&gt;
          
	&lt;/ul&gt;</content><author><name></name></author><summary type="html">I am very blessed with the opportunity to be speaking at this years GOTO Chicago 2017 conference. I will be dusting off the old Rockstar Programmers talk and refreshing it up with some new interviews. Ahead of the conference I want to share my conference picks.</summary></entry><entry><title type="html">Please test Mojarra 2.3.1-SNAPSHOT with Servlet 4.0 Server Push</title><link href="/blog/2017/04/18/please-test-mojarra-2_3_1-with-server-push.html" rel="alternate" type="text/html" title="Please test Mojarra 2.3.1-SNAPSHOT with Servlet 4.0 Server Push" /><published>2017-04-18T16:00:00-04:00</published><updated>2017-04-18T16:00:00-04:00</updated><id>/blog/2017/04/18/please-test-mojarra-2_3_1-with-server-push</id><content type="html" xml:base="/blog/2017/04/18/please-test-mojarra-2_3_1-with-server-push.html">&lt;p&gt;&lt;code&gt;Updated: 2017-04-19 11:46 -0500: Called out the need to use
exactly JDK 1.8.0_121 and why.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I still recommend JSF 2.3 EG member and major Mojarra
committer &lt;a href=&quot;http://arjan-tijms.omnifaces.org/p/jsf-23.html&quot;&gt;Arjan
Tijms'&lt;/a&gt; blog post for a feature overview of JSF 2.3, but this post
gives a brief look into a feature I consider a key validation of the two
Java EE 8 specs to which I contribute: Servlet 4.0 and JSF 2.3.  The
feature is HTTP/2 Server Push, and it's the biggest new feature in
Servlet 4.0 in terms of API impact.  This blog post shows how Mojarra
2.3.1-SNAPSHOT uses Servlet 4.0 Server Push and solicits testing of this
feature for eventual inclusion in Mojarra 2.3.1, and hopefully into
  GlassFish 5.0.&lt;/p&gt;

&lt;h2&gt;The Origin of the Feature&lt;/h2&gt;

&lt;p&gt;Way back at
the &lt;a href=&quot;https://www.youtube.com/watch?v=fZR-HRP7HtI&quot;&gt;beginning of
Servlet 4.0&lt;/a&gt; in July 2014, when HTTP/2 itself was not even yet final,
the idea of using Server Push for JSF was already apparent.  After all,
the whole point of the feature, from the HTTP/2 protocol level, is to
increase the perceived performance of web pages by allowing the server
to start sending the assets of the web page before the browser has even
started parsing the web page to discover what assets it needs.  (I like
to call this
the &lt;a href=&quot;http://www.usccb.org/bible/matthew/6#48006008&quot;&gt;Matthew
6:8&lt;/a&gt; feature of HTTP/2.)  Web Frameworks such as JSF are in a great
position to automatically leverage this feature because the act of
authoring the application causes the page author to explicitly indicate
at runtime which assets go with which pages.  In other words, JSF users
get this feature for free without having to change their app in the
  least.&lt;/p&gt;

&lt;h2&gt;The Specification of the Feature&lt;/h2&gt;

&lt;p&gt;The Servlet Expert Group, in particular Greg Wilkins, has crafted an
easy-to-use way to take advantage of Server Push: simply ask the
current &lt;code&gt;HttpServletRequest&lt;/code&gt; for
a &lt;code&gt;newPushBuilder&lt;/code&gt;, manipulate
the &lt;a href=&quot;https://maven.java.net/service/local/repositories/releases/archive/javax/servlet/javax.servlet-api/4.0.0-b05/javax.servlet-api-4.0.0-b05-javadoc.jar/!/javax/servlet/http/PushBuilder.html&quot;&gt;PushBuilder&lt;/a&gt;
API as desired, and then call &lt;code&gt;push()&lt;/code&gt; to initiate sending
  the bytes of the resource to the client.&lt;/p&gt;

&lt;p&gt;From the JSF side, the use of the feature is not captured in the
JavaDoc.  Rather, it is in the spec PDF section 2.2.6.  This section is
a high level overview of what happens in the Render Response phase of
the request processing lifecycle.  We intentionally left the push
requirements very high level to allow maximum latitude in
implementation.  We also had to specify it well in advance of Servlet
4.0 going final due to scheduling constraints with finishing JSF
  2.3.&lt;/p&gt;

&lt;h2&gt;The Implementation of the Feature&lt;/h2&gt;

&lt;p&gt;I am very thankful to my co-spec
lead &lt;a href=&quot;https://www.linkedin.com/in/shingwaichan/&quot;&gt;Dr. Shing Wai
Chan&lt;/a&gt; for implementing the GlassFish side of this feature,
and &lt;a href=&quot;http://www.notshabby.net/&quot;&gt;Ryan Lubke&lt;/a&gt; for implementing
the underlying Grizzly support for HTTP/2, including push.  Ryan had to
do several last minute tweaks to get the implementation this far, and
  it's not 100% done yet.  That's why I'm hoping you'll try it.&lt;/p&gt;

&lt;p&gt;On the JSF side, I modified the implementation
of &lt;code&gt;ExternalContext.encodeResourceURL()&lt;/code&gt; to push the resource
using the &lt;code&gt;PushBuilder&lt;/code&gt; API.  Because our tests run Mojarra
against both GlassFish 4.1.1 and GlassFish 5.0 trunk, I had to code it
such that the feature only kicks in if Servlet 4.0 is actually
  available.&lt;/p&gt;

&lt;h2&gt;Testing the Feature&lt;/h2&gt;

&lt;p&gt;To test the feature, you must first make sure you are using exactly
JDK 1.8.0_121, no more no less.  The reason for this precise requirement
is explained in this
email &lt;a href=&quot;https://java.net/projects/servlet-spec/lists/jsr369-experts/archive/2017-04/message/43&quot;&gt;to
the Servlet EG&lt;/a&gt;.  Then, download the GlassFish nightly from
&amp;lt;&lt;a href=&quot;http://download.oracle.com/glassfish/5.0/nightly/&quot;&gt;http://download.oracle.com/glassfish/5.0/nightly/&lt;/a&gt;&amp;gt;
(from 2017-04-17 or later) and replace the &lt;code&gt;javax.faces.jar&lt;/code&gt;
in the &lt;code&gt;modules&lt;/code&gt; directory
with &lt;a href=&quot;https://maven.java.net/service/local/repositories/snapshots/content/org/glassfish/javax.faces/2.3.1-SNAPSHOT/javax.faces-2.3.1-20170417.161359-6.jar&quot;&gt;&lt;code&gt;org.glassfish:javax.faces:2.3.1-SNAPSHOT&lt;/code&gt;&lt;/a&gt;
(or later).&lt;/p&gt;

&lt;p&gt;Once your GlassFish has been patched to have the latest Mojarra,
deploy an app that has lots of resources.  I suggest
the &lt;a href=&quot;http://repository.primefaces.org/org/primefaces/showcase/6.0/showcase-6.0.war&quot;&gt;PrimeFaces
6.0 showcase&lt;/a&gt;.  Once deployed the easiest way to see HTTP/2 in action
is to use Chrome with Developer Tools to hit
&amp;lt;https://localhost:8181/showcase-6.0/index.xhtml&amp;gt; Note that you
have to jump through some extra hoops because Chrome finds it easiest to
  only support HTTP/2 over TLS.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/20170418-chrome-https-localhost.png&quot; alt=&quot;Image of Chrome Your connection is not private warning&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/20170418-chrome-https-localhost-02.png&quot; alt=&quot;Image of Chrome Your connection is not private warning&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once the PrimeFaces is being served over HTTPS to Chrome from your
patched GlassFish 5.0, you can visit the &quot;Compare&quot; widget within the
&quot;Multimedia&quot; section.  In another Chrome tab, open up
&amp;lt;chrome://net-internals/#events&amp;q=type:HTTP2_SESSION&amp;gt;.  Find the
lowest &lt;code&gt;HTTP2_SESSION&lt;/code&gt; item to localhost:8181 in the list and
check the checkbox.  Do a find in page for &lt;code&gt;lara-ps3&lt;/code&gt;.  You
  can see that this image was pushed with server push, as shown next.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/blog/assets/20170418-net-internals-push.png&quot;&gt;&lt;img width=&quot;1024&quot; height=&quot;200&quot; src=&quot;/blog/assets/20170418-net-internals-push.png&quot; alt=&quot;Image of Chrome Your connection is not private warning&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use find in page to look for other hits
on &lt;code&gt;HTTP2_SESSION_RECV_PUSH_PROMISE&lt;/code&gt; to see resources being
  pushed.&lt;/p&gt;

&lt;p&gt;Clicking over to View-&amp;gt;Developer-&amp;gt;Developer Tools, click the
&quot;Disable cache&quot; checkbox and reload the page.  Look at the Waterfall
column ta see the impact that push has on page load times.  You can see
that some of the resources are being delivered before the page even
finishes loading.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/blog/assets/20170418-devtools-push.png&quot;&gt;&lt;img width=&quot;1024&quot; height=&quot;273&quot; src=&quot;/blog/assets/20170418-devtools-push.png&quot; alt=&quot;Image of Chrome Your connection is not private warning&quot; /&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;It is beyond the scope of this article to explore this vital aspect
of push, but I hope someone else will do so.  After all, what's the
point of the
feature &lt;a href=&quot;https://www.fastcompany.com/1825005/how-one-second-could-cost-amazon-16-billion-sales&quot;&gt;if
it does not make page load times seem faster&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

This feature is still in SNAPSHOT form.  I need testing to verify it
works for some more cases.  If it causes any trouble at all, we may have
to put it behind a &lt;code&gt;com.sun.faces context-param&lt;/code&gt;.  Please
leave comments here with your findings.</content><author><name></name></author><summary type="html">Updated: 2017-04-19 11:46 -0500: Called out the need to use exactly JDK 1.8.0_121 and why.</summary></entry><entry><title type="html">Sun Ray GNOME Keyboard Stops Accepting Input</title><link href="/blog/2017/04/18/sun-ray-gnome-keyboard-stops-accepting-input.html" rel="alternate" type="text/html" title="Sun Ray GNOME Keyboard Stops Accepting Input" /><published>2017-04-18T11:00:00-04:00</published><updated>2017-04-18T11:00:00-04:00</updated><id>/blog/2017/04/18/sun-ray-gnome-keyboard-stops-accepting-input</id><content type="html" xml:base="/blog/2017/04/18/sun-ray-gnome-keyboard-stops-accepting-input.html">&lt;p&gt;I was happily using my Sun Ray session one day and then it stopped
accepting keyboard input.  Nothing I tried could make anything other
than the BEL sound happen.  After posting to an internal list at Oracle
carried over from the Sun days, the ever helpful and
venerable &lt;a href=&quot;https://twitter.com/alanc&quot;&gt;Alan Coopersmith&lt;/a&gt; clued
me in.  I must have held the shift key down for five seconds, turning on
the &quot;only accept long keypresses&quot; feature.  This is great for people
with Parkinson's but thankfully I'm not there yet.  But it's nice to
  know GNOME has my back.&lt;/p&gt;

&lt;p&gt;If you run into this problem you can disable it by going to
System::Preferences::Keyboard, in the Accessibility tab, and ensuring
the &quot;Slow Keys&quot; checkbox is not checked.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/20170418-gnome-keyboard-preferences-accessibility.png&quot; alt=&quot;Image of GNOME Keyboard Preferences Accessibility Tab with the slow keys checkbox not checked&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You may also want to uncheck &quot;Accessibility features can be toggled
with keyboard shortcuts.&lt;/p&gt;</content><author><name></name></author><summary type="html">I was happily using my Sun Ray session one day and then it stopped accepting keyboard input. Nothing I tried could make anything other than the BEL sound happen. After posting to an internal list at Oracle carried over from the Sun days, the ever helpful and venerable Alan Coopersmith clued me in. I must have held the shift key down for five seconds, turning on the &quot;only accept long keypresses&quot; feature. This is great for people with Parkinson's but thankfully I'm not there yet. But it's nice to know GNOME has my back.</summary></entry><entry><title type="html">Chicago JUG / GOTO Meetup</title><link href="/blog/2017/04/04/cjug-goto-meetup.html" rel="alternate" type="text/html" title="Chicago JUG / GOTO Meetup" /><published>2017-04-04T09:00:00-04:00</published><updated>2017-04-04T09:00:00-04:00</updated><id>/blog/2017/04/04/cjug-goto-meetup</id><content type="html" xml:base="/blog/2017/04/04/cjug-goto-meetup.html">&lt;p&gt;I am honored to speak in such esteemed company with my fellow
NullPointers &lt;a href=&quot;http://twitter.com/javafxpert&quot;&gt;James Weaver&lt;/a&gt;
and &lt;a href=&quot;http://twitter.com/frankgreco&quot;&gt;Frank Greco&lt;/a&gt; at the generous
invitation of my good friend, and also
NullPointer &lt;a href=&quot;http://twitter.com/fguime&quot;&gt;Freddy Guime&lt;/a&gt;.  James
and Frank are collaborating on a machine learning related talk, while I
am sharing some things I've learned in using Mesos/Marathon as a
desktop-to-datacenter-to-cloud runtime environment.  I only have 30
minutes so I am putting the slides on &lt;a href=&quot;https://www.slideshare.net/EdBurns6/chicago-jug-goto-meetup&quot;&gt;SlideShare&lt;/a&gt; and the demo source
code is available &lt;a href=&quot;/blog/downloads/20170404-cjug-goto-meetup.zip&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">I am honored to speak in such esteemed company with my fellow NullPointers James Weaver and Frank Greco at the generous invitation of my good friend, and also NullPointer Freddy Guime. James and Frank are collaborating on a machine learning related talk, while I am sharing some things I've learned in using Mesos/Marathon as a desktop-to-datacenter-to-cloud runtime environment. I only have 30 minutes so I am putting the slides on SlideShare and the demo source code is available here.</summary></entry><entry><title type="html">JavaLand 2017 gRPC 101</title><link href="/blog/2017/03/28/javaland-gprc-101.html" rel="alternate" type="text/html" title="JavaLand 2017 gRPC 101" /><published>2017-03-28T08:30:00-04:00</published><updated>2017-03-28T08:30:00-04:00</updated><id>/blog/2017/03/28/javaland-gprc-101</id><content type="html" xml:base="/blog/2017/03/28/javaland-gprc-101.html">&lt;p&gt;Raw nots from &lt;a href=&quot;http://twitter.com/saturnism&quot;&gt;Ray Tsang&lt;/a&gt;'s talk about &lt;a href=&quot;http://twitter.com/grpcio&quot;&gt;gRPC&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally was able to get to a session before it
  started.  &lt;a href=&quot;http://www.http2demo.io/&quot;&gt;HTTP/2 Demo.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gave definition of saturnism: lead poisoning.&lt;/p&gt;

&lt;p&gt;Trend: revisit: breaking down monolith into Microservices.  Or
creating microservices in greenfield.  A lot of overhead for this
  approach: distributed systems problems.  Need additional tooling.&lt;/p&gt;

&lt;p&gt;Referenced &lt;a href=&quot;http://www.ejbtutorial.com/&quot;&gt;CORBA tutorial
    here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RPC has a bad rep.  But he spoke highly of RMI.  Everything just
works.  But you have to be in Java on both sides.  To fix this, we came
up with SOAP, which lead to REST.  Why RPC: efficient and strongly type.
REST: everything is CRUDy.  What about how to represent, for example, a
bank account transfer operation?  On REST, you also have to write client
  libraries.  RPC can be great if it is simple and interoperable.&lt;/p&gt;

&lt;p&gt;At Google, they use Stubby.  It does O(10&lt;super&gt;10&lt;/super&gt;).  They
wanted to open source Stubby.  Square used to have their own RPC thing.
They combined and made gRPC.  Owned by the cloud native foundation.  The
  G in GPRC means GRPC.&lt;/p&gt;

&lt;p&gt;Transport is in HTTP/2: binary protocol.  Gave a little talk over
HTTP/2 features: binary, streams, HPACK, PUSH.  Protobuffer 3.
  Marshalling and unmarshalling data.&lt;/p&gt;

&lt;p&gt;Showed a graph showing throughput/cpu core: binary is faster than
  text.  It is also better for battery life.&lt;/p&gt;

&lt;p&gt;gRPC supports: C++, Objective C, PHP, Java.&lt;/p&gt;

&lt;p&gt;Finished the slideware at 14 minutes in.&lt;/p&gt;

&lt;p&gt;Protofile is the IDL file.  There you define the message payloads,
  messages, etc.  Must define request and response payloads.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;

    syntax = &quot;proto3&quot;;

    package com.example.grpc;

    option java_multiple_files = true;

    enum Sentiment {
    HAPPY = 0;
    SAD = 1;
    }

    message HelloRequest {
    string firstname = 1;
    string lastmame = 2;
    int64 age = 3;
    Sentiment sentiment = 4;
    repeated string hobbies = 5;
    map&amp;lt;string, string&amp;gt; bagOfTricks = 6;
    
    }

    message HelloResponse {
    string greeting = 1;
    }

    service GreetingService {
    rpc greeting([stream] HelloRequest) returns ([stream] HelloResponse);
    }
    
&lt;/code&gt;  &lt;/pre&gt;

&lt;p&gt;To run it, include mvn dependencies.  There are also stub generation
  plugins.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
    public class GreetingImpl extends GreetingServiceGrpc.GreetingServiceImplBase {
    public void greeting(HelloRequest, StreamObserver response);
    
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Automatically supports &lt;code&gt;onNext, onCompleted, onError&lt;/code&gt;.
All builder based.  &lt;/p&gt;

&lt;p&gt;The client uses channels.  Supports client side interceptors.
Supports load balancing.  Round robin.  Supports deadlines for calls.
This is kind of a built-in circuit breakers.  &lt;/p&gt;</content><author><name></name></author><summary type="html">Raw nots from Ray Tsang's talk about gRPC.</summary></entry><entry><title type="html">JavaLand 2017 Serverless AWS</title><link href="/blog/2017/03/28/javaland-serverless-aws.html" rel="alternate" type="text/html" title="JavaLand 2017 Serverless AWS" /><published>2017-03-28T08:00:00-04:00</published><updated>2017-03-28T08:00:00-04:00</updated><id>/blog/2017/03/28/javaland-serverless-aws</id><content type="html" xml:base="/blog/2017/03/28/javaland-serverless-aws.html">&lt;p&gt;Raw nots from Niko K&amp;ouml;bler's talk.&lt;/p&gt;

&lt;p&gt;Arrived late due to lunch choice.&lt;/p&gt;

&lt;p&gt;API Gateway.  Hides possible multiple service calls.  Kinda like
  ESB.&lt;/p&gt;

&lt;p&gt;DynamoDB. Fully managed NoSQL datasource.  Document oriented.  Pay by
  read/write/capacity units and used storage, not by time.&lt;/p&gt;

&lt;p&gt;Used with Amazon Alexa.  Programs in Alexa are called &quot;skills&quot;.&lt;/p&gt;

&lt;p&gt;Amazon Lambda has some competition: AzureFunctions, Google
CloudFunctions, IBM Bluemix with OpenWhisk.  Each offers different
  language bindings.&lt;/p&gt;

&lt;p&gt;Introducing the &lt;a href=&quot;http://serverless.com&quot;&gt;Serverless
    Framework&lt;/a&gt;.  Looks pretty clean.&lt;/p&gt;

&lt;p&gt;Showed how it looks using the AWS web UI.  Then went into postman and
  showed how to interact with the API.&lt;/p&gt;

&lt;p&gt;I liked how there is no Docker in this whole thing.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;http://twitter.com/serverlessbuch&quot;&gt;@serverlessbuch&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Raw nots from Niko K&amp;ouml;bler's talk.</summary></entry><entry><title type="html">JavaLand 2017 Lambdas</title><link href="/blog/2017/03/28/javaland-lambda.html" rel="alternate" type="text/html" title="JavaLand 2017 Lambdas" /><published>2017-03-28T05:00:00-04:00</published><updated>2017-03-28T05:00:00-04:00</updated><id>/blog/2017/03/28/javaland-lambda</id><content type="html" xml:base="/blog/2017/03/28/javaland-lambda.html">&lt;p&gt;Raw nots from Simon Ritter's talk.&lt;/p&gt;

&lt;p&gt;We had support for some functional programming in JDK 1.0: anonymous
  inner classes.  Lambdas do it much more cleanly.&lt;/p&gt;

&lt;p&gt;You can use lambdas where ever the type is a &lt;code&gt;Functional
Interface&lt;/code&gt;.  It has a single abstract method: accept.&lt;/p&gt;

&lt;p&gt;A lambda looks like a method, but it is not associated with a class.
  Therefore you can't call it a method.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;(parameters) -&amp;gt; body&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;There was a lot of debate of whether it should be =&amp;gt;.&lt;/p&gt;

&lt;p&gt;Lambdas are closures over values, not types.  This means state cannot
be modified in a lambda.  This means you can only refer to variables in
the surrounding scope, they have to be effectively final.  Effectively
means either explicitly marked final, or it's value cannot be
changeable.&lt;/p&gt;

&lt;p&gt;Method references let us reuse a method as a lambda expression.
Three different ways of using them.  Static method.  Instance method of
  an arbitrary type. Instance method of an existing type.&lt;/p&gt;


&lt;p&gt;Performance implications.  Anonymous inner classes force the compiler
to generate funny class names, type pollution, must be loaded at
runtime.  Originally, lambdas were implemented this way.  Better way is
to use invokedynamic.  Original idea of invokedymanic was to improve
performance of dynamically typed languages on the JVM.  Defers
implementation of the Lambda to the runtime.  It was the first thing
added to the JVM bytecode since Java 1.0.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;java.lang.LambdaMetaFactory&lt;/code&gt; returns an instance of the
lambda functional interface type.  Can divide lambdas into two groups.
Non-capturing lambdas: no surrounding scope being used; simple
conversion to static method.  Capturing lambdas: does use surrounding
scope: static method with captured variables prepended as
  parameters or synthetic instance method of class using Lambda. &lt;/p&gt;

&lt;p&gt;Went over some impl performance differences between lambdas and
anonymous inner classes.  Also for capture vs. instantiation of
anonymous inner classes.  The latter has heap implications.  &lt;b&gt;Unused
lambdas have no overhead.  Non-capturing lambdas automatically optimise.
Method references are slightly more
optimal.  &lt;code&gt;-XX:+TieredCompilation&lt;/code&gt; gives beter
    lambdas.  &lt;/b&gt; This is the default.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Alonso Church, the Lambda Calculus (1936).  A way of having a
mathematical definition for having functions and calling them.  He was
  Alan Turing's PhD advisor.&lt;/p&gt;

&lt;p&gt;Java programmers are typically imperative programmers.  Functional
programming is not imperative: no side effects.  Lambda calculus and
Turing machines are equivalent.  What can we do &lt;b&gt;only&lt;/b&gt; using Lambda
  expressions?&lt;/p&gt;</content><author><name></name></author><summary type="html">Raw nots from Simon Ritter's talk.</summary></entry><entry><title type="html">JavaLand 2017 Greeting</title><link href="/blog/2017/03/28/javaland-intro.html" rel="alternate" type="text/html" title="JavaLand 2017 Greeting" /><published>2017-03-28T04:00:00-04:00</published><updated>2017-03-28T04:00:00-04:00</updated><id>/blog/2017/03/28/javaland-intro</id><content type="html" xml:base="/blog/2017/03/28/javaland-intro.html">&lt;p&gt;Fried Saacke, kicked off JavaLand 2017 today.  It's totally full, and
in a new theater within Fantasialand.  We have 110 lectures, 8 workshop
sessions, and 16 community activities this year.  He admitted that not
everything will go as smoothly as we might like, but we are doing the
  best.  The biggest practical challenge is throughput.&lt;/p&gt;

&lt;p&gt;He talked about DukeCon, which may be a separate conference, but
  currently is an online sidecar with JavaLand.&lt;/p&gt;

&lt;p&gt;Tobias Frech talked about the community activities: exchange with
  eachother.  In the Quantum show floor.&lt;/p&gt;

	&lt;ul&gt;

	  &lt;li&gt;&lt;p&gt;Java Innovation Lab
	  &lt;/p&gt;&lt;/li&gt;

	  &lt;li&gt;&lt;p&gt;Meet the JUGS
	  &lt;/p&gt;&lt;/li&gt;

	  &lt;li&gt;&lt;p&gt;Early Adapter's Area
	  &lt;/p&gt;&lt;/li&gt;

	  &lt;li&gt;&lt;p&gt;Workshops
	  &lt;/p&gt;&lt;/li&gt;
          
          
	&lt;/ul&gt;

&lt;p&gt;16:30, Group photo outside Quantum&lt;/p&gt;

&lt;p&gt;Use the #JavaLand twitter handle.&lt;/p&gt;

&lt;p&gt;German speaking JavaLand slack group
#jlca.  &lt;a href=&quot;https://slackin-jvm-german.herokuapp.com/&quot;&gt;Click
    here&lt;/a&gt;.  Ask here where you can win a robot.&lt;/p&gt;

&lt;p&gt;This year they had a JavaLand4Kids day before the conference.&lt;/p&gt;

&lt;p&gt;Some more numbers about speakers, staff, exhititors,
  sponsors, student helpers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;He specially called out that he invited Oracle to be a sponsor, but
    they declined.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Digitialization of the REWE Group&lt;/p&gt;

&lt;p&gt;Mentioned the importance of being a good server leader.  So glad to
  see him mention this.&lt;/p&gt;

&lt;p&gt;Three big digitializaion efforts before joining REWE.  Related his
recruitment story from REWE group.  Key point: never compromise, at all.
But this is in conflict with the notion of being a servant leader.  He
keeps mentioning that life is short.  Mentions you are only as good as
  you think you are.&lt;/p&gt;

&lt;p&gt;Listed some business numbers for REWE.  Lines of business: Food
  retail, Tourism, DIY.&lt;/p&gt;

&lt;p&gt;Car analogy: if the car keeps driving ok, why fix it?&lt;/p&gt;

&lt;p&gt;What does he mean by digitalizaion?  Related ProMarkt story: Metaphor
of Bezos cuckold story.  Basically: take on the &quot;software is eating the
world&quot; meme and reorganize the company according to it.  Story: how he
asked them to change the company car policy.  This is an example of the
  changes he was trying to bring.&lt;/p&gt;

&lt;p&gt;Similar story: the corporate suite and the whiteboard: he did not
  compromise.&lt;/p&gt;

&lt;p&gt;I would like to him to give more details of what they do from day to
  day.  It was all about the environment.&lt;/p&gt;

&lt;p&gt;Now he gets to it.  Slide showing non-digital businesses and
corresponding digitalized business.  Old: World of Music, ProMarkt,
Gortz, Morrisons.  New: iTunes, Spotify, amazon, zalando, ocado.
Mentioned the he will sell his Morrisons shares short.  Morrisons: they
compromised by partnering with Ocado and Amazon.  They are giving all of
their knowledge away to someone who is going to eat you in the next
years.&lt;/p&gt;

&lt;p&gt;Have to rethink the whole business.  Starting with: what is a store?
He thinks of it as a mini warehouse that is perfectly positioned in
neighborhoods.  Difference between self service business and service
business.  Gave an aside: build your technology yourself.  Don't buy
  from vendors, otherwise you become too constrained.&lt;/p&gt;</content><author><name></name></author><summary type="html">Fried Saacke, kicked off JavaLand 2017 today. It's totally full, and in a new theater within Fantasialand. We have 110 lectures, 8 workshop sessions, and 16 community activities this year. He admitted that not everything will go as smoothly as we might like, but we are doing the best. The biggest practical challenge is throughput.</summary></entry></feed>