<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.0">Jekyll</generator><link href="/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="/blog/" rel="alternate" type="text/html" /><updated>2017-02-22T00:32:24-05:00</updated><id>/blog/</id><title type="html">Ed Burns Blog</title><subtitle>Ed Burns blogs here, mostly about Java and software, but sometimes about other random things.
</subtitle><entry><title type="html">JAX-RS 2.1 New Feature Introduction</title><link href="/blog/2017/02/22/jax-rs-2_1-new-feature-introduction.html" rel="alternate" type="text/html" title="JAX-RS 2.1 New Feature Introduction" /><published>2017-02-22T00:15:00-05:00</published><updated>2017-02-22T00:15:00-05:00</updated><id>/blog/2017/02/22/jax-rs-2_1-new-feature-introduction</id><content type="html" xml:base="/blog/2017/02/22/jax-rs-2_1-new-feature-introduction.html">&lt;p&gt;In preparation for my
&lt;a href=&quot;/blog/2017/02/21/devnexus-2017-picks.html&quot;&gt;DevNexus talk on Thursday&lt;/a&gt; I
reviewed the commit log for the JAX-RS API for all the commits in
the 2.1 cycle, to be sure I didn’t miss anything.  There are basically
two new big ticket features in JAX-RS 2.1.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Server Sent Events, with support for Reactive Streams as specified in
the Reactive Streams API&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reactive Client API&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This blog post outlines each feature.  For more details, see the
DevNexus talk.  Thanks to
&lt;a href=&quot;https://twitter.com/pavel_bucek&quot;&gt;Pavel Bucek&lt;/a&gt;,
&lt;a href=&quot;https://twitter.com/marek_potociar&quot;&gt;Marek Potociar&lt;/a&gt; and
&lt;a href=&quot;https://twitter.com/spericas&quot;&gt;Santigo Pericas-Geertsen&lt;/a&gt; for co-leading
the JAX-2.1 Spec and in particular for the code samples I cite in this
post.&lt;/p&gt;

&lt;p&gt;Please note that this blog post documents in-progress features whose API
will likely change before JAX-RS 2.1 is final.&lt;/p&gt;

&lt;h2 id=&quot;server-sent-events-sse&quot;&gt;Server Sent Events (SSE)&lt;/h2&gt;

&lt;p&gt;This feature was introduced in “commit 37f8814 Date: Tue Oct 6 20:15:07
2015 +0200” and was substantially enhanced several times since, most
notably with the addition of support for the
&lt;a href=&quot;http://reactive-streams.org&quot;&gt;Reactive Streams Standard from Lightbend&lt;/a&gt;.
Reactive support was very recently introduced, in “commit b2b8f3f Date:
Tue Jan 10 16:36:28 2017 +0100”.  SSE is currently the only JAX-RS
feature to use Reactive Streams, but it is specified without being
particularly bound to that feature.  SSE support in JAX-RS makes it easy
to use this feature in a standard way, in both client and server.&lt;/p&gt;

&lt;p&gt;Server Sent Events, SSE is a popular web transport technique specified
by the W3C at &lt;a href=&quot;https://www.w3.org/TR/eventsource/&quot;&gt;https://www.w3.org/TR/eventsource/&lt;/a&gt;.  The most common
usage of SSE is to allow web applications to push one way asynchronous
updates to browsers without having to maintain a million open sockets.
This common usage is well documented at
&lt;a href=&quot;https://www.html5rocks.com/en/tutorials/eventsource/basics/&quot;&gt;https://www.html5rocks.com/en/tutorials/eventsource/basics/&lt;/a&gt;.  As an
aside, because JAX-RS can function as both a client and a server
technology, it is possible to use SSE in a two way fashion if you have
JAX-RS on both ends of your client and server connection.  Either way,
JAX-RS 2.1 has you covered.&lt;/p&gt;

&lt;p&gt;Let’s take a look at the most up-to-date manifestation of the SSE API in
JAX-RS 2.1.  First, a simple REST resource that implements an SSE server:&lt;/p&gt;

&lt;div style=&quot;padding: 5px;&quot;&gt;
		&lt;div class=&quot;java&quot; style=&quot;font-family:monospace;&quot;&gt;&lt;ol&gt;&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;@Path&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;server-sent-events&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;@Singleton&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;class&lt;/span&gt; ServerSentEventsResource &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;final&lt;/span&gt; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Aobject+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Object&lt;/span&gt;&lt;/a&gt; outputLock &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;new&lt;/span&gt; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Aobject+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Object&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;final&lt;/span&gt; Sse sse&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;volatile&lt;/span&gt; SseEventSink eventSink&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; @Resource&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;private&lt;/span&gt; ManagedExecutorService executorService&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; @Inject&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;public&lt;/span&gt; ServerSentEventsResource&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;Sse sse&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;this&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;sse&lt;/span&gt; &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; sse&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; @GET&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; @Produces&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;MediaType.&lt;span style=&quot;color: #006633;&quot;&gt;SERVER_SENT_EVENTS&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;void&lt;/span&gt; getMessageQueue&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;@&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Acontext+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Context&lt;/span&gt;&lt;/a&gt; SseEventSink eventSink&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;synchronized&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;outputLock&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;this&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;eventSink&lt;/span&gt; &lt;span style=&quot;color: #339933;&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;new&lt;/span&gt; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Aillegalstateexception+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;IllegalStateException&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;Server sink already served.&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;this&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;eventSink&lt;/span&gt; &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; eventSink&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; @POST&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;void&lt;/span&gt; addMessage&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;final&lt;/span&gt; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Astring+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;String&lt;/span&gt;&lt;/a&gt; message&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;throws&lt;/span&gt; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Aioexception+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;IOException&lt;/span&gt;&lt;/a&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;eventSink &lt;span style=&quot;color: #339933;&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;new&lt;/span&gt; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Aillegalstateexception+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;IllegalStateException&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;No client connected.&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventSink.&lt;span style=&quot;color: #006633;&quot;&gt;onNext&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;sse.&lt;span style=&quot;color: #006633;&quot;&gt;newEvent&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;custom-message&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; @DELETE&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;void&lt;/span&gt; close&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;throws&lt;/span&gt; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Aioexception+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;IOException&lt;/span&gt;&lt;/a&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;synchronized&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;outputLock&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;eventSink &lt;span style=&quot;color: #339933;&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventSink.&lt;span style=&quot;color: #006633;&quot;&gt;close&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventSink &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; @POST&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; @Path&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;domains/{id}&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; @Produces&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;MediaType.&lt;span style=&quot;color: #006633;&quot;&gt;SERVER_SENT_EVENTS&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;void&lt;/span&gt; startDomain&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;@PathParam&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;final&lt;/span&gt; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Astring+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;String&lt;/span&gt;&lt;/a&gt; id,&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Acontext+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Context&lt;/span&gt;&lt;/a&gt; SseEventSink eventSink&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; executorService.&lt;span style=&quot;color: #006633;&quot;&gt;submit&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #339933;&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;try&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventSink.&lt;span style=&quot;color: #006633;&quot;&gt;onNext&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;sse.&lt;span style=&quot;color: #006633;&quot;&gt;newEventBuilder&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;domain-progress&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .&lt;span style=&quot;color: #006633;&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Astring+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;String&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;class&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;starting domain &amp;quot;&lt;/span&gt; &lt;span style=&quot;color: #339933;&quot;&gt;+&lt;/span&gt; id &lt;span style=&quot;color: #339933;&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot; ...&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;build&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Athread+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Thread&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;sleep&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;200&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventSink.&lt;span style=&quot;color: #006633;&quot;&gt;onNext&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;sse.&lt;span style=&quot;color: #006633;&quot;&gt;newEvent&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;domain-progress&amp;quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;50%&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Athread+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Thread&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;sleep&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;200&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventSink.&lt;span style=&quot;color: #006633;&quot;&gt;onNext&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;sse.&lt;span style=&quot;color: #006633;&quot;&gt;newEvent&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;domain-progress&amp;quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;60%&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Athread+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Thread&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;sleep&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;200&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventSink.&lt;span style=&quot;color: #006633;&quot;&gt;onNext&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;sse.&lt;span style=&quot;color: #006633;&quot;&gt;newEvent&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;domain-progress&amp;quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;70%&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Athread+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Thread&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;sleep&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;200&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventSink.&lt;span style=&quot;color: #006633;&quot;&gt;onNext&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;sse.&lt;span style=&quot;color: #006633;&quot;&gt;newEvent&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;domain-progress&amp;quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;99%&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Athread+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Thread&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;sleep&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;200&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventSink.&lt;span style=&quot;color: #006633;&quot;&gt;onNext&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;sse.&lt;span style=&quot;color: #006633;&quot;&gt;newEvent&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;domain-progress&amp;quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;Done.&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventSink.&lt;span style=&quot;color: #006633;&quot;&gt;close&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;catch&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;final&lt;/span&gt; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Ainterruptedexception+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;InterruptedException&lt;/span&gt;&lt;/a&gt; &lt;span style=&quot;color: #339933;&quot;&gt;|&lt;/span&gt; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Aioexception+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;IOException&lt;/span&gt;&lt;/a&gt; e&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; e.&lt;span style=&quot;color: #006633;&quot;&gt;printStackTrace&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;		&lt;/div&gt;

&lt;p&gt;The constructor on line 13 receives the &lt;code class=&quot;highlighter-rouge&quot;&gt;Sse&lt;/code&gt; class, formerly known as
&lt;code class=&quot;highlighter-rouge&quot;&gt;SseContext&lt;/code&gt;.  This serves as a factory for instances of
&lt;code class=&quot;highlighter-rouge&quot;&gt;OutboundSseEvent&lt;/code&gt;, as seen on lines 33 and 57 - 65.&lt;/p&gt;

&lt;p&gt;The method that processes GET requests starts on line 17.  This method
receives an &lt;code class=&quot;highlighter-rouge&quot;&gt;SseEventSink&lt;/code&gt; via injection.  In this simple example, the
GET request is just made to cause the &lt;code class=&quot;highlighter-rouge&quot;&gt;eventSink&lt;/code&gt; instance variable to
be populated.&lt;/p&gt;

&lt;p&gt;Now the magic starts to happen.  &lt;code class=&quot;highlighter-rouge&quot;&gt;SseEventSink&lt;/code&gt; extends the
&lt;code class=&quot;highlighter-rouge&quot;&gt;javax.ws.rs.Flow.Subscriber&amp;lt;T&amp;gt;&lt;/code&gt; interface, which is part of a 1:1 copy
of the
&lt;a href=&quot;http://download.java.net/java/jdk9/docs/api/java/util/concurrent/Flow.Subscriber.html&quot;&gt;Java SE 9 Flow API&lt;/a&gt;
(which is a reactive streams compliant API.  The plan is to drop this
copy in the version of JAX-RS that suppors Java SE 9).  You can see the
&lt;code class=&quot;highlighter-rouge&quot;&gt;onNext&lt;/code&gt; method of this interface being invoked within the POST
processor on line 33.  Because JAX-RS SSE transparently supports the
Reactive Streams API, you can rest assured that the necessary
requirements to safely maintain a reactive-compliant application are
met.  The meaning of &lt;code class=&quot;highlighter-rouge&quot;&gt;onNext&lt;/code&gt; is simply, “here’s another thing in the
stream of things for you to process”.  In this case, the recipient of
the new thing is whatever parties are connected to the other end of the
SSE connection.&lt;/p&gt;

&lt;p&gt;A more advanced POST processor is found starting on line 46, for the
path of &lt;code class=&quot;highlighter-rouge&quot;&gt;domains/{id}&lt;/code&gt;.  A post to this path causes an asynchronous
action to commence using the &lt;code class=&quot;highlighter-rouge&quot;&gt;ExecutorService&lt;/code&gt;.  This example illustrates the
process of starting an appserver domain on line 54.  Several status
updates are sent on lines 56 - 65 and then the &lt;code class=&quot;highlighter-rouge&quot;&gt;eventSink&lt;/code&gt; is closed on
line 67.&lt;/p&gt;

&lt;p&gt;Rounding out the example, a DELETE processor simply closes the eventSink
on demand, on line 36.&lt;/p&gt;

&lt;p&gt;I feel the SSE Client API is more interesting in a sense because it
enables the less common use case of a non-JavaScript SSE client.  Let’s
take a look at the SSE Client API in JAX-RS 2.1.&lt;/p&gt;

&lt;div style=&quot;padding: 5px;&quot;&gt;
		&lt;div class=&quot;java&quot; style=&quot;font-family:monospace;&quot;&gt;&lt;ol&gt;&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;class&lt;/span&gt; SseClient &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;static&lt;/span&gt; WebTarget target&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;void&lt;/span&gt; main&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Astring+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;String&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#93;&lt;/span&gt; args&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; target &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; ClientBuilder.&lt;span style=&quot;color: #006633;&quot;&gt;newClient&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;target&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;args&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#91;&lt;/span&gt;0&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#93;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; consumeEventsViaSubscription&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;void&lt;/span&gt; consumeEventsViaSubscription&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;try&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;final&lt;/span&gt; SseEventSource eventSource &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SseEventSource.&lt;span style=&quot;color: #006633;&quot;&gt;target&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;target&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.&lt;span style=&quot;color: #006633;&quot;&gt;build&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventSource.&lt;span style=&quot;color: #006633;&quot;&gt;subscribe&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Asystem+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;System&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;out&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;::&lt;/span&gt;println&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventSource.&lt;span style=&quot;color: #006633;&quot;&gt;open&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;for&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #000066; font-weight: bold;&quot;&gt;int&lt;/span&gt; counter &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #cc66cc;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt; counter &lt;span style=&quot;color: #339933;&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #cc66cc;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt; counter&lt;span style=&quot;color: #339933;&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; target.&lt;span style=&quot;color: #006633;&quot;&gt;request&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;post&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Aentity+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Entity&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;message &amp;quot;&lt;/span&gt; &lt;span style=&quot;color: #339933;&quot;&gt;+&lt;/span&gt; counter&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Athread+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Thread&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;sleep&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;500&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt; &lt;span style=&quot;color: #666666; font-style: italic;&quot;&gt;// make sure all the events have time to arrive&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;catch&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Ainterruptedexception+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;InterruptedException&lt;/span&gt;&lt;/a&gt; e&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; e.&lt;span style=&quot;color: #006633;&quot;&gt;printStackTrace&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;		&lt;/div&gt;

&lt;p&gt;Here we come upon an in-progress aspec of the SSE API:
&lt;code class=&quot;highlighter-rouge&quot;&gt;SseEventSource&lt;/code&gt;.  This class will eventually extend
&lt;code class=&quot;highlighter-rouge&quot;&gt;Flow.Publisher&amp;lt;InboundSseEvent&amp;gt;&lt;/code&gt;, but in the latest revision of
JAX-RS 2.1, 2.1-m04, it does not.  It does, however, have all necessary the
methods of that interface.  In the above example, the subscribe() method
is seen on line 15.  Here we are simply printing out the messages
received from the server.  Then, on lines 18 - 20 we are issuing a few
POST requests to the server.&lt;/p&gt;

&lt;h2 id=&quot;reactive-client-api&quot;&gt;Reactive Client API&lt;/h2&gt;

&lt;p&gt;This other major feature for JAX-RS 2.1 was introduced in “commit
dea3922 Date: Wed Aug 26 10:26:26 2015 -0400”: the Reactive Client API.
This API builds entirely on two foundations: Java 8 CompletableFuture
and the Invocation API from JAX-RS 2.0.  The former is capably explained
by
&lt;a href=&quot;http://www.nurkiewicz.com/2013/05/java-8-definitive-guide-to.html&quot;&gt;Thomas Nurkiewicz&lt;/a&gt;
whom I had the pleasure of seeing present at
&lt;a href=&quot;/blog/2015/06/16/geekout-2015-summary.html&quot;&gt;GeekOut 2015&lt;/a&gt;.  The latter
is a way to compose client requests and cause them to be processed in
the proper order to enable assembling the responses.  In the case of the
Reactive Client API, these responses are asynchronous and fully reactive
compliant.  The root interface of the API is &lt;code class=&quot;highlighter-rouge&quot;&gt;RxInvoker&lt;/code&gt;.  This
interface has Java methods for all of the standard HTTP methods, as well
a generic “method” method for arbitrary methods.  The API is usually
invoked as part of a fluid call chain.&lt;/p&gt;

&lt;p&gt;The full details of both of these foundational features are too deep to
describe in this blog post, but the following simple example gives a
flavor of their power.&lt;/p&gt;

&lt;div style=&quot;padding: 5px;&quot;&gt;
		&lt;div class=&quot;java&quot; style=&quot;font-family:monospace;&quot;&gt;&lt;ol&gt;&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;Client client &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; ClientBuilder.&lt;span style=&quot;color: #006633;&quot;&gt;newClient&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;URI service &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; URI.&lt;span style=&quot;color: #006633;&quot;&gt;create&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;http://localhost/service/resource&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;CompletionStage&lt;span style=&quot;color: #339933;&quot;&gt;&amp;lt;&lt;/span&gt;Response&lt;span style=&quot;color: #339933;&quot;&gt;&amp;gt;&lt;/span&gt; cs1 &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; client.&lt;span style=&quot;color: #006633;&quot;&gt;target&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;service&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;request&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;rx&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;post&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Aentity+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Entity&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;CompletionStage&lt;span style=&quot;color: #339933;&quot;&gt;&amp;lt;&lt;/span&gt;Response&lt;span style=&quot;color: #339933;&quot;&gt;&amp;gt;&lt;/span&gt; cs2 &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; client.&lt;span style=&quot;color: #006633;&quot;&gt;target&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;service&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;request&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;rx&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;post&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Aentity+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Entity&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;cs1.&lt;span style=&quot;color: #006633;&quot;&gt;thenCombine&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;cs2, &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;r1, r2&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&quot;color: #339933;&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Astring+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;String&lt;/span&gt;&lt;/a&gt; s1 &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; r1.&lt;span style=&quot;color: #006633;&quot;&gt;readEntity&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Astring+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;String&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Astring+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;String&lt;/span&gt;&lt;/a&gt; s2 &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; r2.&lt;span style=&quot;color: #006633;&quot;&gt;readEntity&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Astring+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;String&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;return&lt;/span&gt; client.&lt;span style=&quot;color: #006633;&quot;&gt;target&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;service&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;request&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;rx&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;post&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Aentity+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;Entity&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;s1 &lt;span style=&quot;color: #339933;&quot;&gt;+&lt;/span&gt; s2&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;thenAccept&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;responseCompletionStage &lt;span style=&quot;color: #339933;&quot;&gt;-&amp;gt;&lt;/span&gt; responseCompletionStage.&lt;span style=&quot;color: #006633;&quot;&gt;thenAccept&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;r3 &lt;span style=&quot;color: #339933;&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #009900;&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Astring+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;String&lt;/span&gt;&lt;/a&gt; s3 &lt;span style=&quot;color: #339933;&quot;&gt;=&lt;/span&gt; r3.&lt;span style=&quot;color: #006633;&quot;&gt;readEntity&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;&lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Astring+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;String&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #000000; font-weight: bold;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #fcfcfc;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&amp;nbsp; &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=allinurl%3Asystem+java.sun.com&amp;amp;btnI=I%27m%20Feeling%20Lucky&quot;&gt;&lt;span style=&quot;color: #003399;&quot;&gt;System&lt;/span&gt;&lt;/a&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;out&lt;/span&gt;.&lt;span style=&quot;color: #006633;&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#40;&lt;/span&gt;s3&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li style=&quot;background: #f0f0f0;&quot;&gt;&lt;div style=&quot;font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;&quot;&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #009900;&quot;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&quot;color: #339933;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;		&lt;/div&gt;

&lt;p&gt;This example shows a reactive client that issues three separate POST
requests asynchronously, in a non-blocking fashion, and assembling the
result for printing, on line 15.&lt;/p&gt;

&lt;h2 id=&quot;appendix-work-in-progress-non-blocking-io&quot;&gt;Appendix, work in progress Non-Blocking IO&lt;/h2&gt;

&lt;p&gt;Another important feature is in the works for JAX-RS 2.1, a Non-Blocking
IO API.  An early draft of this feature was introduced in “commit
e997a32 Date: Thu Sep 3 14:38:00 2015 -0400”&lt;/p&gt;

&lt;p&gt;In its final form, this work will likely use the Flow API in a similar
way that the SSE support does.&lt;/p&gt;

&lt;h2 id=&quot;annotated-commit-log-messages&quot;&gt;Annotated Commit Log Messages&lt;/h2&gt;

&lt;p&gt;The remainder of the blog post is a review of all the commits to the
JAX-RS 2.1 API since the start of the JSR.&lt;/p&gt;

&lt;h3 id=&quot;commit-a2b9dfe-date-fri-feb-10-190946-2017-0100&quot;&gt;commit a2b9dfe Date: Fri Feb 10 19:09:46 2017 +0100&lt;/h3&gt;

&lt;p&gt;Refine javadoc for javax/ws/rs/sse/SseEventSource.java.  Fix the type on
the reference to the accept() method.&lt;/p&gt;

&lt;h3 id=&quot;commit-4d79c56-date---fri-feb-10-162815-2017-0100&quot;&gt;commit 4d79c56 Date:   Fri Feb 10 16:28:15 2017 +0100&lt;/h3&gt;

&lt;p&gt;Rename Sse.newEvent() to newEventBuilder().  Rename Sse.newDataEvent()
to newEvent().  Update example accordingly.&lt;/p&gt;

&lt;h3 id=&quot;commit-d62ed77-date---fri-feb-10-154136-2017-0100&quot;&gt;commit d62ed77 Date:   Fri Feb 10 15:41:36 2017 +0100&lt;/h3&gt;

&lt;p&gt;In javax/ws/rs/sse/SseBroadcaster.java, in onException() and onClose(),
modify the type of the argument to be less specific in the inheritance
hierarchy.  It’s just a FlowSubscriber&amp;lt;&amp;gt; now, of which SseEventSink is
an implementation.&lt;/p&gt;

&lt;p&gt;Refine jaxrs/examples/sse/ItemStoreResource.java example accordingly.&lt;/p&gt;

&lt;h3 id=&quot;commit-8a61f14-date---wed-feb-8-090340-2017-0100&quot;&gt;commit 8a61f14 Date:   Wed Feb 8 09:03:40 2017 +0100&lt;/h3&gt;

&lt;p&gt;Add newDataEvent() to javax/ws/rs/sse/Sse.java.  This creates an
OutputboundSseEvent.&lt;/p&gt;

&lt;h3 id=&quot;commit-b036972-date---wed-feb-8-094351-2017-0100&quot;&gt;commit b036972 Date:   Wed Feb 8 09:43:51 2017 +0100&lt;/h3&gt;

&lt;p&gt;Refine Javadoc of RxInvokerProvider.&lt;/p&gt;

&lt;h3 id=&quot;commit-459ddb6-date---wed-feb-8-181431-2017-0100&quot;&gt;commit 459ddb6 Date:   Wed Feb 8 18:14:31 2017 +0100&lt;/h3&gt;

&lt;p&gt;This was the big refactor of the Sse API.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Drop SseClientSubscriber and remove usages.  Functionality taken over
by new class javax/ws/rs/sse/SseSubscription.java&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Drop SseEventInput&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Rename SseEventOutput to SseEventSink.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Rename SseContext to Sse.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;commit-2ae0169-date---thu-feb-2-184314-2017-0100&quot;&gt;commit 2ae0169 Date:   Thu Feb 2 18:43:14 2017 +0100&lt;/h3&gt;

&lt;p&gt;Introduce javax/ws/rs/sse/SseClientSubscriber.java, an implementation of
Flow.Subscriber().  Drop open() from SseEventSource.  This class was
removed shortly after this commit.&lt;/p&gt;

&lt;p&gt;Refine SseClient example to use SseClientSubscriber instead of open().&lt;/p&gt;

&lt;h3 id=&quot;commit-4e87a23-date---fri-jan-13-142909-2017-0100&quot;&gt;commit 4e87a23 Date:   Fri Jan 13 14:29:09 2017 +0100&lt;/h3&gt;

&lt;p&gt;Rework commit f601630, to remove Class&amp;lt;? extends RxInvokerProvider&lt;T&gt;&amp;gt;
from the signatures, replacing with Class&lt;T&gt;.  Added isProviderFor()
method to javax/ws/rs/client/RxInvokerProvider.java.  Modify
getRxInvoker() to take a SyncInvoker instead of Invocation.Builder.&lt;/T&gt;&lt;/T&gt;&lt;/p&gt;

&lt;p&gt;Updated example javax/ws/rs/core/RxClientTest.java&lt;/p&gt;

&lt;h3 id=&quot;commit-f601630-date---thu-jan-12-103141-2017-0100&quot;&gt;commit f601630 Date:   Thu Jan 12 10:31:41 2017 +0100&lt;/h3&gt;

&lt;p&gt;This was reworked in a subsequent commit.&lt;/p&gt;

&lt;p&gt;Refine javax/ws/rs/client/Invocation.java.  Add an rx() method that
takes an RxInvokerProvider.  This enables other types of asynchronous
computation models, such as the RxJava.  There is also a variant that
takes an ExecutorService.&lt;/p&gt;

&lt;p&gt;Add javax/ws/rs/client/RxInvokerProvider.java.&lt;/p&gt;

&lt;p&gt;Add example javax/ws/rs/core/RxClientTest.java.&lt;/p&gt;

&lt;h3 id=&quot;commit-b2b8f3f-date---tue-jan-10-163628-2017-0100&quot;&gt;commit b2b8f3f Date:   Tue Jan 10 16:36:28 2017 +0100&lt;/h3&gt;

&lt;p&gt;Refine jaxrs/examples/sse/ItemStoreResource.java and
jaxrs/examples/sse/ServerSentEventsResource.java to use Java SE 8
lambdas.&lt;/p&gt;

&lt;p&gt;Added class javax/ws/rs/Flow.java.  This is the implementation of the
Reactive Streams API.  This is the big class here.&lt;/p&gt;

&lt;p&gt;Rework Sse feature to use the Flow API.  In particular, make
SseEventInput an implementation of Flow.Publisher and SseEventOutput an
implementation of Flow.Subscriber.  Also make SseEventSource an
implementation of Flow.Publisher&lt;InboundSseEvent&gt;.&lt;/InboundSseEvent&gt;&lt;/p&gt;

&lt;p&gt;Rework Sse feature to flesh out some hitherto missing Javadoc.&lt;/p&gt;

&lt;p&gt;Adde a package-info.java for Sse.&lt;/p&gt;

&lt;h3 id=&quot;commit-46d81cf-date---thu-oct-15-145243-2015-0200&quot;&gt;commit 46d81cf Date:   Thu Oct 15 14:52:43 2015 +0200&lt;/h3&gt;

&lt;p&gt;Refine ServerSentEventsResource example.&lt;/p&gt;

&lt;h3 id=&quot;commit-37f8814-date---tue-oct-6-201507-2015-0200&quot;&gt;commit 37f8814 Date:   Tue Oct 6 20:15:07 2015 +0200&lt;/h3&gt;

&lt;p&gt;First draft of Server Sent Events support.  Since this is one of the
biggest new features in JAX-RS-2.1, I’ll discuss it in its final form.&lt;/p&gt;

&lt;p&gt;This commit added examples of using SSE in classes
jaxrs/examples/sse/ItemStoreResource.java,
jaxrs/examples/sse/SseClient.java andcommit d62ed77308878b7df80f56a956aa90f9d1e4b613
Author: Pavel Bucek &lt;a href=&quot;mailto:pavel.bucek@oracle.com&quot;&gt;pavel.bucek@oracle.com&lt;/a&gt;
Date:   Fri Feb 10 15:41:36 2017 +0100&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SseBroadcaster shouldn't force SseEventSink in #onException and #onClose.

Change-Id: I1d1c87ef04dbeb0f317eb793473812b3ad09558c
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;diff –git a/examples/src/main/java/jaxrs/examples/sse/ItemStoreResource.java b/examples/src/main/java/jaxrs/examples/sse/ItemStoreResource.java
index bec389f..64c8394 100644
— a/examples/src/main/java/jaxrs/examples/sse/ItemStoreResource.java
+++ b/examples/src/main/java/jaxrs/examples/sse/ItemStoreResource.java
@@ -89,10 +89,10 @@ public class ItemStoreResource {
         this.sse = sse;
         this.broadcaster = sse.newBroadcaster();&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;broadcaster.onException((sseEventOutput, e) -&amp;gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;broadcaster.onException((subscriber, e) -&amp;gt;
        LOGGER.log(Level.WARNING, “An exception has been thrown while broadcasting to an event output.”, e));&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;broadcaster.onClose(sseEventOutput -&amp;gt; LOGGER.log(Level.INFO, “SSE event output has been closed.”));&lt;/li&gt;
  &lt;li&gt;broadcaster.onClose(subscriber -&amp;gt; LOGGER.log(Level.INFO, “SSE event output has been closed.”));
     }&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; private static volatile long reconnectDelay = 0; diff --git a/jaxrs-api/src/main/java/javax/ws/rs/sse/SseBroadcaster.java b/jaxrs-api/src/main/java/javax/ws/rs/sse/SseBroadcaster.java index 988e8ba..c9078a0 100644 --- a/jaxrs-api/src/main/java/javax/ws/rs/sse/SseBroadcaster.java +++ b/jaxrs-api/src/main/java/javax/ws/rs/sse/SseBroadcaster.java @@ -68,7 +68,7 @@ public interface SseBroadcaster extends AutoCloseable, Flow.Publisher&amp;lt;OutboundSs
  * @param onException bi-consumer, taking two parameters: {@link SseEventSink}, which is the source of the
  *                    exception and the actual {@link Exception}.
  */ -    void onException(BiConsumer&amp;lt;SseEventSink, Exception&amp;gt; onException); +    void onException(BiConsumer&amp;lt;Flow.Subscriber&amp;lt;? super OutboundSseEvent&amp;gt;, Exception&amp;gt; onException);
 
 /**
  * Register a listener, which will be called when the SSE event output has been closed (either by client closing @@ -80,7 +80,7 @@ public interface SseBroadcaster extends AutoCloseable, Flow.Publisher&amp;lt;OutboundSs
  *
  * @param onClose consumer taking single parameter, a {@link SseEventSink}, which was closed.
  */ -    void onClose(Consumer&amp;lt;SseEventSink&amp;gt; onClose); +    void onClose(Consumer&amp;lt;Flow.Subscriber&amp;lt;? super OutboundSseEvent&amp;gt;&amp;gt; onClose);
 
 /**
  * Subscribe {@link OutboundSseEvent} subscriber (i.e. {@link SseEventSink})
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;examples/sse/ServerSentEventsResource.java.  These classes are still in
the codebase.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Added forInstance() that takes an Object and returns GenericType to
javax/ws/rs/core/GenericType.java.  This uses the
GenericEntity.getType() to return the type, or just returns the Java
Class.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added LAST_EVENT_ID_HEADER constant to
javax/ws/rs/core/HttpHeaders.java.  This constant is used for the
“Last-Event-ID” header in the SSE spec &lt;a href=&quot;http://www.w3.org/TR/eventsource/#last-event-id&quot;&gt;http://www.w3.org/TR/eventsource/#last-event-id&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added text/event-stream to javax/ws/rs/core/MediaType.java.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added javax/ws/rs/sse/FactoryFinder.java.  Looks like this is used
from SseEventSource to instantiate an SseEventSource.Builder.  This
class has been moved in a later revision of the proposal.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added javax/ws/rs/sse/InboundSseEvent.java.  An SseEvent subclass for
events when JAX-RS client is listening to a server that is sending
SSE?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added javax/ws/rs/sse/OutboundSseEvent.java.  An SseEvent subclass for
events when JAX-RS is acting as the server sending SSE events.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added javax/ws/rs/sse/SseBroadcaster.java.  The thing that causes
OutboundSseEvents to be sent to the client.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added javax/ws/rs/sse/SseContext.java.  To make the SSE feature
injectable.  This class has been renamed to Sse in a later version of
the feature.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added class java/javax/ws/rs/sse/SseEvent.java, the event base class.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added javax/ws/rs/sse/SseEventInput.java.  Lets you read
InboundSseEvents as they arrive.  This class has been droped in a
later version of the feature.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added javax/ws/rs/sse/SseEventOutput.java.  Lets you write
OutboundSseEvents. This class has been renamed to SseEventSink a
later version of the feature.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added java/javax/ws/rs/sse/SseEventSource.java.  Lets you read
InboundSseEvents.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;commit-f1b7167-date---thu-sep-3-144156-2015--0400&quot;&gt;commit f1b7167 Date:   Thu Sep 3 14:41:56 2015 -0400&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Remove onWritePossible() from Response.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;commit-e997a32-date---thu-sep-3-143800-2015--0400&quot;&gt;commit e997a32 Date:   Thu Sep 3 14:38:00 2015 -0400&lt;/h3&gt;

&lt;p&gt;This commit added some experimental work for the use of non-blocking IO
in the JAX-RS spec.  There are helpful examples in
jaxrs/examples/nio/FileResourceClient.java and
jaxrs/examples/nio/FileResource.java.&lt;/p&gt;

&lt;p&gt;This commit introduced the following classes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;javax/ws/rs/client/NioInvoker.java&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;javax/ws/rs/core/NioCompletionHandler.java&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;javax/ws/rs/core/NioErrorHandler.java&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;javax/ws/rs/core/NioInputStream.java&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;javax/ws/rs/core/NioOutputStream.java&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;javax/ws/rs/core/NioReaderHandler.java&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;javax/ws/rs/core/NioWriterHandler.java&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And modified the following classes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;javax/ws/rs/core/Request.java and javax/ws/rs/core/Response.java
— Add entity methods that take the Nio*Handler classes above.
For Response, also add an onWritePossible() method that takes the
NioWriterHandler.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;javax/ws/rs/client/Invocation.java — Return the NioInvoker from
Invocation.nio().&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since this is one of the biggest new features in JAX-RS 2.1, I’ll
discuss it in its final form later.  Note that the above classes are all
still present in the API as of today.&lt;/p&gt;

&lt;h3 id=&quot;commit-dea3922-date---wed-aug-26-102626-2015--0400&quot;&gt;commit dea3922 Date:   Wed Aug 26 10:26:26 2015 -0400&lt;/h3&gt;

&lt;p&gt;The first iteration of the RxInvoker proposal.  This commit added the
following classes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;javax/ws/rs/client/CompletionStageRxInvoker.java&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;javax/ws/rs/client/RxInvoker.java&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And introduced changes to the following classes&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;javax/ws/rs/client/Invocation.java&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A helpful test is at javax/ws/rs/core/RxClientTest.java.&lt;/p&gt;

&lt;p&gt;Since this is one of the biggest new features in JAX-RS 2.1, I’ll
discuss it in its final form later.  Note that the above classes are all
still present in the API as of today.&lt;/p&gt;

&lt;h3 id=&quot;commit-77464a5-date---wed-feb-18-164144-2015-0100&quot;&gt;commit 77464a5 Date:   Wed Feb 18 16:41:44 2015 +0100&lt;/h3&gt;

&lt;p&gt;Remove the LaTeX sources to a separate repo.
git://java.net/jax-rs-spec~spec&lt;/p&gt;

&lt;h3 id=&quot;commit-0dbabe25-date---wed-feb-4-132831-2015--0500&quot;&gt;commit 0dbabe25 Date:   Wed Feb 4 13:28:31 2015 -0500&lt;/h3&gt;

&lt;p&gt;Spec prose document section 3.2 specifies how Java language fields and
JavaBean properties of Resource classes are injected with values from
the incoming request, all of which are coming over HTTP and are
therefore just plain strings.  That section includes a list that
describes the types of valid values to which those strings can be
converted, let’s call them destinations for discussion.  This commit
added List&lt;T&gt;, Set&lt;T&gt;, and SortedSet&lt;T&gt; to set of possible destinations,
where T meets at least one of the following requirements.&lt;/T&gt;&lt;/T&gt;&lt;/T&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;T has a ParamConverter&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;T has a public constructor that takes a single String.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;T has a public static valueOf() method that takes a String and returns
an instance of T.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The commit also tightened up what happens when a WebApplicationException
is thrown during the conversion process.&lt;/p&gt;</content><author><name></name></author><summary type="html">In preparation for my DevNexus talk on Thursday I reviewed the commit log for the JAX-RS API for all the commits in the 2.1 cycle, to be sure I didn’t miss anything. There are basically two new big ticket features in JAX-RS 2.1.</summary></entry><entry><title type="html">DevNexus 2017 Picks</title><link href="/blog/2017/02/21/devnexus-2017-picks.html" rel="alternate" type="text/html" title="DevNexus 2017 Picks" /><published>2017-02-21T11:15:00-05:00</published><updated>2017-02-21T11:15:00-05:00</updated><id>/blog/2017/02/21/devnexus-2017-picks</id><content type="html" xml:base="/blog/2017/02/21/devnexus-2017-picks.html">&lt;p&gt;I am blessed with the opportunity to speak
at &lt;a href=&quot;http://devnexus.com/&quot;&gt;DevNexus&lt;/a&gt; again this year, after
having spoken there
in &lt;a href=&quot;http://purl.oclc.org/NET/edburns/speaking-engagements/&quot;&gt;in
2014 and 2015&lt;/a&gt;.  Pratik, Vincent, Gunnar and the
whole &lt;a href=&quot;http://www.ajug.org/&quot;&gt;Atlanta JUG&lt;/a&gt; do a great job
putting on this very community focused show.  It is the largest
developer event in the southeastern U.S., an area of the country that
vitally needs more such events.  There are so many great session from so
many great speakers, though.  You really can't go wrong with any path.
Here are my picks for sessions I plan to attend.&lt;/p&gt;

&lt;h3&gt;Wednesday &amp;mdash; Workshop Day&lt;/h3&gt;

&lt;ul&gt;
  
  &lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://devnexus.com/s/devnexus2017/presentations/15529&quot;&gt;Building Reactive Applications&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;A full day workshop with the legendary Venkat Subramaniam?  Yes
  please.  Venkat's presentation skills are legendary and his humble
  delivery creates a learning environment that is sure to enrich your
  career.  It's probably booked out, though it doesn't say so on the
  conference site.&lt;/p&gt;

  &lt;/li&gt;
  
&lt;/ul&gt;

&lt;h3&gt;Thursday &amp;mdash; Conference Day One&lt;/h3&gt;

	&lt;ul&gt;

	  &lt;li&gt;&lt;p&gt;09:15 Sidney Marcus Auditorium &lt;a href=&quot;http://devnexus.com/s/devnexus2017/presentations/19975&quot;&gt;Don't
	        walk away from Complexity, Run (Keynote)&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;Sticking with the Venkat theme, this is the keynote, so
            obviously I'll be attending.  The theme of &quot;complexity as
            bugbear&quot; is an old saw, but Venkat is sure to offer a fresh
            take on it.&lt;/p&gt;
            
	  &lt;/li&gt;

	  &lt;li&gt;&lt;p&gt;10:30 A302 &lt;a href=&quot;http://devnexus.com/s/devnexus2017/presentations/17348&quot;&gt;Building a private CI/CD pipeline with Java and Docker in the Cloud&lt;/a&gt;
	    &lt;/p&gt;

            &lt;p&gt;In the spirit of DevOps, we all need to try to be as full
            stack as
            possible.  &lt;a href=&quot;https://twitter.com/jbaruch&quot;&gt;Baruch
            Sadogursky&lt;/a&gt; knows his stuff, in this space in
            particular.  We use Artifactory at Oracle.  The 75 minute
            length of the DevNexus session should allow him to stretch
            out and really teach some skills.&lt;/p&gt;

          &lt;/li&gt;

          &lt;li&gt;&lt;p&gt;13:00 A316 &lt;a href=&quot;http://devnexus.com/s/devnexus2017/presentations/17137&quot;&gt;Tuning with Poor Tools and Cheap Drink&lt;/a&gt;
	    &lt;/p&gt;

          &lt;p&gt;Kirk is one of the leading experts in the world on Java
          performance tuning.  We are lucky to have him at DevNexus.&lt;/p&gt;

          &lt;/li&gt;
          
          &lt;li&gt;&lt;p&gt;14:30 A411 &lt;a href=&quot;http://devnexus.com/s/devnexus2017/presentations/17426&quot;&gt;Reactive Thinking in Java&lt;/a&gt;
	    &lt;/p&gt;

            &lt;p&gt;Yakov Fain is a provocative and thoughtful speaker, I
            look forward to his thoughts on this hot topic.&lt;/p&gt;

          &lt;/li&gt;

	  &lt;li&gt;&lt;p&gt;16:00 My session is in the next slot, in room A311, but if I
	  wasn't speaking then, I'd go
	  see &lt;a href=&quot;http://devnexus.com/s/devnexus2017/presentations/19469&quot;&gt;The
	  Art of Java Performance&lt;/a&gt;
	  from &lt;a href=&quot;https://twitter.com/JoroRoss&quot;&gt;Jonathan Ross&lt;/a&gt;.
	  &lt;/p&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;p&gt;17:30
	  A302 &lt;a href=&quot;http://devnexus.com/s/devnexus2017/presentations/17356&quot;&gt;Docker
	        tips and tricks for Java Developers&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;Docker is a big enough of a pain in the rear to make a
            &quot;tips and tricks&quot; session well worthwhile.  I haven't seen a
            talk from Mr. Tsang before, but his credentials speak for
            themselves.  Also, it may be nice to find kindred spirits
            who are also leverage Docker and smooth out its sharp
            edges.&lt;/p&gt;


          &lt;/li&gt;

          &lt;/ul&gt;

        &lt;h3&gt;Friday &amp;mdash; Conference Day Two&lt;/h3&gt;

        &lt;ul&gt;

	  &lt;li&gt;&lt;p&gt;10:30 A412 &lt;a href=&quot;http://devnexus.com/s/devnexus2017/presentations/17302&quot;&gt;Why does Yesterday's Best Practice Become Tomorrow's Antipattern?&lt;/a&gt;
	    &lt;/p&gt;


            &lt;p&gt;Neal Ford is another conference legend and former
            moderator of the &lt;a href=&quot;/blog/2014/06/22/web-framework-smackdown-2014-edition.html&quot;&gt;2014 edition of the web
            framework smackdown&lt;/a&gt;.  As an author whose best practices
            have been labeled as anti-patterns, some of which by
            Mr. Ford himself, I look forward to his answer.&lt;/p&gt;

          &lt;/li&gt;


	  &lt;li&gt;&lt;p&gt;13:00
	  A403 &lt;a href=&quot;http://devnexus.com/s/devnexus2017/presentations/17318&quot;&gt;Introduction
	        to Apache Kafka - The Next Gen Event Streaming System &lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;James is an excellent and engaging speaker.  He's managed
            to become an expert on a wide range of highly relevant
            technologies over the years, no mean feat in itself.  Let's
            see what he has to say about the latest hotness.&lt;/p&gt;

          &lt;/li&gt;

          &lt;li&gt;&lt;p&gt;14:30
          A305 &lt;a href=&quot;http://devnexus.com/s/devnexus2017/presentations/17309&quot;&gt;Successful
                JavaEE DevOps In The Cloud&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;This ambitious session features
            a &lt;a href=&quot;http://devnexus.illinoisjug.org/&quot;&gt;pre-configured
            VM&lt;/a&gt; and will show you how to use it.  I've given this
            sort of session many times before and it's hard to pull
            off.  I like the topic and I want to see how they do it.&lt;/p&gt;

          &lt;/li&gt;

	  &lt;li&gt;&lt;p&gt;16:00 A405 &lt;a href=&quot;http://devnexus.com/s/devnexus2017/presentations/17164&quot;&gt;MVC
	        1.0 - Now Even Better!&lt;/a&gt;&lt;/p&gt;

            &lt;p&gt;Oracle's decision to drop MVC from the Java EE 8
            specification was met with grumbles by some and cheers by
            others.  I look forward to seeing what the new spec lead
            has to say about it.&lt;/p&gt;

          &lt;/li&gt;


	&lt;/ul&gt;</content><author><name></name></author><summary type="html">I am blessed with the opportunity to speak at DevNexus again this year, after having spoken there in in 2014 and 2015. Pratik, Vincent, Gunnar and the whole Atlanta JUG do a great job putting on this very community focused show. It is the largest developer event in the southeastern U.S., an area of the country that vitally needs more such events. There are so many great session from so many great speakers, though. You really can't go wrong with any path. Here are my picks for sessions I plan to attend.</summary></entry><entry><title type="html">Welcome to my blog reboot</title><link href="/blog/2017/02/21/welcome-to-my-blog-reboot.html" rel="alternate" type="text/html" title="Welcome to my blog reboot" /><published>2017-02-21T08:15:00-05:00</published><updated>2017-02-21T08:15:00-05:00</updated><id>/blog/2017/02/21/welcome-to-my-blog-reboot</id><content type="html" xml:base="/blog/2017/02/21/welcome-to-my-blog-reboot.html">&lt;p&gt;After a two year hiatus, I intend to blog again.  I'm not sure how
popular blogs are any more, though.  Many thanks
to &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; for their excellent and
polished tool.&lt;/p&gt;</content><author><name></name></author><summary type="html">After a two year hiatus, I intend to blog again. I'm not sure how popular blogs are any more, though. Many thanks to Jekyll for their excellent and polished tool.</summary></entry><entry><title type="html">Webinar Notes: Typesafe William Hill Omnia Patrick Di Loreto Blog</title><link href="/blog/2015/07/01/webinar-notes-typesafe-william-hill-omnia-patrick-di-loreto.html" rel="alternate" type="text/html" title="Webinar Notes: Typesafe William Hill Omnia Patrick Di Loreto Blog" /><published>2015-07-01T08:28:00-04:00</published><updated>2015-07-01T08:28:00-04:00</updated><id>/blog/2015/07/01/webinar-notes-typesafe-william-hill-omnia-patrick-di-loreto</id><content type="html" xml:base="/blog/2015/07/01/webinar-notes-typesafe-william-hill-omnia-patrick-di-loreto.html">&lt;div class=&quot;jive-rendered-content&quot;&gt;&lt;h2&gt;Webinar Notes: Typesafe William Hill Omnia Patrick Di Loreto&lt;/h2&gt;&lt;p&gt;My friend &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/TheOTown&quot; rel=&quot;nofollow&quot;&gt;Oliver White&lt;/a&gt; is doing his usual bang-up job in his new gig at &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/typesafe&quot; rel=&quot;nofollow&quot;&gt;TypeSafe&lt;/a&gt;. One aspect is the humble webinar. Here are my notes for one that caught my eye, &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://www.typesafe.com/blog/using-spark-kafka-cassandra-and-akka-on-mesos-for-real-time-personalization&quot; rel=&quot;nofollow&quot;&gt;Using Spark, Kafka, Cassandra and Akka on Mesos for Real-Time Personalization&lt;/a&gt;. This is a very dense but well delivered presentation by &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/patricknoir&quot; rel=&quot;nofollow&quot;&gt;Patrick Di Loreto&lt;/a&gt; who helped develop a new platform for his employer, the online gambling service, William Hill.&lt;/p&gt;&lt;p&gt;Morally,
 I am sensitive to the real damage done to real lives and families that 
is caused by gambling, so I will include a link to an organization that 
offers help: &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.calpg.org/&quot; rel=&quot;nofollow&quot;&gt;1-800-GAMBLER&lt;/a&gt;.
 That said, this is just another instance of the ancient tradition of 
technology development being driven by something that traditionally is 
seen as vice. (For a humorous, NSFW and prophetic Onion article, search 
google for “theonion internet andreessen viewing device”. I’m old enough
 to have first read that on an actual physical newspaper!)&lt;/p&gt;&lt;p&gt;Now, on
 to the raw notes. YMMV of course, but if nothing else this will help 
you overcome the annoying problem of the slide advancing not being 
    synched to the audio.&lt;/p&gt;

  &lt;pre&gt;

Context: presentation by Patrick Di Loreto (@patricknoir) R&amp;amp;D
Engineering lead for William Hill online betting.

The presenation was
done for Typesafe as a Webinar on 14 June 2015. They have a new betting
platform they call Omnia.

- Need to handle massive amount of data

- Based on Lambda Architecture from Nathan Marz &amp;lt;http://lambda-architecture.net/&amp;gt;.

- Omnia is a platform that includes four different components

* Chronos - Data Source
* Fates - Batch Layer
* NeoCortex - Speed layer
* Hermes - Serving layer

03:47 definition of Lambda Architecture “All the data must come from a unique
place (data source) They separate access to the data source into two
different modes based on timeliness requirements.

NeoCortex (Speed
Layer) is to access the data in real time, but without some consistency
and correctness guarantees. Optimized for speed. It has only recent
data. Fates (Batch Layer) is to access the data not in real time, but
with more (complete?) consistency.

05:00 Reactive Manifesto slide

06:15 importance of elasticty for them

06:47 Chronos Data Source: “It’s nothing else than a container for
active streams” “Chronos is a sort of middleware. It can talk to the
outside world and bring the data into their system.” Organize the data
into a stream of observable events, called “incidents”. Can have
different viewpoints for different concerns

* Internal (stuff they need to implement the system itself)

* Product centric (which of the WH products such as “sports” “tweets” “news”.

* External (“social media sharing”)

* Customer centric

  10:12 Chronos streams connect to the external system and bring it into
  Chronos Adapter: Understand all the possible protocols that other systems
  implement. Connect to the other system.

Converter: Transform the incoming data into their internal format
Persistence Manager: Make the converted data durable.

11:22 Chronos clustering Benefits from the Akka Framework. Distributes
the streams across the cluster. When failover happens, stream connection
to outside source is migrated to another node via Akka. Keeps
referential transparency. Each stream is an Actor which “supervises” its
children: adapter, converter, persistence manager.

12:41 Supervising (Slides diverged from audio) (Slide 12) Supervision is
key to allowing “error kernel
pattern”. &amp;lt;http://danielwestheide.com/blog/2013/03/20/the-neophytes-guide-to-scala-part-15-dealing-with-failure-in-actor-systems.html&amp;gt;
Basically, it is just a simple guideline you should always try to
follow, stating that if an actor carries important internal state, then
it should delegate dangerous tasks to child actors, so as to prevent the
state-carrying actor from crashing. Sometimes, it may make sense to
spawn a new child actor for each such task, but that

  &lt;/pre&gt;


&lt;/div&gt;</content><author><name></name></author><summary type="html">Webinar Notes: Typesafe William Hill Omnia Patrick Di LoretoMy friend Oliver White is doing his usual bang-up job in his new gig at TypeSafe. One aspect is the humble webinar. Here are my notes for one that caught my eye, Using Spark, Kafka, Cassandra and Akka on Mesos for Real-Time Personalization. This is a very dense but well delivered presentation by Patrick Di Loreto who helped develop a new platform for his employer, the online gambling service, William Hill.Morally, I am sensitive to the real damage done to real lives and families that is caused by gambling, so I will include a link to an organization that offers help: 1-800-GAMBLER. That said, this is just another instance of the ancient tradition of technology development being driven by something that traditionally is seen as vice. (For a humorous, NSFW and prophetic Onion article, search google for “theonion internet andreessen viewing device”. I’m old enough to have first read that on an actual physical newspaper!)Now, on to the raw notes. YMMV of course, but if nothing else this will help you overcome the annoying problem of the slide advancing not being synched to the audio.</summary></entry><entry><title type="html">GeekOut 2015 Summary Blog</title><link href="/blog/2015/06/16/geekout-2015-summary.html" rel="alternate" type="text/html" title="GeekOut 2015 Summary Blog" /><published>2015-06-16T09:28:00-04:00</published><updated>2015-06-16T09:28:00-04:00</updated><id>/blog/2015/06/16/geekout-2015-summary</id><content type="html" xml:base="/blog/2015/06/16/geekout-2015-summary.html">&lt;div class=&quot;jive-rendered-content&quot;&gt;&lt;h1&gt;GeekOut 2015 Summary&lt;/h1&gt;&lt;p&gt;I
 last had the pleasure of visiting the lovely Baltic city of Tallinn in 
2012, when I presented JSF 2.2 and the Rockstar talk at GeekOut 2012. 
Now that I've got something new (for me anyway) to talk about I made the
 cut and was invited back to present Servlet 4.0 at &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://2015.geekout.ee/&quot; rel=&quot;nofollow&quot;&gt;GeekOut 2015&lt;/a&gt;.
 Attendence was capped at 400, giving this conference a very exclusive 
feel. Indeed, 99% of those that registered for the conference actually 
did attend. This was the 5th installment of the GeekOut conference, 
hosted by &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://zeroturnaround.com/software/xrebel/&quot; rel=&quot;nofollow&quot;&gt;ZeroTurnaround&lt;/a&gt;.
 This was the first time the conference had two tracks, so my report 
here only covers the sessions I actually attended. All of the sessions 
were video recorded, and I expect the sessions will be made available 
soon.&lt;/p&gt;&lt;h2&gt;Day One&lt;/h2&gt;&lt;p&gt;Day one started with back-to-back plenary sessions offering two different perspectives on the &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/search?q=%23java20&amp;amp;src=typd&amp;amp;customTheme=otn&quot; rel=&quot;nofollow&quot;&gt;#java20&lt;/a&gt; theme. &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/steveonjava&quot; rel=&quot;nofollow&quot;&gt;Stephen Chin&lt;/a&gt;
 gave a historically rich but technically light session featuring lots 
of freshly recorded video clips with Java luminaries. Of course there 
was ample content from James Gosling, who I would like to congratulate 
for winning the 2015 &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.ieee.org/about/awards/bios/vonneumann_recipients.html#sect1&quot; rel=&quot;nofollow&quot;&gt;IEEE John von Neumann Medal&lt;/a&gt;.
 This puts James in the company of such titans as Leslie Lamport, Donald
 Knuth, Ivan Sutherland, and Fred Brooks. I was happy to see that 
Stephen dove deeper and offered the perspectives of John Rose and 
Georges Saab on more fundamental aspects of the history of Java. &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/mjpt777&quot; rel=&quot;nofollow&quot;&gt;Martin Thompson&lt;/a&gt;
 followed Steven with a very complimentary session. The session was so 
complimentary I'd almost say they coordinated. Martin's session gave his
 personal perspective on Java over the years, with some very interesting
 stories from his work on making Java perform well. I liked his 
perspective on the causes and challenges of bloat in a long-lived 
software ecosystem. Another very interesting perspective was the extent 
to which high frequency trading drives advances in performance (in Java 
and in the entire industry). Martin's talk piqued my desire for a 
#java20 talk about all the companies that have been spawned directly or 
indirectly by the Java ecosystem. I'm thinking Interface21, Tangosol, 
JBoss, NoFluffJustStuff, ZeroTurnaround, Atlassian, Parleys and there 
are many others. Hey, I'm pretty sure there's an interesting talk in 
there somewhere.&lt;/p&gt;&lt;p&gt;After the plenary sessions, we broke out into the
 two tracks, starting with my session on Servlet 4.0 and a session on 
Cassandra. My session was quite well attended, and it went pretty 
smoothly. We'll see how the feedback shows up, however! After my 
session, I went down to see &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/myfear&quot; rel=&quot;nofollow&quot;&gt;Markus Eisele&lt;/a&gt;
 talk about Apache Camel. I hadn't followed the progress in the Camel 
community and I'm happy to see it is doing well since. Also nice to see 
my old pal &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/ghohpe&quot; rel=&quot;nofollow&quot;&gt;Gregor Hohpe&lt;/a&gt; represented virtually, as his book is represented in spirit in Camel itself.&lt;/p&gt;&lt;p&gt;I was very keen to see the Vaadin talk from &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.twitter.com/peter_lehto&quot; rel=&quot;nofollow&quot;&gt;Peter Lehto&lt;/a&gt;.
 I had long been perplexed at Vaadin's ability to decouple itself from 
GWT, particularly as GWT's popularity has dwindled. This talk, at last, 
promised to lay bare the secret at the heart of Vaadin: its runtime is 
dependent on GWT. I was not disappointed, but I was also very pleasantly
 surprised. Mr. Lehto directly addressed the question of the relevance 
of server side UI frameworks, including Vaadin (and JSF, though he 
didn't name it specifically) in an HTML5 JavaScript framework world. He 
did so by pointing out the importance of abstraction, which I've long 
been pointing out when presenting on JSF. In the case of Vaadin and JSF,
 their core value add is the authoring experience. With Vaadin, it's 
Java programmers who want to treat the world like Swing. With JSF it's 
&quot;page developers&quot; who want to treat the world like some form of 
VisualBasic environment. For Vaadin, its existing abstraction allows 
their underlying runtime to leverage W3C Web Components (or the polymer 
implementation of the same) for some Vaadin components while relying on 
GWT for others. Peter put a strong stake in the ground and predicted 
that W3C Web Components are the future for web development. I don't 
disagree, but JSF is well positioned to leverage W3C Web Components 
because it fits in nicely with the JSF abstraction.&lt;/p&gt;&lt;h2&gt;Day Two&lt;/h2&gt;&lt;p&gt;Day two started out with &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/asz&quot; rel=&quot;nofollow&quot;&gt;Attila Szegedi's&lt;/a&gt;
 highly technical Rhino talk. This was the first talk of the day, after 
the party night, so it was a little lightly attended. However, those 
that made it there were rewarded with an in-depth understanding of the 
rationale for some performance related design decisions in the 
implementation of Nashorn.&lt;/p&gt;&lt;p&gt;The 10:30 slot was another effectively plenary session, but out in the demo area. Stephen Chin's highly effective &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://nighthacking.com/&quot; rel=&quot;nofollow&quot;&gt;NIGHTHACKING&lt;/a&gt; brand came to GeekOut with a panel discussion on the #java20 theme. The video is &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://nighthacking.com/20-years-of-java-panel/&quot; rel=&quot;nofollow&quot;&gt;on the NIGHTHACKING website&lt;/a&gt;. This was a lot of fun, and I got to put my &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://news.cnet.com/Netscape-sharpens-Javagator-plans/2100-1001_3-206700.html&quot; rel=&quot;nofollow&quot;&gt;Javagator&lt;/a&gt; old-timer test out there. I also had the pleasure of a brief chat with Stephen regarding &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://nighthacking.com/ed-burns-on-jsf-2-3-and-servlet-4-0/&quot; rel=&quot;nofollow&quot;&gt;JSF 2.3 and Servlet 4.0&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;I was really looking forward to &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.twitter.com/tnurkiewicz&quot; rel=&quot;nofollow&quot;&gt;Tomasz Nurkiewicz's&lt;/a&gt; session about CompletableFuture, particularly because of its use in the &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://openjdk.java.net/jeps/110&quot; rel=&quot;nofollow&quot;&gt;Java SE9 HTTP/2 client&lt;/a&gt;.
 Thomas managed to pack a whole lot into a short, well constructed, code
 powered session. It's not easy to explain the differences between 
thenApply(), thenCombine(), thenCompose() and many other methods in the 
API, but Tomasz succeeded. He even surfaced an important naming 
inconsistency between the CompletableFuture API and the 
java.util.Optional API: thenCompose() == flatMap(). For more on this 
topic from Tomasz, check out his blog entry &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.nurkiewicz.com/2013/05/java-8-definitive-guide-to.html&quot; rel=&quot;nofollow&quot;&gt;The Definitive Guide to Completable Future&lt;/a&gt;.
 Personally, I think it's a bit bold to give a single blog entry such a 
lofty title, but you can't argue that it does indeed cover the topic 
very well. I meant to ask Tomasz if his code samples from the talk were 
taken from an upcoming book. Tomasz, if you happen to see this little 
blog entry, please plug the book if there is one.&lt;/p&gt;&lt;p&gt;I had high hopes for the next talk, &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.twitter.com/gvsmirnov&quot; rel=&quot;nofollow&quot;&gt;Gleb Smirnov's&lt;/a&gt;
 concurrency talk. It was probably a great talk, but sadly this is when 
my jetlag hit hard and I was struggling to keep up. I'll look for the 
video!&lt;/p&gt;&lt;p&gt;I took a pass for the 15:00 slot due to the afore mentioned jetlag and opted to save my energy for one final session, &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.twitter.com/ags313&quot; rel=&quot;nofollow&quot;&gt;Andrzej Grzesik's&lt;/a&gt;
 Go. I'd taken a quick look at Go before the session, so I was in a good
 position to enjoy it. This session made no excuses about having nothing
 to do with Java and instead just tried to give a quick tour of the Go 
language and programming environment, with a view towards lowering the 
barriers to entry to give it a try. Go succeeds because it rules several
 fundamental things as simply out of scope. There is no dynamic linking.
 There is no UI. There is no API to the threading model. There is no 
inheritance. I'm glad Go is out there because sometimes you don't need 
that stuff. For what it's worth, here's a nice post on Go &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://spf13.com/post/is-go-object-oriented/&quot; rel=&quot;nofollow&quot;&gt;from the Docker guy&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Finally, there were some brief and tasteful closing remarks from ZeroTurnaround founders and my good friends &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/ekabanov&quot; rel=&quot;nofollow&quot;&gt;Jevgeni Kabanov&lt;/a&gt; and &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/toomasr&quot; rel=&quot;nofollow&quot;&gt;Toomas Römer&lt;/a&gt;. I'm glad to see these guys doing well.&lt;/p&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">GeekOut 2015 SummaryI last had the pleasure of visiting the lovely Baltic city of Tallinn in 2012, when I presented JSF 2.2 and the Rockstar talk at GeekOut 2012. Now that I've got something new (for me anyway) to talk about I made the cut and was invited back to present Servlet 4.0 at GeekOut 2015. Attendence was capped at 400, giving this conference a very exclusive feel. Indeed, 99% of those that registered for the conference actually did attend. This was the 5th installment of the GeekOut conference, hosted by ZeroTurnaround. This was the first time the conference had two tracks, so my report here only covers the sessions I actually attended. All of the sessions were video recorded, and I expect the sessions will be made available soon.Day OneDay one started with back-to-back plenary sessions offering two different perspectives on the #java20 theme. Stephen Chin gave a historically rich but technically light session featuring lots of freshly recorded video clips with Java luminaries. Of course there was ample content from James Gosling, who I would like to congratulate for winning the 2015 IEEE John von Neumann Medal. This puts James in the company of such titans as Leslie Lamport, Donald Knuth, Ivan Sutherland, and Fred Brooks. I was happy to see that Stephen dove deeper and offered the perspectives of John Rose and Georges Saab on more fundamental aspects of the history of Java. Martin Thompson followed Steven with a very complimentary session. The session was so complimentary I'd almost say they coordinated. Martin's session gave his personal perspective on Java over the years, with some very interesting stories from his work on making Java perform well. I liked his perspective on the causes and challenges of bloat in a long-lived software ecosystem. Another very interesting perspective was the extent to which high frequency trading drives advances in performance (in Java and in the entire industry). Martin's talk piqued my desire for a #java20 talk about all the companies that have been spawned directly or indirectly by the Java ecosystem. I'm thinking Interface21, Tangosol, JBoss, NoFluffJustStuff, ZeroTurnaround, Atlassian, Parleys and there are many others. Hey, I'm pretty sure there's an interesting talk in there somewhere.After the plenary sessions, we broke out into the two tracks, starting with my session on Servlet 4.0 and a session on Cassandra. My session was quite well attended, and it went pretty smoothly. We'll see how the feedback shows up, however! After my session, I went down to see Markus Eisele talk about Apache Camel. I hadn't followed the progress in the Camel community and I'm happy to see it is doing well since. Also nice to see my old pal Gregor Hohpe represented virtually, as his book is represented in spirit in Camel itself.I was very keen to see the Vaadin talk from Peter Lehto. I had long been perplexed at Vaadin's ability to decouple itself from GWT, particularly as GWT's popularity has dwindled. This talk, at last, promised to lay bare the secret at the heart of Vaadin: its runtime is dependent on GWT. I was not disappointed, but I was also very pleasantly surprised. Mr. Lehto directly addressed the question of the relevance of server side UI frameworks, including Vaadin (and JSF, though he didn't name it specifically) in an HTML5 JavaScript framework world. He did so by pointing out the importance of abstraction, which I've long been pointing out when presenting on JSF. In the case of Vaadin and JSF, their core value add is the authoring experience. With Vaadin, it's Java programmers who want to treat the world like Swing. With JSF it's &quot;page developers&quot; who want to treat the world like some form of VisualBasic environment. For Vaadin, its existing abstraction allows their underlying runtime to leverage W3C Web Components (or the polymer implementation of the same) for some Vaadin components while relying on GWT for others. Peter put a strong stake in the ground and predicted that W3C Web Components are the future for web development. I don't disagree, but JSF is well positioned to leverage W3C Web Components because it fits in nicely with the JSF abstraction.Day TwoDay two started out with Attila Szegedi's highly technical Rhino talk. This was the first talk of the day, after the party night, so it was a little lightly attended. However, those that made it there were rewarded with an in-depth understanding of the rationale for some performance related design decisions in the implementation of Nashorn.The 10:30 slot was another effectively plenary session, but out in the demo area. Stephen Chin's highly effective NIGHTHACKING brand came to GeekOut with a panel discussion on the #java20 theme. The video is on the NIGHTHACKING website. This was a lot of fun, and I got to put my Javagator old-timer test out there. I also had the pleasure of a brief chat with Stephen regarding JSF 2.3 and Servlet 4.0.I was really looking forward to Tomasz Nurkiewicz's session about CompletableFuture, particularly because of its use in the Java SE9 HTTP/2 client. Thomas managed to pack a whole lot into a short, well constructed, code powered session. It's not easy to explain the differences between thenApply(), thenCombine(), thenCompose() and many other methods in the API, but Tomasz succeeded. He even surfaced an important naming inconsistency between the CompletableFuture API and the java.util.Optional API: thenCompose() == flatMap(). For more on this topic from Tomasz, check out his blog entry The Definitive Guide to Completable Future. Personally, I think it's a bit bold to give a single blog entry such a lofty title, but you can't argue that it does indeed cover the topic very well. I meant to ask Tomasz if his code samples from the talk were taken from an upcoming book. Tomasz, if you happen to see this little blog entry, please plug the book if there is one.I had high hopes for the next talk, Gleb Smirnov's concurrency talk. It was probably a great talk, but sadly this is when my jetlag hit hard and I was struggling to keep up. I'll look for the video!I took a pass for the 15:00 slot due to the afore mentioned jetlag and opted to save my energy for one final session, Andrzej Grzesik's Go. I'd taken a quick look at Go before the session, so I was in a good position to enjoy it. This session made no excuses about having nothing to do with Java and instead just tried to give a quick tour of the Go language and programming environment, with a view towards lowering the barriers to entry to give it a try. Go succeeds because it rules several fundamental things as simply out of scope. There is no dynamic linking. There is no UI. There is no API to the threading model. There is no inheritance. I'm glad Go is out there because sometimes you don't need that stuff. For what it's worth, here's a nice post on Go from the Docker guy.Finally, there were some brief and tasteful closing remarks from ZeroTurnaround founders and my good friends Jevgeni Kabanov and Toomas Römer. I'm glad to see these guys doing well.</summary></entry><entry><title type="html">Recent Ripple of JSF Extensions Blog</title><link href="/blog/2015/06/01/recent-ripple-jsf-extensions.html" rel="alternate" type="text/html" title="Recent Ripple of JSF Extensions Blog" /><published>2015-06-01T10:30:00-04:00</published><updated>2015-06-01T10:30:00-04:00</updated><id>/blog/2015/06/01/recent-ripple-jsf-extensions</id><content type="html" xml:base="/blog/2015/06/01/recent-ripple-jsf-extensions.html">&lt;div class=&quot;jive-rendered-content&quot;&gt;&lt;h1&gt;Recent Ripple of JSF Extensions&lt;/h1&gt;&amp;nbsp; &lt;p&gt;My colleague &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://www.java.net/blogs/mriem&quot; rel=&quot;nofollow&quot;&gt;Manfred Riem&lt;/a&gt; tipped me off to a new framework built on JSF, &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.butterfaces.org/&quot; rel=&quot;nofollow&quot;&gt;ButterFaces&lt;/a&gt;.&amp;nbsp;
 This whimsical name started an amusing Twitter thread, but also, and 
much more importantly brought several other new JSF extensions to light.
 This is the sort of thing that I used to look to Kito Mann's &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.jsfcentral.com/products/frameworks/&quot; rel=&quot;nofollow&quot;&gt;JSF Central Frameworks Page&lt;/a&gt;
 for, but it seems that needs an update.&amp;nbsp; So, in addition to 
ButterFaces, here are several other JSF extensions that are definitely 
worth a look.&lt;/p&gt;&amp;nbsp; &lt;p&gt;&lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.bootsfaces.net/&quot; rel=&quot;nofollow&quot;&gt;BootsFaces&lt;/a&gt; focuses on Twitter Bootstrap 3 and jQuery UI.&lt;/p&gt;&amp;nbsp; &lt;p&gt;&lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.materialprime.com/&quot; rel=&quot;nofollow&quot;&gt;Material Prime&lt;/a&gt; is a PrimeFaces extension that lets you build web apps that conform to Google's &quot;Material&quot; design language.&lt;/p&gt;&amp;nbsp; &lt;p&gt;&lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.generjee.com/&quot; rel=&quot;nofollow&quot;&gt;Generjee&lt;/a&gt;
 is a Java EE application generator that outputs JSF+JavaEE 7+CDI 
code.&amp;nbsp; FWIW, I would be remiss if I didn't point out that &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://java.net/projects/javaee-spec/pages/JEE&quot; rel=&quot;nofollow&quot;&gt;there is nothing named JEE&lt;/a&gt;.&amp;nbsp; So, I suggest this project rename itself to generee.&amp;nbsp; I think that's snappier anyway.&lt;/p&gt;&amp;nbsp; &lt;p&gt;This
 recent flurry of activity shows two things.&amp;nbsp; First, the continuing
 vitality of the JSF ecosystem.&amp;nbsp; By now I think we all know that 
the ecosystem around the technology is just as important as the 
technology itself.&amp;nbsp; It's like this.&amp;nbsp; A technology has to be 
&quot;good enough&quot; to get the job done.&amp;nbsp; That's a given.&amp;nbsp; Heck, it 
could even be excellent technology.&amp;nbsp; But without an ecosystem 
around it, even the best technologies will not survive.&amp;nbsp; Second, 
there is still interest and value in server side state UI 
frameworks.&amp;nbsp; My recent work with HTTP/2 in Servlet 4 has shown me 
that such frameworks are very well positioned to take advantage of the 
optimizations in the HTTP/2 protocol, as well as other performance 
optimizations shown in &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/igrigorik&quot; rel=&quot;nofollow&quot;&gt;Ilya Grigorik's&lt;/a&gt; excellent &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://chimera.labs.oreilly.com/books/1230000000545&quot; rel=&quot;nofollow&quot;&gt;High Performance Browser Networking&lt;/a&gt;.&lt;/p&gt;&amp;nbsp; &lt;p&gt;So, check out these new frameworks and don't be afraid to question conventional wisdom.&lt;/p&gt; 
&lt;/div&gt;</content><author><name></name></author><summary type="html">Recent Ripple of JSF Extensions&amp;nbsp; My colleague Manfred Riem tipped me off to a new framework built on JSF, ButterFaces.&amp;nbsp; This whimsical name started an amusing Twitter thread, but also, and much more importantly brought several other new JSF extensions to light. This is the sort of thing that I used to look to Kito Mann's JSF Central Frameworks Page for, but it seems that needs an update.&amp;nbsp; So, in addition to ButterFaces, here are several other JSF extensions that are definitely worth a look.&amp;nbsp; BootsFaces focuses on Twitter Bootstrap 3 and jQuery UI.&amp;nbsp; Material Prime is a PrimeFaces extension that lets you build web apps that conform to Google's &quot;Material&quot; design language.&amp;nbsp; Generjee is a Java EE application generator that outputs JSF+JavaEE 7+CDI code.&amp;nbsp; FWIW, I would be remiss if I didn't point out that there is nothing named JEE.&amp;nbsp; So, I suggest this project rename itself to generee.&amp;nbsp; I think that's snappier anyway.&amp;nbsp; This recent flurry of activity shows two things.&amp;nbsp; First, the continuing vitality of the JSF ecosystem.&amp;nbsp; By now I think we all know that the ecosystem around the technology is just as important as the technology itself.&amp;nbsp; It's like this.&amp;nbsp; A technology has to be &quot;good enough&quot; to get the job done.&amp;nbsp; That's a given.&amp;nbsp; Heck, it could even be excellent technology.&amp;nbsp; But without an ecosystem around it, even the best technologies will not survive.&amp;nbsp; Second, there is still interest and value in server side state UI frameworks.&amp;nbsp; My recent work with HTTP/2 in Servlet 4 has shown me that such frameworks are very well positioned to take advantage of the optimizations in the HTTP/2 protocol, as well as other performance optimizations shown in Ilya Grigorik's excellent High Performance Browser Networking.&amp;nbsp; So, check out these new frameworks and don't be afraid to question conventional wisdom.</summary></entry><entry><title type="html">ConFESS 2015 Wrap Up Blog</title><link href="/blog/2015/05/18/confess-2015-wrap.html" rel="alternate" type="text/html" title="ConFESS 2015 Wrap Up Blog" /><published>2015-05-18T10:02:00-04:00</published><updated>2015-05-18T10:02:00-04:00</updated><id>/blog/2015/05/18/confess-2015-wrap</id><content type="html" xml:base="/blog/2015/05/18/confess-2015-wrap.html">&lt;div class=&quot;jive-rendered-content&quot;&gt;&lt;h1&gt;ConFESS 2015 Wrap Up&lt;/h1&gt;&lt;p&gt;Hard on the heels of &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://weblogs.java.net/blog/edburns/archive/2015/03/30/javaland-2015-wrap&quot; rel=&quot;nofollow&quot;&gt;JavaLand&lt;/a&gt; was &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://2015.con-fess.com/&quot; rel=&quot;nofollow&quot;&gt;ConFESS&lt;/a&gt;. This was the eighth installment of the conference that started life in 2008 as &lt;a class=&quot;&quot; href=&quot;https://community.oracle.com/blog/http%20]]%3E%3C%21[CDATA[%20s:/matthiaswessendorf.wordpress.com/2008/02/14/jsfdays-2008-in-vienna&quot;&gt;JSF Days&lt;/a&gt;,
 switching to the name &quot;ConFESS&quot; in 2011. The name stands for the 
&quot;Conference for Enterprise Software Solutions&quot;. Last year, ConFESS was 
held as a partnership with JavaLand in Brühl Germany. Neither party was 
satisfied with how that turned out and in 2015 ConFESS returned to its 
home in Vienna, where it will stay. It was a relatively small event, 
with just over 200 participants. It nicely filled out the venue, the C3 
event center in the 3rd district. In my opinion, its small size is a 
large asset. The ability to have the entire event schedule on two sides 
of a 4x5 inch card is very convenient.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://community.oracle.com/blog/20150415-confess-2015.jpg&quot;&gt;&lt;img __embedded_id=&quot;403&quot; src=&quot;20150518_files/20150415-confess-2015.html&quot; style=&quot;float: right;&quot; width=&quot;200&quot; height=&quot;150&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;My
 overall impression of the conference was very positive. There was a 
wide variety of talks from speakers I hadn't seen before on the 
conference circuit. There was a good breadth of coverage in diverse 
tracks ranging from agile/methods to Java EE to tools to client side 
technologies, and there was an excellent band on Tuesday night, &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.fsgcompany.com/&quot; rel=&quot;nofollow&quot;&gt;Florian Braun and FSG Company&lt;/a&gt;. There was also a Lego Mindstorms EV3 competition that got rave reviews, but I didn't attend that portion of the event.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://community.oracle.com/blog/20150414_confess-2015.jpg&quot;&gt;&lt;img __embedded_id=&quot;404&quot; src=&quot;20150518_files/20150414_confess-2015.html&quot; style=&quot;float: left;&quot; width=&quot;200&quot; height=&quot;150&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The full set of abstracts from the conference are available at the &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://www.regonline.com/builder/site/tab2.aspx?EventID=1619724&quot; rel=&quot;nofollow&quot;&gt;regonline site for the event&lt;/a&gt;.
 You can use that site to learn more about the sessions for which I will
 give my brief impressions in the remainder of this blog entry.&lt;/p&gt;&lt;h3&gt;Tuesday&lt;/h3&gt;&lt;p&gt;The Tuesday Keynote was from Oracle Labs's &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/thomaswue&quot; rel=&quot;nofollow&quot;&gt;Thomas Wuerthinger&lt;/a&gt;. Thomas presented his exciting work on the &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.oracle.com/technetwork/oracle-labs/program-languages/overview/index-2301583.html&quot; rel=&quot;nofollow&quot;&gt;Graal VM&lt;/a&gt;. First off, I'm glad to see that Oracle has continued Sun's tradition of funding long-term research in the spirit of &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://en.wikipedia.org/wiki/Sun_Microsystems_Laboratories&quot; rel=&quot;nofollow&quot;&gt;Sun Labs&lt;/a&gt;,
 founded by computing pioneer Ivan Sutherland (yep, just checked, he 
still works for Oracle). The basic idea of Graal appears to be: take the
 abstract syntax tree concept from compiler design and make it a first 
class part of the JIT process, allowing the runtime to rewrite itself as
 the program runs to achieve greater performance without sacrificing 
agility. Cool stuff, and great for a keynote.&lt;/p&gt;&lt;p&gt;Sticking with the JSF heritage of the conference, next up was &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/cagataycivici&quot; rel=&quot;nofollow&quot;&gt;Cagatay Civici's&lt;/a&gt;
 talk about PrimeFaces. Cagatay introduced the new &quot;layouts&quot; concept, 
built on JSF 2.2 Resource Library Contracts. The base offering consists 
of two new layouts, &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.primefaces.org/layouts/sentinel.html&quot; rel=&quot;nofollow&quot;&gt;Sentinel&lt;/a&gt; and &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.primefaces.org/layouts/spark.html&quot; rel=&quot;nofollow&quot;&gt;Spark&lt;/a&gt;.
 One thing I've always liked about PrimeFaces is how they take the base 
concepts of the core JSF specification and use them to maximum effect, 
taking full advantage of new features, large and small.&lt;/p&gt;&lt;p&gt;Diving down a level, &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/pbouillaud/status/588552316594302976&quot; rel=&quot;nofollow&quot;&gt;Johannes Tuchscherer&lt;/a&gt;
 from CloudFoundry talked about Docker and how it relates to offerings 
from Pivotal. Johannes put the hype into perspective, showing how you 
still need other technologies to actually create value with Docker.&lt;/p&gt;&lt;p&gt;Sticking in the Pivotal realm, &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/springjuergen&quot; rel=&quot;nofollow&quot;&gt;Jürgen Höller&lt;/a&gt;
 gave the Spring 4.1 overview talk. It was nice to see that they were 
able to leverage Java SE 8 features while producing a binary that runs 
on Java SE 6. I was happy to have the opportunity to ask Juergen how 
pulled that trick off and the answer is basically build-time static code
 analysis. They compile with Java SE 8 with -source and -target 1.6, and
 have a build-time tool that looks for usages of Java SE 8 only idioms 
and APIs, and flags them as failures.&lt;/p&gt;&lt;p&gt;The next talk I attended was a really practical hands on session about Java Flight Recorder from &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/johanjanssen42&quot; rel=&quot;nofollow&quot;&gt;Johan Janssen&lt;/a&gt;. I'm a big fan of learning to get more out of tools I already have. JFR has been a part of the JDK for quite some time.&lt;/p&gt;&lt;h3&gt;Wednesday&lt;/h3&gt;&lt;p&gt;I
 was happy to see my good friend and fellow Oracle employee Mike Keith 
given the Wednesday keynote slot. Mike is a veteran of the conference 
trail, author of &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.amazon.com/Pro-JPA-Experts-Voice-Java/dp/1430249269&quot; rel=&quot;nofollow&quot;&gt;Pro JPA2&lt;/a&gt;
 and former JPA spec lead. Mike was talking about an exciting new 
product from Oracle: Mobile Back End As A Service (MBaaS). In a 
nutshell, this product packages up everything enterprises need to deploy
 mobile based applications that are built on their existing 
infrastructure. Mike's slides are &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://2015.con-fess.com/TJeBJK74/ConFESS_2015_Day2_0900_R1_R2_Mike_Keith-EnterpriseMobilePlatform.pdf&quot; rel=&quot;nofollow&quot;&gt;available for download&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;My
 own session was up next, at which I gave a status update on JSF 2.3. 
Briefly, it's a community driven release aimed at preserving your 
existing investment in JSF. I've uploaded my slides to &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.slideshare.net/edburns/burns-jsfconfess2015&quot; rel=&quot;nofollow&quot;&gt;slideshare&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;As a counterpart to Johan Janssen's session yesterday I attended &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/antonarhipov&quot; rel=&quot;nofollow&quot;&gt;Anton Arhipov&lt;/a&gt;'s session about ZeroTurnaround's &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://zeroturnaround.com/software/xrebel/&quot; rel=&quot;nofollow&quot;&gt;XRebel&lt;/a&gt;
 product. I liked his straightforward pitch: most applications receive 
very little profiling attention, let's make a super simple product that 
lets you get the low hanging fruit with maximum performance gain. 
Indeed, the slick browser based UI is very easy to use. When asked about
 various corner cases, Anton was honest and answered the current state 
of the product is very narrowly focused on where the most value can be 
easily extracted. This focus is a key success factor for ZT, in my 
opinion.&lt;/p&gt;&lt;p&gt;I've always talked up the importance of maintainability, 
and sold that as a strong suit of the Java EE stack, so it was with 
great interest that I attended &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/bernhard_keprt/status/588278982245818369&quot; rel=&quot;nofollow&quot;&gt;Bernhard Keprt&lt;/a&gt;'s session about maintenance. One reason I like attending conferences is to remove my &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://www.safaribooksonline.com/library/view/secrets-of-the/9780071490832/apb.html&quot; rel=&quot;nofollow&quot;&gt;3rd order ignorance&lt;/a&gt; by exposing me to technologies I otherwise would not encounter. During Bernhard's talk, he introduced me to &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://www.versioneye.com/&quot; rel=&quot;nofollow&quot;&gt;VersionEye&lt;/a&gt;.
 The value-add of this tool is easy to perceive: given that you have 
lots of dependencies, let's have a tool that keeps an eye on them and 
lets you know when they update.&lt;/p&gt;&lt;p&gt;Stefan Schuster gave a session 
from his experiences in developing apps for the three big flavors of 
mobile deployment platforms: native, Apache Cordova, and mobile web app.
 I liked this session for its first-hand perspective.&lt;/p&gt;&lt;p&gt;To close out my 2015 ConFESS session attendance I viewed &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/alexgoeschl&quot; rel=&quot;nofollow&quot;&gt;Alex Göschl&lt;/a&gt;'s session on AngularJS. Alex shared his experiences in deployng Angular 1 for the jobs portal for conference sponsor &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://willhaben.at/jobs/&quot; rel=&quot;nofollow&quot;&gt;Willhaben&lt;/a&gt;.
 FWIW, I found nine job postings for JSF on the site and four for 
Angular. This was an enjoyable talk and Alex did a great job explaining 
the extremely heterogeneous set of tools and technologies used in the 
project. Prior to switching the jobs portal to Angular 1, they were 
using GWT. It was pretty much a complete rewrite. The most useful aspect
 of the talk to me was the ease with which such an apparently complex 
tool chain is now accepted and leveraged by your average front end team.
 For example, the following nine step dev time build process was rattled
 off as if it were no big deal.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;clean build targets&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;compile less to css&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;copy vendor libraries&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;copy assets&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;compile and optimize angular templates&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;compile and check typescript&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;copy to tomcat&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;inject velocity templates&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;It
 must just be my Java EE roots that makes me feel that the preceding 
list is a lot more complex than a similar build process in a Java EE 
stack. I need to spend more time getting to know the workflow in current
 front end shops. Can anyone recommend a user group or meetup in 
Orlando, FL?&lt;/p&gt;&lt;p&gt;Following the two day conference was my full day of 
workshops. I had a small but dedicated room of students and I hope they 
enjoyed the sessions.&lt;/p&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">ConFESS 2015 Wrap UpHard on the heels of JavaLand was ConFESS. This was the eighth installment of the conference that started life in 2008 as JSF Days, switching to the name &quot;ConFESS&quot; in 2011. The name stands for the &quot;Conference for Enterprise Software Solutions&quot;. Last year, ConFESS was held as a partnership with JavaLand in Brühl Germany. Neither party was satisfied with how that turned out and in 2015 ConFESS returned to its home in Vienna, where it will stay. It was a relatively small event, with just over 200 participants. It nicely filled out the venue, the C3 event center in the 3rd district. In my opinion, its small size is a large asset. The ability to have the entire event schedule on two sides of a 4x5 inch card is very convenient.My overall impression of the conference was very positive. There was a wide variety of talks from speakers I hadn't seen before on the conference circuit. There was a good breadth of coverage in diverse tracks ranging from agile/methods to Java EE to tools to client side technologies, and there was an excellent band on Tuesday night, Florian Braun and FSG Company. There was also a Lego Mindstorms EV3 competition that got rave reviews, but I didn't attend that portion of the event.The full set of abstracts from the conference are available at the regonline site for the event. You can use that site to learn more about the sessions for which I will give my brief impressions in the remainder of this blog entry.TuesdayThe Tuesday Keynote was from Oracle Labs's Thomas Wuerthinger. Thomas presented his exciting work on the Graal VM. First off, I'm glad to see that Oracle has continued Sun's tradition of funding long-term research in the spirit of Sun Labs, founded by computing pioneer Ivan Sutherland (yep, just checked, he still works for Oracle). The basic idea of Graal appears to be: take the abstract syntax tree concept from compiler design and make it a first class part of the JIT process, allowing the runtime to rewrite itself as the program runs to achieve greater performance without sacrificing agility. Cool stuff, and great for a keynote.Sticking with the JSF heritage of the conference, next up was Cagatay Civici's talk about PrimeFaces. Cagatay introduced the new &quot;layouts&quot; concept, built on JSF 2.2 Resource Library Contracts. The base offering consists of two new layouts, Sentinel and Spark. One thing I've always liked about PrimeFaces is how they take the base concepts of the core JSF specification and use them to maximum effect, taking full advantage of new features, large and small.Diving down a level, Johannes Tuchscherer from CloudFoundry talked about Docker and how it relates to offerings from Pivotal. Johannes put the hype into perspective, showing how you still need other technologies to actually create value with Docker.Sticking in the Pivotal realm, Jürgen Höller gave the Spring 4.1 overview talk. It was nice to see that they were able to leverage Java SE 8 features while producing a binary that runs on Java SE 6. I was happy to have the opportunity to ask Juergen how pulled that trick off and the answer is basically build-time static code analysis. They compile with Java SE 8 with -source and -target 1.6, and have a build-time tool that looks for usages of Java SE 8 only idioms and APIs, and flags them as failures.The next talk I attended was a really practical hands on session about Java Flight Recorder from Johan Janssen. I'm a big fan of learning to get more out of tools I already have. JFR has been a part of the JDK for quite some time.WednesdayI was happy to see my good friend and fellow Oracle employee Mike Keith given the Wednesday keynote slot. Mike is a veteran of the conference trail, author of Pro JPA2 and former JPA spec lead. Mike was talking about an exciting new product from Oracle: Mobile Back End As A Service (MBaaS). In a nutshell, this product packages up everything enterprises need to deploy mobile based applications that are built on their existing infrastructure. Mike's slides are available for download.My own session was up next, at which I gave a status update on JSF 2.3. Briefly, it's a community driven release aimed at preserving your existing investment in JSF. I've uploaded my slides to slideshare.As a counterpart to Johan Janssen's session yesterday I attended Anton Arhipov's session about ZeroTurnaround's XRebel product. I liked his straightforward pitch: most applications receive very little profiling attention, let's make a super simple product that lets you get the low hanging fruit with maximum performance gain. Indeed, the slick browser based UI is very easy to use. When asked about various corner cases, Anton was honest and answered the current state of the product is very narrowly focused on where the most value can be easily extracted. This focus is a key success factor for ZT, in my opinion.I've always talked up the importance of maintainability, and sold that as a strong suit of the Java EE stack, so it was with great interest that I attended Bernhard Keprt's session about maintenance. One reason I like attending conferences is to remove my 3rd order ignorance by exposing me to technologies I otherwise would not encounter. During Bernhard's talk, he introduced me to VersionEye. The value-add of this tool is easy to perceive: given that you have lots of dependencies, let's have a tool that keeps an eye on them and lets you know when they update.Stefan Schuster gave a session from his experiences in developing apps for the three big flavors of mobile deployment platforms: native, Apache Cordova, and mobile web app. I liked this session for its first-hand perspective.To close out my 2015 ConFESS session attendance I viewed Alex Göschl's session on AngularJS. Alex shared his experiences in deployng Angular 1 for the jobs portal for conference sponsor Willhaben. FWIW, I found nine job postings for JSF on the site and four for Angular. This was an enjoyable talk and Alex did a great job explaining the extremely heterogeneous set of tools and technologies used in the project. Prior to switching the jobs portal to Angular 1, they were using GWT. It was pretty much a complete rewrite. The most useful aspect of the talk to me was the ease with which such an apparently complex tool chain is now accepted and leveraged by your average front end team. For example, the following nine step dev time build process was rattled off as if it were no big deal.clean build targetscompile less to csscopy vendor librariescopy assetscompile and optimize angular templatescompile and check typescriptcopy to tomcatinject velocity templatesIt must just be my Java EE roots that makes me feel that the preceding list is a lot more complex than a similar build process in a Java EE stack. I need to spend more time getting to know the workflow in current front end shops. Can anyone recommend a user group or meetup in Orlando, FL?Following the two day conference was my full day of workshops. I had a small but dedicated room of students and I hope they enjoyed the sessions.</summary></entry><entry><title type="html">JavaLand 2015 Wrap-Up Blog</title><link href="/blog/2015/03/30/javaland-2015-wrap.html" rel="alternate" type="text/html" title="JavaLand 2015 Wrap-Up Blog" /><published>2015-03-30T09:32:00-04:00</published><updated>2015-03-30T09:32:00-04:00</updated><id>/blog/2015/03/30/javaland-2015-wrap</id><content type="html" xml:base="/blog/2015/03/30/javaland-2015-wrap.html">&lt;div class=&quot;jive-rendered-content&quot;&gt;&lt;h1&gt;JavaLand 2015 Wrap Up&lt;/h1&gt;&lt;p&gt;After
 months of preparation, it all came down to three days of intense 
execution, and I was just one speaker. I can only marvel at the 
logistical acumen that was on display from the &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.javaland.eu/team/&quot; rel=&quot;nofollow&quot;&gt;JavaLand&lt;/a&gt; and DOAG team. I had an action , capably coodinated by &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.javaland.eu/personenseiten/andreas-badelt/&quot; rel=&quot;nofollow&quot;&gt;Andreas Badelt&lt;/a&gt;.
 Because of the high level of activity on my personal agenda, I was not 
able to attend as many sessions as I would have liked. In any case, this
 blog entry is my place to share my overall impressions of the 
conference, and of the sessions I did get a chance to attend.&lt;/p&gt;&lt;h3&gt;Day One&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://community.oracle.com/blog/20150324-lagergren-keynote-hassle.png&quot;&gt;&lt;img __embedded_id=&quot;401&quot; src=&quot;20150330_files/20150324-lagergren-keynote-hassle.html&quot; style=&quot;float: right;&quot; width=&quot;200&quot; height=&quot;148&quot;&gt;&lt;/a&gt; Right off the bat, I want to tip my cap to &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/lagergren&quot; rel=&quot;nofollow&quot;&gt;Marcus Lagergren&lt;/a&gt;
 for remaining calm in the face of some AV problems. Even with all that,
 and the 45 minute session duration, Marcus managed to give a compelling
 whirlwind tour of his personal experience with Java from the beginning.
 More photos like the one on the right are available from &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/hildebrandttk&quot; rel=&quot;nofollow&quot;&gt;Stefan Hildebrandt&lt;/a&gt;'s &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://www.flickr.com/photos/130465085@N06/sets/72157651139135557/&quot; rel=&quot;nofollow&quot;&gt;flickr photo stream&lt;/a&gt;.
 I think there is a lot more room in the &quot;20 year's of Java meme&quot;, 
however, and I applaud Marcus for wisely not attempting to speak for all
 of it and drawing from his own experiences. That's one great thing 
about the &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/search?q=%23java20&amp;amp;src=typd&amp;amp;customTheme=otn&quot; rel=&quot;nofollow&quot;&gt;#java20&lt;/a&gt; meme, everyone has their own story. Maybe at &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://www.oracle.com/javaone/call-for-proposals.html&quot; rel=&quot;nofollow&quot;&gt;JavaOne 2015&lt;/a&gt; they will have some sort of &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://storycorps.org/&quot; rel=&quot;nofollow&quot;&gt;Story Corps&lt;/a&gt;
 type thing where people can give their stories. Come to think of it, if
 someone wants to build Story Corps as a Service (SCAAS), perpahs they 
can sell it to Oracle for use at the show.&lt;/p&gt;&lt;p&gt;Shortly after Marcus's session, I presented with my good friend &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/SourceKnights&quot; rel=&quot;nofollow&quot;&gt;Oliver Szymanzki&lt;/a&gt; a 45 minute capsule of our full day training session about &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.slideshare.net/edburns/java-ee-7-from-an-html5-perspective-javaland-2015&quot; rel=&quot;nofollow&quot;&gt;Java EE 7 from an HTML5 Perspective&lt;/a&gt;.
 It was tough to make a meaningful abstraction from a full day session 
to just 45 minutes, but I hope at least people could take something 
useful away from it.&lt;/p&gt;&lt;p&gt;Then came my first exposure to the EAA, which was my only chance to present JSF content here at JavaLand. I gave a &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.slideshare.net/edburns/jsf-22-input-output-javaland-2015&quot; rel=&quot;nofollow&quot;&gt;quick presentation&lt;/a&gt;
 and had an informal meeting with several JSF EG members who were at 
JavaLand. We covered f:socket, multi-component validation, and URL 
mapping.&lt;/p&gt;&lt;p&gt;The evening community event was really not to be missed. 
If you ever have a chance to attend JavaLand, I really recommend you 
participate.&lt;/p&gt;&lt;h3&gt;Day Two&lt;/h3&gt;&lt;p&gt;I started out the day by presenting a modified version of my &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.slideshare.net/edburns/http2-comes-to-java-what-servlet-40-means-to-you-devnexus-2015&quot; rel=&quot;nofollow&quot;&gt;DevNexus session about Servlet 4.0 and HTTP/2&lt;/a&gt;. I basically dropped the demo and moved the Java SE 9 content to an EAA session in order to fit into the 45 minute window.&lt;/p&gt;&lt;p&gt;Following my session I was able to enjoy &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/nmcl&quot; rel=&quot;nofollow&quot;&gt;Mark Little's&lt;/a&gt; keynote about Java &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://www.doag.org/konferenz/konferenzplaner/konferenzplaner_details.php?id=483801&amp;amp;locS=0&amp;amp;vid=491907&quot; rel=&quot;nofollow&quot;&gt;Enterprise and Internet of Things&lt;/a&gt;.
 This session put out some hard-won truths of problems we have solved in
 Java as cautionary tales for newer stacks that seem intent on 
re-inventing wheels rather than standing on the shoulders of others. I 
must admit it was a feel-good session, but still realistic and largely &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://en.wikipedia.org/wiki/Drinking_the_Kool-Aid&quot; rel=&quot;nofollow&quot;&gt;kool aid free&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;In the afternoon, I supported &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/dblevins&quot; rel=&quot;nofollow&quot;&gt;David Blevins&lt;/a&gt; during his &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://www.doag.org/konferenz/konferenzplaner/konferenzplaner_details.php?id=483801&amp;amp;locS=0&amp;amp;vid=491386&quot; rel=&quot;nofollow&quot;&gt;session about the new Security JSR&lt;/a&gt;. This was a very informative session that got a whole lot done in only 45 minutes. I hope it encouraged some people to &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://jcp.org/en/jsr/detail?id=375&quot; rel=&quot;nofollow&quot;&gt;get involved in JSR-375&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Running back to the EAA, I presented the exciting work being done by &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/OpenJDK&quot; rel=&quot;nofollow&quot;&gt;Michael McMahon&lt;/a&gt;
 to bring a new Http Client to Java SE 9, including HTTP/2 support. I 
can't post the slides, but I'm sure we'll have something on this at 
JavaOne.&lt;/p&gt;&lt;p&gt;My last engagment of the conference proper was to participate in a joint vJUG/NightHacking session regarding &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://nighthacking.com/adopt-a-jsr-nighthackingvjug-sessions/&quot; rel=&quot;nofollow&quot;&gt;Adopt-a-JSR&lt;/a&gt;. This was lots of fun, and I thank &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/steveonjava&quot; rel=&quot;nofollow&quot;&gt;Stephen Chin&lt;/a&gt; and &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/sjmaple&quot; rel=&quot;nofollow&quot;&gt;Simon Maple&lt;/a&gt; for providing a vehicle for it.&lt;/p&gt;&lt;p&gt;As
 a nice wind-down from the conference, and a bit of chill before the 
training day, I was invited by DOAG boss Fried Saacke to attend the &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/dasniko/status/580831517418618883&quot; rel=&quot;nofollow&quot;&gt;5 year celebration dinner&lt;/a&gt; for &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.ijug.eu/java-aktuell/das-magazin.html&quot; rel=&quot;nofollow&quot;&gt;Java Aktuell&lt;/a&gt;
 magazine. I didn't know it at the time, but the invitation included an 
opportunity to give a short speech, in German, on the importance of JCP 
to the Java Community. I hope I didn't mangle my words too badly.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://community.oracle.com/blog/20150326-tastykakes-and-usb.jpeg&quot;&gt;&lt;img __embedded_id=&quot;402&quot; src=&quot;20150330_files/20150326-tastykakes-and-usb.html&quot; style=&quot;float: left;&quot; width=&quot;200&quot; height=&quot;150&quot;&gt;&lt;/a&gt;
 After being blessed with many years of German conference opportunities 
at which I invariably bring home lots of chocolate, I felt it was time 
to give the Germans a taste of American-style sweets along with their 
pre-loaded VM usb sticks. These Tasty Kakes or a specialty of my 
home-town of &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.tastykake.com/history&quot; rel=&quot;nofollow&quot;&gt;Philadelphia&lt;/a&gt;, and each attendee of the session &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.javaland.eu/programm/vertiefe-schulungstag/&quot; rel=&quot;nofollow&quot;&gt;Java EE aus einer HTML5-Perspektive&lt;/a&gt; received some along with a full day of instruction and a USB stick with a VM containing the workshop materials.&lt;/p&gt;&lt;p&gt;In summary, JavaLand has lots to recommend it. Come for the content, stay for the fun.&lt;/p&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">JavaLand 2015 Wrap UpAfter months of preparation, it all came down to three days of intense execution, and I was just one speaker. I can only marvel at the logistical acumen that was on display from the JavaLand and DOAG team. I had an action , capably coodinated by Andreas Badelt. Because of the high level of activity on my personal agenda, I was not able to attend as many sessions as I would have liked. In any case, this blog entry is my place to share my overall impressions of the conference, and of the sessions I did get a chance to attend.Day One Right off the bat, I want to tip my cap to Marcus Lagergren for remaining calm in the face of some AV problems. Even with all that, and the 45 minute session duration, Marcus managed to give a compelling whirlwind tour of his personal experience with Java from the beginning. More photos like the one on the right are available from Stefan Hildebrandt's flickr photo stream. I think there is a lot more room in the &quot;20 year's of Java meme&quot;, however, and I applaud Marcus for wisely not attempting to speak for all of it and drawing from his own experiences. That's one great thing about the #java20 meme, everyone has their own story. Maybe at JavaOne 2015 they will have some sort of Story Corps type thing where people can give their stories. Come to think of it, if someone wants to build Story Corps as a Service (SCAAS), perpahs they can sell it to Oracle for use at the show.Shortly after Marcus's session, I presented with my good friend Oliver Szymanzki a 45 minute capsule of our full day training session about Java EE 7 from an HTML5 Perspective. It was tough to make a meaningful abstraction from a full day session to just 45 minutes, but I hope at least people could take something useful away from it.Then came my first exposure to the EAA, which was my only chance to present JSF content here at JavaLand. I gave a quick presentation and had an informal meeting with several JSF EG members who were at JavaLand. We covered f:socket, multi-component validation, and URL mapping.The evening community event was really not to be missed. If you ever have a chance to attend JavaLand, I really recommend you participate.Day TwoI started out the day by presenting a modified version of my DevNexus session about Servlet 4.0 and HTTP/2. I basically dropped the demo and moved the Java SE 9 content to an EAA session in order to fit into the 45 minute window.Following my session I was able to enjoy Mark Little's keynote about Java Enterprise and Internet of Things. This session put out some hard-won truths of problems we have solved in Java as cautionary tales for newer stacks that seem intent on re-inventing wheels rather than standing on the shoulders of others. I must admit it was a feel-good session, but still realistic and largely kool aid free.In the afternoon, I supported David Blevins during his session about the new Security JSR. This was a very informative session that got a whole lot done in only 45 minutes. I hope it encouraged some people to get involved in JSR-375.Running back to the EAA, I presented the exciting work being done by Michael McMahon to bring a new Http Client to Java SE 9, including HTTP/2 support. I can't post the slides, but I'm sure we'll have something on this at JavaOne.My last engagment of the conference proper was to participate in a joint vJUG/NightHacking session regarding Adopt-a-JSR. This was lots of fun, and I thank Stephen Chin and Simon Maple for providing a vehicle for it.As a nice wind-down from the conference, and a bit of chill before the training day, I was invited by DOAG boss Fried Saacke to attend the 5 year celebration dinner for Java Aktuell magazine. I didn't know it at the time, but the invitation included an opportunity to give a short speech, in German, on the importance of JCP to the Java Community. I hope I didn't mangle my words too badly. After being blessed with many years of German conference opportunities at which I invariably bring home lots of chocolate, I felt it was time to give the Germans a taste of American-style sweets along with their pre-loaded VM usb sticks. These Tasty Kakes or a specialty of my home-town of Philadelphia, and each attendee of the session Java EE aus einer HTML5-Perspektive received some along with a full day of instruction and a USB stick with a VM containing the workshop materials.In summary, JavaLand has lots to recommend it. Come for the content, stay for the fun.</summary></entry><entry><title type="html">JavaLand 2015 Early Adopter’s Area Preview Blog</title><link href="/blog/2015/02/15/javaland-2015-early-adopters-area-preview.html" rel="alternate" type="text/html" title="JavaLand 2015 Early Adopter's Area Preview Blog" /><published>2015-02-15T10:48:00-05:00</published><updated>2015-02-15T10:48:00-05:00</updated><id>/blog/2015/02/15/javaland-2015-early-adopters-area-preview</id><content type="html" xml:base="/blog/2015/02/15/javaland-2015-early-adopters-area-preview.html">&lt;div class=&quot;jive-rendered-content&quot;&gt;&lt;h1&gt;JavaLand 2015 Early Adopter's Area&lt;/h1&gt;&lt;p&gt;With only 25 business days to go until JavaLand 2015, now's a good time to share the plans for the &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.javaland.eu/index.php?id=1786&quot; rel=&quot;nofollow&quot;&gt;Early Adopter's area&lt;/a&gt;
 and Hackergarten. As at many other Java community conferences, this is a
 space where anyone can visit and meet with leaders of different parts 
of the Java ecosystem to see first hand what's new in their own little 
patch of the Java world. The detail page for this space on the JavaLand 
website: &amp;lt; &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.javaland.eu/index.php?id=1786&quot; rel=&quot;nofollow&quot;&gt;http://www.javaland.eu/index.php?id=1786&lt;/a&gt;
 &amp;gt; lists the individuals who have committed to spend some time in the
 space. I've been participating in these kinds of spaces &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://weblogs.java.net/blog/edburns/archive/2006/08/im_lucy_van_pel.html&quot; rel=&quot;nofollow&quot;&gt;for nearly ten years now&lt;/a&gt; and it's always very worthwhile for me to interact with the community in this way.&lt;/p&gt;&lt;p&gt;The
 schedule of mini-presentations is still not yet finalized, but the 
detail page will have the final schedule when it is. In the meantime, I 
can share an alphabetical snapshot of the current set of individuals and
 their topics. If I have any commentary to add for each entry, I'll add 
it. As I prepared the commentary, a theme emerged. Every one of these 
individuals is passionately advocating for their ideas in the face of 
some form of challenge. I see individuals who are trying to displace an 
incumbent technology, trying to overcome some part of the community &quot;not
 getting&quot; their idea, and fighting the old bugbear of 
complexity/indifference. This passion makes it worth your time to stop 
by the early adopter's area.&lt;/p&gt;&lt;dl&gt;&lt;dt&gt;Alex Snaps, Peter Lawrey&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;Alex and Peter are talking about JCache and Data Grids&lt;/p&gt;&lt;p style=&quot;min-height: 8pt; padding: 0px;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;/dd&gt;&lt;dt&gt;Anatole Tresch&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;Apache Tamaya, Java Configuration, and Money and Currency&lt;/p&gt;&lt;p&gt;Anatole
 has been super determined to make progress on the configuration for 
Java effort. This effort started out as an Oracle-lead JSR proposal, was
 transferred to Anatole's employer, Credit Suisse, was declined for 
consideration in both EE and SE JCP executive committees, and Anatole 
finally decided to make progress as an Apache Incubator Project. I 
applaud his tenacity.&lt;/p&gt;&lt;/dd&gt;&lt;dt&gt;Andres Almiray&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;Andres is 
most famous for his involvement in the Griffon desktop application 
framework, but his passion for this space has lead him to propose &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://jcp.org/en/jsr/detail?id=377&quot; rel=&quot;nofollow&quot;&gt;JSR-377: A Desktop Application API&lt;/a&gt;.
 Now, I've been around long enough to know that this is a difficult 
space to occupy, with several attempts at standardization having come 
and gone (see &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://jcp.org/en/jsr/detail?id=295&quot; rel=&quot;nofollow&quot;&gt;JSR-295&lt;/a&gt;, and &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://jcp.org/en/jsr/detail?id=296&quot; rel=&quot;nofollow&quot;&gt;JSR-296&lt;/a&gt;, and &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://jcp.org/en/jsr/detail?id=143&quot; rel=&quot;nofollow&quot;&gt;JSR-143&lt;/a&gt;). I wish you the best of success with this one, Andres, but it's obviously a tough nut to crack.&lt;/p&gt;&lt;/dd&gt;&lt;dt&gt;Dan Allen&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;I
 know Dan from his productive involvement in JSF 2.0. These days I see 
him frequently tweeting about Asciidoctor. After having just made a &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://github.com/edburns/http2-spec/commit/08c4b1376354801f9e5abfe144b3696191b4194e&quot; rel=&quot;nofollow&quot;&gt;trivial pull request to the HTTP/2 spec&lt;/a&gt; and using &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://xml2rfc.ietf.org/&quot; rel=&quot;nofollow&quot;&gt;xml2rfc&lt;/a&gt; to do it, I can say there is room for improvement in this space, and I know that Dan can tell you all about it.&lt;/p&gt;&lt;/dd&gt;&lt;dt&gt;Ed Burns&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;I'll be here talking about JSF, Servlet, and HTTP/2.&lt;/p&gt;&lt;/dd&gt;&lt;dt&gt;Heather Vancura&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;Heather
 is the heart of the JCP, and therefore has her finger on the pulse of 
what is happening across the evolution of the entire Java platform.&lt;/p&gt;&lt;/dd&gt;&lt;dt&gt;Ivar Grimnstad&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;I
 don't know Ivar, but he is on the MVC Expert Group, and is thus a great
 conduit to the development efforts of one of only two new JSRs in Java 
EE 8.&lt;/p&gt;&lt;/dd&gt;&lt;dt&gt;Mani Sarkar, Daniel Bryant&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;I've seen Mani 
at several conferences over the past couple years, and he epitomizes the
 passionate Java developer. As the late night tech conversations would 
dwindle off, he'd always be one of the last ones still talking hard core
 tech. Mani's the real deal. Mani is talking about OpenJDK, among other 
things.&lt;/p&gt;&lt;/dd&gt;&lt;dt&gt;Roland Huss&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;Roland is talking about JMX and Java EE Management.&lt;/p&gt;&lt;/dd&gt;&lt;/dl&gt;&lt;p&gt;Please drop by the Early Adopter's Area to catch up with these and other Java community leaders!&lt;/p&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">JavaLand 2015 Early Adopter's AreaWith only 25 business days to go until JavaLand 2015, now's a good time to share the plans for the Early Adopter's area and Hackergarten. As at many other Java community conferences, this is a space where anyone can visit and meet with leaders of different parts of the Java ecosystem to see first hand what's new in their own little patch of the Java world. The detail page for this space on the JavaLand website: &amp;lt; http://www.javaland.eu/index.php?id=1786 &amp;gt; lists the individuals who have committed to spend some time in the space. I've been participating in these kinds of spaces for nearly ten years now and it's always very worthwhile for me to interact with the community in this way.The schedule of mini-presentations is still not yet finalized, but the detail page will have the final schedule when it is. In the meantime, I can share an alphabetical snapshot of the current set of individuals and their topics. If I have any commentary to add for each entry, I'll add it. As I prepared the commentary, a theme emerged. Every one of these individuals is passionately advocating for their ideas in the face of some form of challenge. I see individuals who are trying to displace an incumbent technology, trying to overcome some part of the community &quot;not getting&quot; their idea, and fighting the old bugbear of complexity/indifference. This passion makes it worth your time to stop by the early adopter's area.Alex Snaps, Peter LawreyAlex and Peter are talking about JCache and Data Grids&amp;nbsp;Anatole TreschApache Tamaya, Java Configuration, and Money and CurrencyAnatole has been super determined to make progress on the configuration for Java effort. This effort started out as an Oracle-lead JSR proposal, was transferred to Anatole's employer, Credit Suisse, was declined for consideration in both EE and SE JCP executive committees, and Anatole finally decided to make progress as an Apache Incubator Project. I applaud his tenacity.Andres AlmirayAndres is most famous for his involvement in the Griffon desktop application framework, but his passion for this space has lead him to propose JSR-377: A Desktop Application API. Now, I've been around long enough to know that this is a difficult space to occupy, with several attempts at standardization having come and gone (see JSR-295, and JSR-296, and JSR-143). I wish you the best of success with this one, Andres, but it's obviously a tough nut to crack.Dan AllenI know Dan from his productive involvement in JSF 2.0. These days I see him frequently tweeting about Asciidoctor. After having just made a trivial pull request to the HTTP/2 spec and using xml2rfc to do it, I can say there is room for improvement in this space, and I know that Dan can tell you all about it.Ed BurnsI'll be here talking about JSF, Servlet, and HTTP/2.Heather VancuraHeather is the heart of the JCP, and therefore has her finger on the pulse of what is happening across the evolution of the entire Java platform.Ivar GrimnstadI don't know Ivar, but he is on the MVC Expert Group, and is thus a great conduit to the development efforts of one of only two new JSRs in Java EE 8.Mani Sarkar, Daniel BryantI've seen Mani at several conferences over the past couple years, and he epitomizes the passionate Java developer. As the late night tech conversations would dwindle off, he'd always be one of the last ones still talking hard core tech. Mani's the real deal. Mani is talking about OpenJDK, among other things.Roland HussRoland is talking about JMX and Java EE Management.Please drop by the Early Adopter's Area to catch up with these and other Java community leaders!</summary></entry><entry><title type="html">JavaLand 2015 Conference Picks Blog</title><link href="/blog/2015/01/15/javaland-2015-conference-picks.html" rel="alternate" type="text/html" title="JavaLand 2015 Conference Picks Blog" /><published>2015-01-15T10:12:00-05:00</published><updated>2015-01-15T10:12:00-05:00</updated><id>/blog/2015/01/15/javaland-2015-conference-picks</id><content type="html" xml:base="/blog/2015/01/15/javaland-2015-conference-picks.html">&lt;div class=&quot;jive-rendered-content&quot;&gt;&lt;h1&gt;JavaLand 2015 Conference Picks&lt;/h1&gt;&lt;p&gt;With
 only 44 business days to go until JavaLand 2015, I’d like to share my 
conference picks. I’m including my sessions for completeness, and 
naturally I recommend you attend them, but I’ll also include an 
alternate that I’d attend ]]&amp;gt;&lt;/p&gt;&lt;h2&gt;Tuesday, 24 March 2015&lt;/h2&gt;&lt;dl&gt;&lt;dt&gt;0900, Wintergarden, Welcome Keynote: 20 Years of Java&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;I like to attend the plenary sessions of a conference if they are at all interesting, and Oracle Java engineer &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/lagergren&quot; rel=&quot;nofollow&quot;&gt;Marcus Lagergren’s&lt;/a&gt; looks great. It will be on the big stage. &lt;a href=&quot;http://www.java.net/sites/default/files/big-room.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img __embedded_id=&quot;398&quot; src=&quot;20150115_files/big-room.html&quot; style=&quot;float: right;&quot; width=&quot;100&quot;&gt;&lt;/a&gt;This year I’m celebrating my own 20 year anniversary with Java, since &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.flux.utah.edu/%7Ekwright/paper_summs/network_papers/mweb-w3c96.html&quot; rel=&quot;nofollow&quot;&gt;I was present&lt;/a&gt; at the German debut of Java at the &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://web.archive.org/web/19980214105213/http://www.igd.fhg.de/www/www95/www95.html&quot; rel=&quot;nofollow&quot;&gt;The Third International World-Wide Web Conference in Darmstadt, Germany&lt;/a&gt; in April 1995. I vividly remember someone (&lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/avh&quot; rel=&quot;nofollow&quot;&gt;Arthur van Hoff&lt;/a&gt; I think) typing, as root &lt;code&gt;rm -rf /*&lt;/code&gt;, at the end of the demo on a Sun UNIX workstation. What flair!&lt;/p&gt;&lt;/dd&gt;&lt;dt&gt;1000, Schauspielhaus, Praktisches API-Design&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;Dieser Vortrag wird auf Deutsch gegeben, aber trotzdem empfehle sie ich weil das Thema nebem meinem Hertz liegt. &lt;a href=&quot;http://www.java.net/sites/default/files/schauspielhaus.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img __embedded_id=&quot;399&quot; src=&quot;20150115_files/schauspielhaus.html&quot; style=&quot;float: left;&quot; width=&quot;100&quot; height=&quot;134&quot;&gt;&lt;/a&gt; Hopefully I’ll get some tips for design in JSF and Servlet.&lt;/p&gt;&lt;/dd&gt;&lt;/dl&gt;&lt;p&gt;1200, Quantum 1, Java EE 7 from an HTML5 Perspective: WebSocket, JSON, &amp;amp; JSF&lt;/p&gt;&lt;p&gt;This
 is my first session, and it is an overview of JavaEE 7 from the 
perspective of technologies useful to those developing JavaEE 7 backed 
apps with HTML5 user interfaces.&lt;/p&gt;&lt;p&gt;If I wasn’t speaking myself, I’d attend my pal &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/monacotoni&quot; rel=&quot;nofollow&quot;&gt;Anton Epple’s 1200, Quantum 2, Wie programmiert man JavaScript in Java.&lt;/a&gt;&lt;/p&gt;&lt;p&gt;1300, Schauspielhaus, The (not so) Dark Art of Performance Tuning&lt;/p&gt;&lt;p&gt;My good friend &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/kcpeppe&quot; rel=&quot;nofollow&quot;&gt;Kirk Pepperdine&lt;/a&gt; is a global expert in this topic, and a great and entertaining speaker as well.&lt;/p&gt;&lt;p&gt;1400, Wintergarden, JBatch mit Apache BatchEE&lt;/p&gt;&lt;p&gt;Batch
 is one of those unglamorous yet essential technologies, and also one 
with a very vibrant JCP community. I remember meeting &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/michaelminella&quot; rel=&quot;nofollow&quot;&gt;Michael Minella&lt;/a&gt; of Spring Batch at &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://devnexus.com/s/index&quot; rel=&quot;nofollow&quot;&gt;DevNexus 2014&lt;/a&gt; and he was so excited about passing the TCK. The session speaker, &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/struberg&quot; rel=&quot;nofollow&quot;&gt;Mark Struberg&lt;/a&gt;, is a tech titan and one of the sharpest guys I’ve had the pleasure of working with. He’s also a great speaker.&lt;/p&gt;&lt;p&gt;1500, Wintergarden, Where Are We At with MVC in Java EE 8&lt;/p&gt;&lt;p&gt;I work very closely with my co-spec lead on JSF, &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/mnriem&quot; rel=&quot;nofollow&quot;&gt;Manfred Riem&lt;/a&gt;, so I’m biased, but this session is sure to be great. MVC is one of the most talked about technologies in Java EE 8.&lt;/p&gt;&lt;p&gt;1600, Quantum 4, Confessions of an Automation Addict&lt;/p&gt;&lt;p&gt;I’m a bit of an automation addict myself, but the &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.mhprofessional.com/product.php?isbn=0071804285&quot; rel=&quot;nofollow&quot;&gt;horse I picked to ride&lt;/a&gt; has fallen out of favor. Nonetheless, I still use it heavily.&lt;/p&gt;&lt;p&gt;1700, Schauspielhaus, Speed up Your Java by Turning it into Binary&lt;/p&gt;&lt;p&gt;John is a great speaker and industry veteran, and this talk has a provocative topic, so it is sure to be worthwhile.&lt;/p&gt;&lt;p style=&quot;min-height: 8pt; padding: 0px;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;One
 unique aspect of this conference is its location: a top-tier amusmement
 park. Think of it as a smaller mashup of Disney’s Epcot and Magic 
Kingdom, with German sensibilities. After the first day of the 
conference, some of the rides will be open to conference attendees. My 
favorite was Winja’s force. &lt;a href=&quot;http://www.java.net/sites/default/files/winjas-force.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img __embedded_id=&quot;400&quot; src=&quot;20150115_files/winjas-force.html&quot; style=&quot;float: right;&quot; width=&quot;134&quot;&gt;&lt;/a&gt; This is a relatively mellow roller coaster with a twist, literally. The car you sit in can rotate as it glides along the rails.&lt;/p&gt;&lt;h2&gt;Wednesday, 25 March 2015&lt;/h2&gt;&lt;dl&gt;&lt;dt&gt;0900, Quantum 3, Developing Native Mobile Apps Using JavaScript&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;This is a bit outside of my bailiwick, but my friend &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/hazems&quot; rel=&quot;nofollow&quot;&gt;Hazem Saleh&lt;/a&gt; is a great speaker and strong proponent of Open Source. He’s also a JSF Expert Group member.&lt;/p&gt;&lt;/dd&gt;&lt;dt&gt;1000, Schauspielhaus, HTTP 2.0 Comes to Java EE&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;This is my second session, and I’ll explain what’s in store for Servlet 4.0, with a special view towards HTTP/2.&lt;/p&gt;&lt;p&gt;If I wasn’t speaking, I’d definitely attend &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/svenpet&quot; rel=&quot;nofollow&quot;&gt;Sven Peters’s&lt;/a&gt;
 Coding Culture session in Wintergarden. First off, Atlassian makes much
 better products than GitHub. Second, Sven is an excellent speaker, and 
third the talk is likely to be keynote worthy. I’m not glad to be up 
against him in the schedule.&lt;/p&gt;&lt;/dd&gt;&lt;dt&gt;1100, Wintergarden, Enterprise and Internet of Things&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;The Tuesday plenary is by &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/nmcl&quot; rel=&quot;nofollow&quot;&gt;Dr. Mark Little&lt;/a&gt;,
 who is doing a great job driving Java EE forward at JBoss. I normally 
don’t go in for IoT sessions, but Mark is sure to make it interesting.&lt;/p&gt;&lt;/dd&gt;&lt;dt&gt;1300, Schauspielhaus, Java EE Security: Let’s Make Something Useful&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;&lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/dblevins&quot; rel=&quot;nofollow&quot;&gt;David Blevins&lt;/a&gt;
 is a strong community voice for improving Java EE, and security is one 
of the most challenging areas to improve. You can tell it’s hard just by
 how long it’s taken for the community to get up enough steam to tackle 
it in a proper JSR. Well, we have one now: &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://jcp.org/en/jsr/detail?id=375&quot; rel=&quot;nofollow&quot;&gt;JSR-375&lt;/a&gt;, and David will tell us how we can make the most of it.&lt;/p&gt;&lt;/dd&gt;&lt;dt&gt;1400, Quantum 4, Productive, Effective Development? You Weak Minded fool!&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;&lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/sjmaple&quot; rel=&quot;nofollow&quot;&gt;Simon Maple&lt;/a&gt; has done a great job building the &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/virtualJUG&quot; rel=&quot;nofollow&quot;&gt;Virtual JUG&lt;/a&gt;
 into a force for good in the Java Community. He is well positioned to 
deliver this kind of talk thanks to his role at ZeroTurnaround.&lt;/p&gt;&lt;/dd&gt;&lt;dt&gt;1500, Quantum 1, Softwarequalität steigern&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;This
 appears to be a survey talk about how to effectively use some popular 
tools in practice to improve software quality. I’ve never seen &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/leichtundkross&quot; rel=&quot;nofollow&quot;&gt;Andreas G¨nzel&lt;/a&gt; talk, but the topic is interesting to me.&lt;/p&gt;&lt;/dd&gt;&lt;dt&gt;1600, Quantum 4, Puppet für Entwickler&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;Now
 that Docker is all the rage, I’ll be interested to see what’s new with 
Puppet, or at least learn how these two popular sysadmin technologies 
relate to eachother. As with the previous talk, I’ve not seen &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/ithempel&quot; rel=&quot;nofollow&quot;&gt;Sebastian Hempel&lt;/a&gt; speak before this.&lt;/p&gt;&lt;/dd&gt;&lt;/dl&gt;&lt;h2&gt;Thursday, 26 March 2015&lt;/h2&gt;&lt;p&gt;As mentioned &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://weblogs.java.net/blog/edburns/archive/2014/12/26/javaland-2015-training-day-teaser&quot; rel=&quot;nofollow&quot;&gt;in my previous entry&lt;/a&gt;, &lt;a class=&quot;jive-link-external-small&quot; href=&quot;https://twitter.com/SourceKnights&quot; rel=&quot;nofollow&quot;&gt;Oliver Szymanski&lt;/a&gt; and I are presenting an entry in the &lt;a class=&quot;jive-link-external-small&quot; href=&quot;http://www.javaland.eu/programm/vertiefe-schulungstag.html&quot; rel=&quot;nofollow&quot;&gt;training day&lt;/a&gt;: Java EE 7 from an HTML5 Perspective.&lt;/p&gt;&lt;p&gt;JavaLand
 was great fun and very professionally enriching last year. This year 
promises to be even more so. I hope to see you there!&lt;/p&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">JavaLand 2015 Conference PicksWith only 44 business days to go until JavaLand 2015, I’d like to share my conference picks. I’m including my sessions for completeness, and naturally I recommend you attend them, but I’ll also include an alternate that I’d attend ]]&amp;gt;Tuesday, 24 March 20150900, Wintergarden, Welcome Keynote: 20 Years of JavaI like to attend the plenary sessions of a conference if they are at all interesting, and Oracle Java engineer Marcus Lagergren’s looks great. It will be on the big stage. This year I’m celebrating my own 20 year anniversary with Java, since I was present at the German debut of Java at the The Third International World-Wide Web Conference in Darmstadt, Germany in April 1995. I vividly remember someone (Arthur van Hoff I think) typing, as root rm -rf /*, at the end of the demo on a Sun UNIX workstation. What flair!1000, Schauspielhaus, Praktisches API-DesignDieser Vortrag wird auf Deutsch gegeben, aber trotzdem empfehle sie ich weil das Thema nebem meinem Hertz liegt. Hopefully I’ll get some tips for design in JSF and Servlet.1200, Quantum 1, Java EE 7 from an HTML5 Perspective: WebSocket, JSON, &amp;amp; JSFThis is my first session, and it is an overview of JavaEE 7 from the perspective of technologies useful to those developing JavaEE 7 backed apps with HTML5 user interfaces.If I wasn’t speaking myself, I’d attend my pal Anton Epple’s 1200, Quantum 2, Wie programmiert man JavaScript in Java.1300, Schauspielhaus, The (not so) Dark Art of Performance TuningMy good friend Kirk Pepperdine is a global expert in this topic, and a great and entertaining speaker as well.1400, Wintergarden, JBatch mit Apache BatchEEBatch is one of those unglamorous yet essential technologies, and also one with a very vibrant JCP community. I remember meeting Michael Minella of Spring Batch at DevNexus 2014 and he was so excited about passing the TCK. The session speaker, Mark Struberg, is a tech titan and one of the sharpest guys I’ve had the pleasure of working with. He’s also a great speaker.1500, Wintergarden, Where Are We At with MVC in Java EE 8I work very closely with my co-spec lead on JSF, Manfred Riem, so I’m biased, but this session is sure to be great. MVC is one of the most talked about technologies in Java EE 8.1600, Quantum 4, Confessions of an Automation AddictI’m a bit of an automation addict myself, but the horse I picked to ride has fallen out of favor. Nonetheless, I still use it heavily.1700, Schauspielhaus, Speed up Your Java by Turning it into BinaryJohn is a great speaker and industry veteran, and this talk has a provocative topic, so it is sure to be worthwhile.&amp;nbsp;One unique aspect of this conference is its location: a top-tier amusmement park. Think of it as a smaller mashup of Disney’s Epcot and Magic Kingdom, with German sensibilities. After the first day of the conference, some of the rides will be open to conference attendees. My favorite was Winja’s force. This is a relatively mellow roller coaster with a twist, literally. The car you sit in can rotate as it glides along the rails.Wednesday, 25 March 20150900, Quantum 3, Developing Native Mobile Apps Using JavaScriptThis is a bit outside of my bailiwick, but my friend Hazem Saleh is a great speaker and strong proponent of Open Source. He’s also a JSF Expert Group member.1000, Schauspielhaus, HTTP 2.0 Comes to Java EEThis is my second session, and I’ll explain what’s in store for Servlet 4.0, with a special view towards HTTP/2.If I wasn’t speaking, I’d definitely attend Sven Peters’s Coding Culture session in Wintergarden. First off, Atlassian makes much better products than GitHub. Second, Sven is an excellent speaker, and third the talk is likely to be keynote worthy. I’m not glad to be up against him in the schedule.1100, Wintergarden, Enterprise and Internet of ThingsThe Tuesday plenary is by Dr. Mark Little, who is doing a great job driving Java EE forward at JBoss. I normally don’t go in for IoT sessions, but Mark is sure to make it interesting.1300, Schauspielhaus, Java EE Security: Let’s Make Something UsefulDavid Blevins is a strong community voice for improving Java EE, and security is one of the most challenging areas to improve. You can tell it’s hard just by how long it’s taken for the community to get up enough steam to tackle it in a proper JSR. Well, we have one now: JSR-375, and David will tell us how we can make the most of it.1400, Quantum 4, Productive, Effective Development? You Weak Minded fool!Simon Maple has done a great job building the Virtual JUG into a force for good in the Java Community. He is well positioned to deliver this kind of talk thanks to his role at ZeroTurnaround.1500, Quantum 1, Softwarequalität steigernThis appears to be a survey talk about how to effectively use some popular tools in practice to improve software quality. I’ve never seen Andreas G¨nzel talk, but the topic is interesting to me.1600, Quantum 4, Puppet für EntwicklerNow that Docker is all the rage, I’ll be interested to see what’s new with Puppet, or at least learn how these two popular sysadmin technologies relate to eachother. As with the previous talk, I’ve not seen Sebastian Hempel speak before this.Thursday, 26 March 2015As mentioned in my previous entry, Oliver Szymanski and I are presenting an entry in the training day: Java EE 7 from an HTML5 Perspective.JavaLand was great fun and very professionally enriching last year. This year promises to be even more so. I hope to see you there!</summary></entry></feed>